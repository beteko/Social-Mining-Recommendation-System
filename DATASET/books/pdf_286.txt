nouvelle formalisation changements ontologiques composés complexes mariem mahfoudh laurent thiry germain forestier michel hassenforder université haute alsace frères lumière 68093 mulhouse france mariem mahfoudh laurent thiry germain forestier michel hassenforder résumé évolution ontologie processus indispensable cycle exprimée définie changements ontologiques différents types élémentaires composés complexes changements plexes composés utiles aident utilisateur adapter ontologie perdre détails changements élémentaires pendant cachent derrière formalisation sophistiquée puisqu affectent plusieurs entités ontologiques peuvent causer inconsistances ontologie évoluée adresser cette problématique article présente nouvelle formalisation changements ontologiques composés complexes basée grammaires graphes typés cette formalisation appuie approche algébrique simple pushout transformation graphes possède principaux avantages fournir nouvelle formalisation mettant contrôler transformations graphes éviter incohérences manière priori simplifier définition changements composés complexes réduisant nombre changements élémentaires nécessaires application introduction évolution ontologie sujet apparition méthodologies construc ontologies avéré indispensable penser maintenir faire évoluer tologies après construction assurer réutilisation continuité besoin rapidement développé prolifération ontologies large utilisation titre exemple depuis janvier versions ontologie ontology meuses ontologies publiées raison version ainsi définir gérer processus évolution plusieurs méthodologies proposées littérature klein stojanovic djedidi aufaure khattak premiers travaux pensé définir évolution ontologie définition proposée stojanovic évolution ontologie adaptation temps ontologie besoins changement propagation cohérente changements artefacts dépen dants cette définition ouvert débat signification changements ontologiques geneontology ontology archive nouvelle formalisation changements ontologiques leurs formalisations leurs types klein stojanovic ainsi changement logique modification plusieurs entités ontologiques classe propriété axiome individus viser modification structure ontologie ajout classe ajout propriété parle enrichissement ontologie viser égale ajout individus parle alors peuplement ontologie changements logiques souvent trois types stojanovic changements élémentaires représentent opération primitive décomposable affecte seule entité ontolo gique renommer classe changements composés composites affectent entité ontologique voisins suppression classe changements complexes expriment enchainement plusieurs changements élémentaires composés fusion classes effet changements composés complexes changements utiles demandés utilisateur englobent plusieurs modifications seule opéra permet adapter ontologie manière facile perdre détails changements élémentaires klein cependant définition formalisation changements tâches triviales comme application fecter cohérence ontologie types cohérence généralement distingués littérature cohérence conceptuelle réfère règles structurelles contraintes langage représentation ontologie inexistence concepts isolés rence sémantique réfère cohérence logique ontologie comporter contradictions logiques avoir relations contradictoires entre concepts effet préservation consistance ontologie résolution incohérences résultantes application changements ontologiques encore problématiques suffisamment étudiées ainsi proposons article nouvelle formalisation changements ontologiques composés complexes permettant éviter inconsistances manière priori utilisant concepts grammaires graphes typés réduire nombre changements élémentaires constituant changements composés complexes changements étudiés traitent niveau structurel ontologie enrichissement ontologie aussi niveau assertionnel peuplement ontologie reste article organisé comme section présente horizon principales approches évolution ontologie section introduit concepts grammaires graphes section propose nouvelle formalisation changements ontologiques composés complexes enfin conclusion synthétise travail présenté donne perspectives envisagées nombreuses approches proposées littérature définir implémenter processus évolution ontologies tableau présente certaines approches préci langages utilisés implémentation gestion inconsistances leurs spécificités ainsi pouvons observer différents langages étudiés stojanovic luong dieng kuntz klein djedidi aufaure basant langages plusieurs changements ontologiques définis férentes classifications changements proposées stojanovic klein ainsi certains travaux intéressés étude changements élémentaires mahfoudh mahfoudh autres traité également changements composés complexes djedidi aufaure javed travaux focalisés richissement ontologies klein autres étudié aussi peuplement ontologies luong dieng kuntz djedidi aufaure mahfoudh résolution inconsistances encore insuffisamment étudié effet certaines approches ignoré comme intéressés autres problématiques comme exemple gestion versions ontologies hartung autres travaux focalisés plutôt identification inconsistances résoudre gueffaz certains chercheurs intéressés également résolution inconsistances djedidi aufaure luong dieng kuntz javed cependant approches proposées admet processus postériori traitement inconsistances nécessite utilisation ressource externe raisonneur vérifier consistance ontologie évoluée éviter utilisation raisonneur externe mahfoudh proposé approche priori résolution inconsistances basée grammaires graphes typés cependant travail présente changements élémentaires article posons utiliser formalisme définir changements composés complexes approches langages ontologies implémen tation gestion inconsistances spécificités stojanovic framework identification certaines consistances stratégies proposées tologiste résoudre consistances processus global évolution tologies sauvegarde versions ontologie évoluée traçabilité processus lution ensemble contraintes hérence dépend fortement langage klein ontoview promptdiff identification résolution inconsistances approche gestion changements ontologies distribuées identification différence entre versions ontologie évoluée sauvegarde traçabilité gements ontologiques djedidi aufaure prototype evoal identification inconsis tances utilisant raison pellet approche basée patrons conception évaluation qualité ontologie évoluée approche nécessitant activités lourdes gueffaz prototype identification inconsis tances utilisant checker nusmv approche évolution ontologies clock change ontology basée modèle checking approche nécessitant transformation ontologies langage nusmv hartung biomedical ontologies outil conto application identification différence entre versions ontologie évoluée approche basée résultat mapping automatique calculé règles change operation nerating khattak plugin gérer inconsistances utilisant stoja novic approche gestion versions tologies proposition nouveau formalisme setpi calcul modéliser évolu ontologies formalisation changements mentaires composés complexes nouvelle formalisation changements ontologiques mahfoudh implémentation outil éviter inconsistances règles réécriture graphes approche priori résolutions consistances proposition nouveau formalisme grammaires graphes typés traitement changements élémen taires approches évolution ontologie grammaires graphes typés grammaires graphes également appelées réécriture graphes forma lisme mathématique représenter gérer graphes elles permettent modification graphes règles réécriture précisant quand comment faire changements grâce concepts outils elles proposent grammaires graphes utilisées plusieurs branches informatique comme exemple modélisation systèmes ciels théorie langages formels ehrig elles récemment introduites domaine ontologies donné naissance travaux traitant forma lisation ontologies modulaires aquin représentation graphes resource description framework braatz brandt fusion ontologies mahfoudh 2014a dressons horizon définitions concernant fondements théoriques réécriture graphes graphe graphe structure composée ensemble nœuds arêtes application attache nœuds source destination chaque arête graphe attribué graphe attribué graphe étendu ensemble attributs fonction attribution représentant ensemble parties fonction évaluation ainsi chaque arête avoir ensemble attributs valeurs seront données morphisme graphes soient graphes morphisme graphes application définie applications morphisme préserver structure alors typage typage morphisme graphe graphe correspond types nœuds types arêtes grammaires graphes typés grammaire graphe structure mathéma tique définie graphe initial appelé aussi graphe graphe précisant information représentée graphe nœuds arêtes ensemble règles réécriture appelées aussi règles production trans formations graphes règle réécriture paire graphes pattern représente condition règle réécri décrit structure trouver graphe pouvoir appliquer règle right représente condition règle réécriture mahfoudh remplacer règles peuvent également avoir conditions supplémentaires appelées gative application conditions graphes pattern définissant conditions devant vérifiées règle réécriture puisse appliquée transformation graphe consiste ainsi définir comment graphe transformé nouveau graphe cette transformation réalisée selon types approches rozenberg approches ensemblistes replacement replacement approches algébriques travail utilisons approches algébriques basées concept pushout théorie catégories ehrig théorie catégories catégorie structure composée collection ensemble morphismes fonction notée alors composition phisme identité chaque objet composition associative avoir identité comme élément neutre exemple catégorie graph représente ensemble graphes morphismes graphes éléments présentés suite appuient cette catégorie pushout soient trois objets catégorie graphes morphismes pushout consiste objet morphismes morphisme morphisme partir variantes proposées réécriture graphes simple pushout double poushout ehrig travail seule proche considérée générale permet application différents changements ontologiques mahfoudh 2014b ainsi appliquer règle réécriture graphe initial selon méthode revient trouver morphisme mettant identifier graphe graphe correspond match partie appliquer règle réécriture graphe remplaçant supprimant arêtes suspendues arêtes extrémité ainsi manière générale avons formalisation changements ontologiques modèle transformation graphes représenter ontologies formalisme grammaires graphes considérons ontologie comme graphe possédant relation typage graphe représente modèle ontologie conforme standards retenu comme modèle ontologies ainsi types nœuds considérés class roperty objectproperty dataproperty individual datatype restriction types arêtes correspondent axiomes utilisés relier différentes entités subclassof equivalentto range domain nouvelle formalisation changements ontologiques changements ontologiques formalisés ensemble règles réécriture addclass removedataproperty renameindividual cette définition étendue correspond ensemble changements dérivés ajoutés changement ontologique corriger éventuelles inconsistances figure montre représentation application règle réécriture gement ontologique addindividual permet ajouter individu pascal cifiant classe person règle assure grâce redondance données empêche application changement individu existe ontologie person class règle réécriture graphe person class memberof pascal individual pascal individual person class person class memberof individual individual pascal individual memberof memberof règle réécriture changement addindividual formalisation changements ontologiques cette section présente notre formalisation changements ontologiques composés plexes grammaires graphes typés avant détailler cette formalisation brève introduction changements élémentaires indispensable mieux comprendre reste article ainsi changements élémentaires englobent changements renommage ajout suppression certains concepts affectent seule entité ontologique dépendent autres entités tableau présente quelques changements élémen taires adressés notre travail concepts dépendant noter règles réécriture déduites partir interdépendances exemple change élémentaire addindividual présenté section mahfoudh renameclass adddataproperty adddisjointclasses adddatapropertyassertion addsubobjectproperty addcardinalityrestriction addallvaluesfromrestriction removeindividual removeequivalentobjectproperties matrice dépendance entre changements élémentaires entités ontologiques changements ontologiques composés changements ontologiques composés appelés aussi composites affectent entité ontologique voisins alors formés plusieurs règles réécriture règle présentant changement souhaité utilisateur changement principal autres règles présentant changements dérivés ajoutés préserver consistance ontolo effet ordre règles réécriture primordial plupart changements tableau présente interdépendance entre changements organisés matrice changements valeur élément matrice indique application change relié ligne implique application changement colonne addclass removeclass removeobjectproperty removedataproperty removecardinalityrestriction removesomevaluesfromrestriction removeallvaluesfromrestriction matrice dépendance entre changements ontologiques composés nouvelle formalisation changements ontologiques ainsi changement ontologique removecardinalityrestriction permet supprimer cardinalityrestriction définie classe objectproperty formalisé règles réécriture première représente changement dérivé removeassertionobjectproperty supprime toutes assertions définies deuxième règle définit règle réécriture principale assurant suppression restriction changement ontologique removeobjectproperty supprime objectproperty toutes dépendances ontologie figure présente règles réécriture définissant changement ainsi premières règles décrivent changements devant appliqués préserver consistance ontologie dernière règle présente règle réécriture principale ainsi restrictions définies propriété doivent supprimées appliquant règles suivantes removeallv aluesrestri ction removesomev aluesrestriction removehasv aluerestriction removecardinalityrestriction toutes objectpropertyassertion rencent objectproperty doivent également supprimées removeobjectproperty chd1_removeallvaluesfromrestriction somevaluesfrom onproperty objectproperty objectproperty chd2_removesomevaluesfrom restriction allvaluesfrom onproperty objectproperty objectproperty chd3_removehasvaluerestriction hasvalue onproperty objectproperty objectproperty chd4_removecardinalityrestriction cardinalityrestriction onproperty objectproperty objectproperty chd5_removeassertionobjectproperty individual objectpropertyassertion ch_removeobjectproperty objectproperty individual individual iriobjprop opiri individual règle réécriture changement ontologique removeobjectproperty changements ontologiques complexes tableau présente ensemble changements complexes abordé travail changements composés comme exemples changements complexes présentons changements pullup class mergeclass splitclass ainsi changement pullupclass permet monter classe hiérarchie classes attacher parents super classe précédente implique classe subclass classe infère propriétés figure présente règle réécriture définissant changement ainsi changement dérivé removeobjectpropertyassertion vérifie classe possède individus partagent objectpropertyassertion propriétés classe toutes assertions doivent supprimées changement removedataproperty assertion supprime toutes datapropertyassertion définies individus classe dataproperties liées classe mahfoudh pullupclass mergeclasses splitclass splitobjectproperty mergeobjectproperties matrice dépendance changements ontologiques complexes pullupclass chd_removeobjectpropertyassertion ch_pullupclass objectpropertyassertion individual iriobjprop opiri restriction memberof hasrestriction memberof objectproperty onproperty class class subclassof class subclassof class class subclassof class subclassof class class individual individual restriction hasrestriction memberof onproperty class individual chd_removedatapropertyassertion datapropertyassertion individual memberof dataproperty class class domain class individual memberof class domain class memberof dataproperty objectproperty règle réécriture changement pullupclass changement mergeclasses fusionne classes tantes ontologie nouvelle classe nécessite application règles réécriture addclass removeclass removeclass cependant préserver consistance ontologie avant supprimer toutes leurs propriétés axiomes doivent attachés formellement appli règle réécriture addsubclass appliquer nouvelle formalisation changements ontologiques addsubclass répéter processus appli addequivalentclasses répéter processus changement splitclass cnew1 cnew2 divise classe existante ontologie nouvelles classes cnew1 cnew2 nécessite alors application règles réécriture addclass cnew1 addclass cnew2 removeclass comme changement mergeclasses changement splitclass nécessite avant suppression classe attacher toutes propriétés axiomes classes cnew1 cnew2 discussion formalisme grammaires graphes offre représentation simple changements ontologiques tableau montre exemples changements addobject property pulldownclass représentés formalisme proposé travail djedidi aufaure djedidi aufaure changements considé respectivement comme composés complexes premier changement composé trois changements élémentaires deuxième nécessitent comme autres changements ontologiques utilisation raisonneur pellet identifier manière posteriori inconsistances notre travail changements considérés comme élémentaires puisqu composés seule règle réécriture préserver consistance ontologie inconsistances gérées manière priori grâce utilisation negatives applications conditions changement ontologique djedidi aufaure formalisme proposé addobjectpro perty changement composé trois changements élémen taires addobjectproperty adddomain addrange changement formalisé seule règle réécriture évite redondance données rhslhs class range class class domain objectproperty class objectproperty objectproperty pulldownclass descend classe hiérar classes attacher comme classe précédente classe changement composé changements élémen taires addsubclass removesubclass classe super classe changement formalisé seule règle réécriture évite contradiction axiomes rhslhs class class subclassof class subclassof class class subclassof class subclassof class class disjointwith formalisation changements ontologiques selon djedidi aufaure approche proposée mahfoudh conclusion avons présenté article nouvelle formalisation changements ontolo giques composés complexes basée grammaires graphes typés approche brique simple pushout transformation graphes utilisation approche offre plusieurs avantages particulier permet définir simplement formellement règles réécriture correspondant changements ontologiques assure contrôle transformations graphes évitant incohérences manière priori réduit nombre changements élémentaires nécessaires appliquer changements complexes composés noter formalisation changements implémentée outil attributed graph grammar testée ontologies taille duite effet étape coûteuse temps ressources reconnaissance graphe partir graphe plupart changements possèdent taille réduite avéré temps exécution assez limité titre exemple graphe ontologie composé nœuds exécution changement complexe splitclass cnew1 cnew2 seulement millisecondes composé nœuds mieux évaluer performance notre approche travaillons actuel lement évaluation influence taille ontologies grande taille références braatz brandt modify semantic application architecture algebraic graph transformations international conference engineering workshops springer aquin doran motta tamma towards parametric ontology modularization framework based graph transformation workshop modular logies djedidi aufaure evoal ontology evolution approach guided pattern modeling quality evaluation foundations information knowledge systems springer ehrig introduction algebraic theory graph grammars survey graph grammars their application computer science biology springer ehrig montanari rozenberg schneider graph transformations computer science geschäftsstelle schloss dagstuhl ehrig pfender schneider graph grammars algebraic approach switching automata theory conference record annual symposium gueffaz pittet rampacek nicolle inconsistency identifica dynamic ontologies based model checking international conference information systems technologies scitepress hartung conto generation complex evolution mappings science ontologies journal biomedical informatics nouvelle formalisation changements ontologiques javed abgaz ontology change management identification change patterns journal semantics khattak latif change management evolving ontologies knowledge based systems klein change management distributed ontologies thesis vrije versiteit amsterdam amsterdam netherlands klein component based framework ontology evolution workshop ontologies distributed systems zhang zhang modeling ontology evolution setpi information sciences algebraic approach single pushout graph transformation theoretical computer science luong dieng kuntz based approach semantic annotation evolu computational intelligence mahfoudh forestier thiry hassenforder consistent ontologies lution using graph grammars knowledge science engineering management springer mahfoudh forestier thiry hassenforder 2014a approche formelle fusion ontologies grammaires graphes typés conférence extraction gestion connaissances hermann éditions mahfoudh thiry forestier hassenforder 2014b algebraic graph transfor mations merging ontologies model engineering springer rozenberg handbook graph grammars computing graph transformation volume world scientific stojanovic methods tools ontology evolution thesis university karlsruhe germany summary ontology evolution essential process ontology cycle defined ferent types ontology changes basic composite complex complex composite changes useful sense adapt ontology without getting details basic changes however behind sophisticated formalization since affect several ontological entities cause inconsistencies evolved ontology address issue article presents formalization posite complex ontology changes based typed graph grammars formalization based algebraic approach single pushout graph transformations advantages provides formalization control graph transformations avoid inconsistencies priori manner facilitates description composite complex changes while reducing number rewriting rules required apply sémantique ontologies nouvelle formalisation changements ontologiques composés complexes mariem mahfoudh laurent thiry germain forestier michel hassenforder