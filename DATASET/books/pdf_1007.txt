Biclustering d'expression génique à base de données sur Jésus S. Aguilar locale Nearness-Ruiz *, Domingo Savio Rodriguez * Dan A. Simovici ** * BIGS Bioinformatique Séville, Université de Séville, Espagne dsavio@lsi.us.es, ** Univ. du Massachusetts Boston, Massachusetts 02125, États-Unis dsim@cs.umb.edu~~V~~singular~~3rd Résumé. L'analyse des données d'expression des gènes dans l'ADN des puces est un outil important utilisé dans la recherche en génomique dont les principaux objectifs vont de l'étude de la fonctionnalité des gènes spécifiques et de leur participation dans le processus biologique à la reconstruction des conditions de maladies et leur pronostic ultérieur. des données d'expression génique sont disposées dans des matrices où chacun correspond à des gènes d'une rangée et chaque colonne représente une condition expérimentale spécifique. Les techniques biclustering ont pour but de trouver des sous-ensembles de gènes qui montrent les modèles d'activité similaires sous un sous-ensemble de conditions. Notre approche consiste d'un algorithme de biclustering basé sur la proximité locale. L'algorithme recherche pour biclusters d'une manière gourmande, en commençant par deux gènes biclusters et comprenant autant que possible en fonction d'un seuil de distance qui garantit la similitude des comportements de gènes. 1 Introduction La technologie de l'ADN microarray représente une excellente occasion d'étudier l'information génomique dans son ensemble, afin que nous puissions analyser les relations entre les milliers de gènes simul- tanément. Les expériences réalisées sur les gènes dans des conditions différentes produisent les niveaux d'expression de leur ARNm transcrit et ces informations sont stockées dans des puces à ADN. Un bicluster est un sous-ensemble de gènes qui montrent les modèles d'activité similaires sous un sous-ensemble de condi- tions. La recherche sur biclustering a commencé en 1972 avec les travaux de Hartigan, où la façon de diviser une matrice en sous-matrices avec la variance minimale a été étudiée (Hartigan et al., 1972). Dans cette approche, le bicluster parfait était la sous-matrice formée par des valeurs constantes, à savoir, avec une variance égale à zéro. L'algorithme de Hartigan, appelé cluster directe, divise la matrice de données dans un certain nombre de biclusters, avec la valeur de variance minimum, donc le fait de trouver un certain nombre de sous-matrices égal au nombre d'éléments de la matrice est évitée. Une autre façon de rechercher biclusters est de mesurer la cohérence entre leurs gènes et condi- tions. Cheng & Church (Cheng et al., 2000) a introduit une mesure, le résidu quadratique moyenne (MSR), qui calcule la similitude entre les valeurs d'expression au sein du bicluster. Les idées de Cheng et l'église ont été développées par Yang (Yang et al., 2002, 2003) qui a traité les valeurs manquantes dans les matrices. En conséquence de cette approche un algorithme nommé - 681 - RNTI-E-6 Basé sur biclustering Local a été conçu Nearness floc. D'autres travaux (par exemple (Wang et al., 2002)) reposent sur une valeur de qualité ainsi calculé à partir des valeurs d'expression de biclusters, afin de mesurer leur cohérence. D'autres alternatives à la recherche de biclusters ont été étudiés au cours des dernières années. On peut aussi considérer qu'une valeur dans la matrice de données est la somme des contributions des biclusters de dif- férents. Sur la base de l'idée précédente, Lazzeroni (Lazzeroni et al., 2000) présente les modèles carreaux, dans lequel la matrice de données est décrit comme une fonction linéaire de couches correspondant à ses biclusters et montre comment estimer un modèle en utilisant un procédé de maximisation itérative. Shamir (Shamir et al., 2002) propose une nouvelle méthode pour obtenir biclusters à partir d'une combinaison de modélisation graphique théorique et statistique des données. Dans ce modèle, un gène répond à une condition si son niveau d'expression change de manière significative à cet égard aux sorcières condition à son niveau mal nor. Dans un ouvrage récent (Liu et al., 2004), une généralisation du modèle OPSM, présenté par (Ben et al., 2002), est présenté. Le modèle de OPSM est basée sur la recherche des biclusters dans lequel un sous-ensemble de gènes induisent une commande similaire linéaire le long d'un sous-ensemble de conditions. Certaines des techniques de recherche pour struct spécifiques Ures dans la matrice de données pour trouver biclusters: crée une méthode pour les gènes et les conditions regroupement simultanément basées sur la recherche de modèles de « matrices » dans damiers de données d'expression génique (Gerstein et al., 2003). Auparavant, les données sont traitées par la normalisation dans un modèle de cadre spectral (plusieurs schémas tous construits autour de l'idée de mettre les gènes sur la même échelle afin qu'ils aient le même niveau moyen de expres- sion dans des conditions, et même pour les conditions) . techniques de calcul évolutionnistes ont également été utilisés dans ce domaine de recherche. Ces techniques utilisent les aspects de la sélection naturelle dans les sciences informatiques, y compris les algorithmes génétiques, programmation génétique et des stratégies évolutives. In (Aguilar et al., 2005) une technique évolutive, basée sur la recherche des biclusters suivant une stratégie de recouvrement séquentiel et en mesurant le résidu quadratique moyenne, est utilisé. Dans ce travail, nous proposons un algorithme pour obtenir biclusters de haute qualité basée sur ness quasi locale, à savoir, biclusters avec le nombre maximum de gènes et dans laquelle la valeur absolue de la différence entre les deux valeurs d'expression de toute paire de gènes sous la même condition ne dépasse pas une certaine valeur. Par conséquent, nous considérons que deux gènes dont la distance entre eux ENTRE est inférieur à un seuil par rapport à certaines conditions expérimentales, ont un comportement similaire en ce qui concerne ces conditions. Pour trouver le seuil de distance appropriée, nous avons réalisé une étude statistique préliminaire afin de permettre l'algorithme de découvrir biclusters de haute qualité. La qualité est en outre évalué au moyen du résidu quadratique moyenne, de sorte que d'une analyse comparative avec d'autres techniques est possible. Le document est organisé comme suit: dans la section 2, les définitions relatives à biclustering sont présentés; l'algorithme est représenté à la section 3; à la section 4, nous décrivons la méthode utilisée et illustrons par un exemple simple; résultats expérimentaux sont présentés à la section 5, en comparant la qualité de ceux générés par Cheng & Église et les algorithmes de Aguilar & Divina; enfin, les conclusions les plus intéressantes et les orientations de recherche futures sont résumées à la section 6. 2 Définitions Les données d'expression des gènes sont disposés dans des matrices. Une matrice est définie comme une triple M = (G, C, ℓ), où G, C sont deux ensembles finis dénommés l'ensemble des gènes et l'ensemble des conditions respectivement, et ℓ: G × C - → ℜ est la fonction de niveau. Le nombre réel de ℓ (g, c) est également désigné par <g, c> et représente le niveau d'expression du gène G dans la condition spécifique c. - 682 -RNTI-E-6 J. S. Aguilar-Ruiz et al. Ensuite, les principaux concepts de notre approche sont définis et des exemples pour les clarifier sont fournis. Définition 1 Soit M = (G, C, ℓ) une matrice formée par un ensemble de gènes, G, et un ensemble de conditions, C. Nous disons qu'une paire d'ensembles non vides (I, J) est un δ-bicluster, si je ⊆ G, J ⊆ C et J = {c ∈ C | ∀g, g '∈ I, | <G, c> - <g ', c> | ≤ δ} La valeur absolue de la différence entre deux valeurs d'expression de toute paire de gènes dans le bicluster sous la même condition ne soit pas supérieure à un seuil δ. Définition 2 Soit (I, J) un bicluster. Le résidu R d'un élément aij du bicluster (I, J) est R (aij) = aij - aij - aij - Aij où aij est la moyenne de la i-ième ligne dans le bicluster, Aij la moyenne de la jème colonne dans la bicluster et aij est la moyenne de tous les éléments dans le bicluster. Le résidu quadratique moyenne d'un MSR bicluster (I, J) est MSR (I, J) = 1 | I || J | Σ i ∈ I, j∈J R2 (aij) Le MSR est la variance de l'ensemble de toutes les valeurs dans la bicluster, ainsi que la variance de la ligne moyenne et la variance de la colonne moyenne. Cette valeur est indicative de la cohérence des valeurs entre les lignes et les colonnes. Plus le MSR est, plus la cohérence. Exemple 1 Considérons la matrice M = (G, C, ℓ), où G = {g1, g2, g3, g4, g5}, C = {c1, c2, c3, c4} et ℓ est défini par: (ℓ ( gi, cj)) =   9 3 2 1 7 8 1 4 1 6 2 2 5 5 1 7 2 1 3 1   Si le thresho ld δ est 5, certains des biclusters sont B1 = {{g1, g3, g4}, {c1, c3, c4}}, B2 = {{g1, g2, g3}, {c2, c3, c4}}, et B3 = {{g3, g4, g5}, {c1, c2, c3}}, où B1 (gi, cj) =   1 3 2 1 2 2 5 5 7   B2 (gi, cj) =   9 3 2 8 1 4 6 2 2   B3 (gi, cj) =   1 6 2 5 1 5 2 1 3   Dans tous les biclusters, la valeur absolue de la différence entre les valeurs d'expression de chaque paire de des gènes est inférieure ou égale au seuil δ = 5, dans les mêmes conditions. Notre objectif est d'obtenir biclusters avec le nombre maximum de gènes et conditions et avec la valeur minimale de MSR. - 683 - RNTI-E-6 Basé sur biclustering local 3 Nearness algorithme Notre approche, nommée BLN (biclustering par la section locale Proximités), est basée sur la proximité locale, à savoir, dans la définition de δ-bicluster fourni ci-dessus, Def. 1. Son objectif est d'obtenir différents biclusters avec le nombre maximum de gènes de sorte que tous ont les deux propriétés suivantes: • la différence entre les deux valeurs d'expression de toute paire de ces gènes dans les mêmes conditions dans le bicluster ne dépasse pas δ; • le nombre de conditions de chaque bicluster est pas inférieure à λ. L'algorithme illustré sur la figure 1, se compose de deux phases. Dans la première partie, nous obtenons un ensemble de biclusters valides avec seulement deux gènes (2g_Bicluster), de sorte que l'algorithme analyse toutes les paires possibles de gènes dans la matrice de données afin de les trouver, comme on peut le voir dans la figure 1 (ligne 9) . Cette première série de bicluster sera utilisé par l'algorithme dans la deuxième partie. Nous avons conçu une structure de données d'arbre spécial dans lequel ces biclusters sont stockés. Dans cet arbre, les nœuds représentent des conditions et les feuilles sont des groupes de gènes de 2g_Biclusters qui ont un groupe commun de conditions, à savoir., Pour les atteindre, nous devons suivre le même chemin dans l'arbre. La raison pour laquelle nous utilisons cette structure est de minimiser la quantité de mémoire utilisée pour le stockage de ces premiers biclusters (ils peuvent être plusieurs milliers) et de réduire le temps d'exécution. Le but de la seconde partie 1 Mode opératoire: BLN 2 Entrée: 3 M (matrice de données M = (G, C, ℓ)) 4 δ (différence maximale entre deux valeurs d'expression) 5 λ (longueur minimale de l'ensemble des conditions pour chaque bicluster) 6 sortie: 7 B (ensemble final de biclusters) 8 Méthode: 9 Initialize B pour contenir tous les biclusters (i, j) avec | I | = 2 et | J | ≥ λ 10 S = ∅ 11 répétition 12 B '= B - S 13 Useful_Genes = {g ∈ I | ∀ (I, J) ∈ B '} 14 S = B 15 forEach bicluster (I, J) ∈ B' 16 pour chaque g '∈ (Useful_Genes - I) 17 si pour tout g' '∈ I il y a un bicluster ({g ', g' '}, J') avec J J ⊂ '18 Add (I ∪ {g'}, J) B 19 jusqu'à | B | = | S | 20 fin BLN Fig. 1 - L'algorithme de BLN. est de créer de nouveaux biclusters contenant plus de deux gènes. Cette partie est itérative et suit une méthodologie avide d'élaguer l'espace de recherche. A chaque itération un groupe de nouveaux biclusters est - 684 -RNTI-E-6 J. S. Aguilar-Ruiz et al. établi. Les extrémités de processus lorsque aucun nouveau bicluster est obtenu (ligne 19, le nombre de biclusters n'a pas modifié). Dans chaque itération, l'ensemble des biclusters qui a été obtenu dans le précédent est analysé, comme on peut le voir dans la ligne 15 (dans la première itération BLN commence à travailler avec les biclusters obtenus dans la première phase). Pour créer un nouveau bicluster d'un autre, nous devons ajouter de nouveaux gènes. Ces nouveaux gènes sont regroupés dans un ensemble appelé gènes utiles, qui est formé par les gènes de tous les biclusters de l'ensemble en cours d'analyse, moins les gènes de la bicluster qui est en cours de traitement à ce moment (lignes 16 à 18). Pour ajouter un gène, g », à un bicluster (I, J), BLN doit vérifier que pour chaque gène dans le bicluster, g », un 2g_Bicluster formé par g » et g » existe et son groupe de conditions associées doit soit supérieure ou égale aux conditions de J, soit les conditions de la nouvelle bicluster possible J »inclut celle de l'ancien I (ligne 17). De cette façon, que la BLN assure différence entre la valeur d'expression de la nouvelle génération et les autres est toujours inférieure à δ. Un exemple simple basé sur la matrice de données M = (G, C, ℓ) décrit dans l'exemple 1. On applique à BLN M en utilisant δ = 5 et λ = 2. Après la première phase de l'algorithme, nous avons obtenu un groupe de biclusters 2 du gène indiqué dans le tableau 1. La seconde partie analysera tous les bicluster gènes Conditions Conditions Genes {1, 2} {2, 3, 4} {2, 4} {1, 3, 4} {1, 3} {1, 2, 3, 4} {2, 5} {1, 3, 4} {1, 4} {1, 3, 4} {3, 4} {1, 2, 3, 4} {1, 5} {1, 3, 4} {3, 5} {1, 2, 3, 4} {2, 3} {2, 3, 4} {4, 5} {1, 2, 3} TAB. 1 - Exemple de génération 2g_Biclusters. de ce groupe d'essayer de générer de nouveaux. Nous avons choisi une de cette bicluster préliminaire: B1 = {{g1, g5}, {c1, c3, c4}} B1 (gi, cj) = (1 3 2 2 3 1) Dans ce cas, le groupe de Useful_Genes sera { g2, g3, g4}. Pour chaque gène de cet ensemble, nous essayons de créer une nouvelle vérification de bicluster si elle peut faire partie de la bicluster nous traitons, B1. Nous commençons par g2, et comme le biclustering étant considéré est {g1, g5}, nous vérifions si {g2, g1} et {g2, g5} sont biclusters, puis si ces biclusters ont les conditions pour inclure g2 dans {g1 , g5}. Conditions Genes {2} {1, 2, 3, 4} {2, 5} {1, 3, 4} {1,5} {1,3,4} La première combinaison de gènes, (g2, g1), génère un bicluster avec un groupe de conditions iN- compatibles avec les conditions de B1, donc nous ne pouvons pas ajouter g2 au bicluster. La même chose se produit avec le g4 gène. Conditions de gènes {4, 1} {1, 3, 4} {4, 5} {1, 2, 3} {1,5} {1,3,4} - 685 - RNTI-E-6 Basé sur biclustering locale Cependant Proximités, le g3 gène est approprié pour être inclus dans le bicluster. Conditions Genes {3, 1} {1, 2, 3, 4} {3, 5} {1, 2, 3, 4} {1,5} {1,3,4} L'ensemble des conditions {c1, c2 , c3, c4} est compatible avec les conditions de B1: {c1, c3, c4} pour chaque paire de gènes formés par chaque gène de B1 et le g3 génique des Useful_Genes fixés. En conséquence, un nouveau bicluster est créé, Bnew = {{g1, g3, g5}, {c1, c3, c4}}, où (Bnew (gi, cj) =   1 3 2 1 2 2 2 3 1   4 méthode Dans cette section, nous décrivons la méthode utilisée pour obtenir biclusters basé sur la proximité locale en utilisant le BLN algorithme. l'objectif est de générer le plus grand nombre de biclusters avec le nombre maximum de gènes et une faible valeur de MSR. pour ce faire, nous devons d'abord déterminer la valeur correcte des paramètres de l'algorithme, en accordant une attention particulière au seuil de distance entre les valeurs d'expression. δ Comme cette valeur est critique, nous avons soigneusement la méthode afin de fournir biclusters valides et de haute qualité . Nous avons développé nos expériences avec un ensemble de données bien connues:. le monie Saccharomyces ensemble de données d'expression du cycle cellulaire de visiae la levure DataSet consiste d'une matrice de données composée par 2884 gènes (lignes) et 17 conditions expérimentales (colonnes) Nous devons recueillies statistiques. informations sur cette matrice de données pour décider par mètres sont adaptés à nos besoins. Si l'on analyse les données de levure matrix on trouve que la distance maximale entre les valeurs d'expression est 596. Nous considérons que la moitié de cette valeur, qui est, 298, comme la distance maximale que nous allons permettre, δ_max. Nous avons divisé cette valeur par 100, créant ainsi 100 intervalles différents pour δ. L'étape suivante consiste à exécuter une version spéciale de BLN dont le but est d'obtenir des informations statistiques sur le nombre de biclusters générés après les première et deuxième parties. Cette version a procédé à un test pour chaque δ: 2, 98 * i, i allant de 1 à 100 et pour chaque nombre de conditions minimales permis, λ, de 1 à 17. Ces pistes ne sont que la simulation de sorte que le coût de calcul est inférieure à une course de BLN normal. Nous avons enregistré le nombre de biclusters générés après les première et deuxième phases de 100 * 17 situations différentes. De plus, nous informations compilées à la moyenne du nombre de gènes et le nombre maximum de gènes après la deuxième partie. Pour réduire cette quantité de données que nous mettons l'accent sur un certain nombre de conditions minimales allant de 10 à 17. Le nombre de bicluster généré avec ces tests valeurs sont illustrées dans les graphiques de la figure. 2. Le premier graphique (à gauche) montre l'évolution du nombre de différents biclusters c réé pour toutes les valeurs d'essai après la première phase, avec un nombre maximal de biclusters de 364,713 avec δ = 35,76 et λ = 10 et un nombre minimal de biclusters de 10 à δ = 2,98 et λ = 17. Le deuxième graphique (à droite) montre les mêmes informations par rapport à la seconde partie de l'algorithme, générant des prochaines valeurs extrêmes: 10.215.022 avec δ = 35,76 et λ = 10, et 21 avec δ = 2,98 et λ = 17. Il est évident que les conditions restrictives qui rendent le nombre - 686 -RNTI-E-6 JS Aguilar-Ruiz et al. 0 50000 100000 150000 200000 250000 300000 350000 400000 0 5 10 15 20 25 30 35 40 Min Cond. = 10 min Cond. = 11 min Cond. = 12 min Cond. = 13 min Cond. = 14 min Cond. = 15 min Cond . = 16 min Cond. = 17 0 2e + 006 + 006 4E + 6E + 006 8e 006 1e + 007 1.2E + 007 0 5 10 15 20 25 30 35 40 Min Cond. = 10 min Cond. = 11 min Cond. = 12 Cond Min. = 13 min Cond. = 14 Cond Min. = 15 Cond Min. = 16 min Cond. = 17 FIG. 2 - Nombre de biclusters avec différentes valeurs de δ (dans l'axe X) et λ (courbes identifier le nombre minimum de conditions): après la première phase de BLN (à gauche) et après la seconde phase de BLN (à droite), respectivement. Lorsque les augmentations du seuil, le nombre de biclusters fait aussi. Lorsque le nombre minimum de conditions augmente, le nombre de biclusters diminue. - 687 - RNTI-E-6 biclustering basée sur Local Nearness 0 2 4 6 8 10 0 5 10 15 20 25 30 35 40 Min Cond = 10 min Cond = 11 Min Cond = 12 Min Cond = 13 Min Cond.... . = 14 Cond Min. = 15 Cond Min. = 16 Cond Min. = 17 FIG. 3 - Moyenne du nombre de biclusters avec différentes valeurs de δ (axe X) et λ. de biclusters inférieur sont une faible valeur de δ et la forte valeur de λ. En fait, si λ est égal au nombre de conditions expérimentales, alors nous trouverions des grappes au lieu de biclusters, tout en permettant de chevauchement entre les groupes, contrairement aux techniques de clustering traditionnelles. Il vaut la peine de noter que pour chaque paire de valeurs de test, AI et Ài, le nombre de biclusters générés après les première et deuxième parties sont liées, de telle sorte que le dernier est directement proportionnelle à la première dans tous les cas . Nous avons recueilli des informations sur le nombre de gènes, bien que seulement pour la deuxième partie du processus (dans la première partie que nous générons que 2g_Biclusters). Dans la figure 3, nous pouvons observer le nombre moyen de gènes des biclusters pour nos valeurs de test. Il est intéressant de noter que la moyenne des gènes diminue alors que la valeur de δ croît pour tout le nombre minimum de conditions jusqu'à ce que la valeur 25. En effet, le nombre de biclusters augmente avec δ tandis que le nombre de leurs gènes ne change pas. A partir du moment δ a la valeur de 25 le nombre de gènes dans les biclusters se développe et la moyenne ainsi. De δ = 34, le début moyennes de plus en plus. Pour cette raison, nous avons choisi la valeur 35,76 pour nos expériences, car il y a plus de choix pour sélectionner de bons biclusters. Avec δ = 35,76 et λ = la moyenne des 10 gènes atteint sa plus grande valeur. Nous pouvons voir l'évolution du nombre maximum de gènes dans les biclusters de la figure 4. Cette valeur est constante pour toutes les valeurs de test jusqu'à ce que la valeur δ est d'environ 27. A partir de ce moment, nous trouvons biclusters avec plusieurs gènes. Le nombre de gènes atteint sa valeur maximale, 17, avec δ = 35,76 et λ = λ = 11 ou 10 (les deux graphiques sont identiques). La principale conclusion de cette analyse précédente est que le nombre maximum de gènes est atteint avec la valeur δ = 35,76. La valeur correcte pour λ est de 10 ou 11. Nous avons finalement choisi 10 comme le nombre de conditions minimales autorisées car avec δ = 35,76 et λ = 10 l'algorithme génère plus biclusters que avec λ = 11. Une fois les paramètres corrects ont été choisis suivant étape consiste à exécuter BLN et étudier les résultats. 5 Résultats expérimentaux Nous comparons BLN avec l'algorithme Cheng et l'Eglise (CC) et l'algorithme SEBI qui est un algorithme basé sur l'évolution qui extrait biclusters suivant une stratégie de couverture séquentielle (Aguilar et al., 2005). - 688 -RNTI-E-6 J. S. Aguilar-Ruiz et al. 4 6 8 10 12 14 16 18 0 5 10 15 20 25 30 35 40 Min Cond. = 10 min Cond. = 11 min Cond. = 12 min Cond. = 13 min Cond. = 14 min Cond. = 15 Cond Min. = 16 min Cond. = 17 FIG. 4 - Nombre maximum de gènes dans divers biclusters les valeurs de δ (axe X) et λ. Bicluster Genes Conditions MSR Row Variance 433315 17 10 105,87 231,52 462795 15 10 95,69 166,08 548356 15 10 81,56 173,35 682571 16 12 87,10 292,20 755312 14 10 69,85 153,78 847 161 14 10 91,65 355,04 1031000 14 10 89,62 159,25 8604074 14 10 73,84 127,69 9509611 15 10 73,93 182,27 TAB. 2 - Informations sur biclusters générés par BLN. Dans la première colonne chaque bicluster est identifiée par son numéro de génération. Les deuxième et troisième colonnes indiquent le nombre de gènes et conditions, respectivement. La valeur MSR est indiquée dans la colonne quatrième et la dernière colonne est liée à la variance de la ligne. Une fois l'analyse effectuée dans la section précédente, le BLN algorithme est exécuté en utilisant δ = 35,76 et λ = 10. Par conséquent, BLN génère 10.215.022 différents biclusters avec différentes tailles d'ensembles de gènes. Le chevauchement entre biclusters est évidente, et même beaucoup d'entre eux sont inclus dans d'autres, de sorte que seules 9.147 biclusters ont finalement été générés contenant un certain nombre de gènes supérieur ou égal à 14. La première phase de BLN a pris 41 secondes. La deuxième phase, 12.200 secondes (9,684 sans génération graphique et les fichiers génétiques). Le nombre moyen de gènes dans biclusters était 8. Les biclusters générés couvert 93,93% des gènes et 100% des conditions, à savoir, 93,93% des éléments de la matrice d'expression. L'algorithme de BLN a été implémenté en Java et exécuter sur une plate-forme Win XP. Les critères utilisés pour mesurer la qualité de biclusters sont le nombre maximum de gènes, la longueur moyenne minimale résidus au carré, et le nombre maximum de conditions, dans cet ordre. Suite à ces critères que nous avons sélectionné les 100 meilleurs biclusters parmi tous ayant un certain nombre de gènes entre 14 et 17. Les caractéristiques de certains d'entre eux peuvent être observés dans le tableau 2. Dans le tableau 2, les biclusters sélectionnés présente une petite valeur MSR, à savoir, il existe une grande cohé- rence dans les gènes et les conditions. Ce problème similaire peut être observée dans les graphiques - 689 - RNTI-E-6 biclustering basée sur Local Nearness 200 250 300 350 400 1 2 3 4 5 6 7 8 9 10 Bi: 548356 Genes: 15 Conditions: 10 Msr: 81,5601777777778 200 300 350 400 250 1 2 3 4 5 6 7 8 9 10 Bi: 433315 Genes: 17 Conditions: 10 Msr: 105,8735640138408 FIG. 5 - Un exemple de biclusters générés par BLN. Les formes des graphiques montrent la qualité de biclusters. Alg. MSR Vol. Num. des gènes Num. de Cond. CC 204,29 1576,98 166,71 12,09 202,68 204,67 13,20 SEBI 15,44 BLN 70,02 166,84 15,34 10,88 TAB. 3 - Comparaison des performances entre les CC, SEBI et BLN. La première colonne (algorithme), la seconde colonne (résidu quadratique moyenne arithmétique), la troisième colonne (volume moyen), la quatrième colonne (nombre moyen de gènes), cinquième colonne (nombre moyen de gènes) et sixième colonne (nombre moyen de conditions). sur la figure 5. Ces graphiques montrent l'évolution des valeurs d'expression de l'ensemble des gènes dans l'ensemble des conditions. On obtient biclusters avec un nombre élevé de gènes et, étant 17 la valeur maximale. Dans les données de levure déterminer le nombre de gènes et la valeur de MSR varier avec les paramètres, à savoir, lorsque le seuil de distance augmente et le nombre minimum de conditions diminue (conditions expérimentales moins restrictives), puis le nombre de gènes augmente sensiblement. Dans le tableau 3, nous comparons nos 100 meilleurs biclusters et leurs valeurs moyennes avec celles obtenues par les algorithmes de Cheng & Church (CC) et Aguilar & Divina (SEBI). BLN obtient de meilleurs résultats en ce qui concerne la valeur MSR que les deux autres algorithmes. Le volume en moyenne, à savoir, le nombre de gènes se multiplie par le nombre de conditions, et la moyenne des conditions de biclusters sont plus bas. Le nombre moyen de gènes est 15,34, supérieure à celle de SEBI de. La plus intéressante propriété de biclusters trouvée par BLN est qu'il pro- Vides biclusters avec une très faible résidu quadratique moyenne par rapport aux autres techniques tout en maintenant le nombre de gènes entre 14 et 17. La variance ligne montre que l'algorithme est capable de trouver des modèles intéressants, qui sont illustrés à la figure 5. sur la figure 5 sont représentés six biclusters, avec des gènes allant de 14 à 17. les valeurs de niveau d'expression des gènes dans les biclusters sont très proches les uns des autres, en conservant le seuil fixé par la - 690 -RNTI-E-6 JS Aguilar -Ruiz et al. algorithme. Il est particulièrement intéressant de noter que la plage de valeurs est très faible en ce qui concerne la gamme de niveaux d'expression, tel qu'il apparaît dans les graphiques. En outre, certaines formes montrent des modèles significatifs dans les données, comme bicluster dans le coin supérieur droit de la figure 5. 6 Conclusions Notre technique pour trouver biclusters est basée sur la proximité locale, à savoir la distance entre les valeurs d'expression des gènes, sous le même état, dans les biclusters. Nous trouvons des groupes de gènes qui ont un comportement similaire dans un sous-ensemble de conditions. Une étude statistique précédente des données de déterminer les paramètres appropriés pour notre approche, appelée BLN, qui fournit un groupe de différentes biclusters avec des gènes très liés et très faible résidu quadratique moyenne. Par rapport aux algorithmes précédents de notre approche de biclusters avec moins de gènes que CC et très faible résidu quadratique moyenne. Par rapport à SEBI, BLN améliore le nombre moyen de gènes qui maintient son résidu quadratique moyenne très faible. Des exemples graphiques de biclusters sont fournis et ils présentent un comportement similaire pour les gènes dans biclusters. Les recherches futures se concentrera sur l'amélioration de l'efficacité de l'algorithme au moyen de techniques d'élagage et à la validation des biclusters avec des connaissances biologiques, telles que Gene Ontology. Acquittement Cette recherche a été soutenue par l'Agence espagnole de recherche CICYT en bourse TIN2004- 001. Références Aguilar, J. S., F. Divina (2005) évolutionnaire biclustering des biopuces données, 3ème atelier européen sur évolutionnaire bio-informatique. Ben-Dor, A., B. Chor, R. Karp, Z. Yakhini (2002) A la découverte structure locale dans les données de gène sion: L'Ordre Préserver problème sous-matrice, 6 ACM Conférence internationale sur la recherche en biologie moléculaire computationnelle, RECOMB2002. Cheng, Y., G. M. Eglise, (2000) biclustering des données d'expression, Actes de la 8e Conférence nationale inter sur les systèmes intelligents pour la biologie moléculaire, ISMB'00, 93-103. Dougherty, E., J. Barrera, B. Marcel, S. Kim, R. Cesar, Y. Chen, M. Bittner, J. Trent (2002) Inference de clustering avec application à microarrays d'expression génique, Journal of Computational Biology , vol. 9 (1), 105-126. M. Gerstein, J. Chang, R. Basri, Y. Kluger (2003) spectrale biclustering de données microarray: Coclustering gènes et conditions, Journal Genome Research, vol. 13 (4), 703-716. Hartigan, J.A. (1972) le regroupement direct d'une matrice de données, Journal de l'American Statistical Association, 67 (337), 123-129. Lazzeroni, L., A. Owen (2000) modèles Plaid pour les données d'expression génique, Rapport technique Stan- Université Ford. - 691 - RNTI-E-6 biclustering Basé sur Liu locale Proximités, J., J. Yang, W. Wang (2004) biclustering dans l'expression génique des données par Tendency, IEEE Computational Systems bio-informatique Conférence 2004, 183-193. Madère, S., A. Oliveira (2004) biclustering algorithmes d'analyse de données biologiques: Sur- vey, IEEE Transactions / ACM sur la biologie computationnelle et bio-informatique, vol. 1 (1), 24- 45. Shamir, R., R. Sharan, A. Tanay (2002) A la découverte biclusters statistiquement significatives dans les données d'expression génique, bio-informatique, vol. 19, Suppl. 1 2002, 136-144. Wang, H., W. Wang, W. Haixun, P. Yu (2002) Clustering par similarité de modèle dans de grands ensembles de données, SIGMOD Conférence internationale sur la gestion des données, 394-405. Yang, J., W. Wang, W. Haixun, P. Yu (2002) Amélioration des performances des Bicluster Discovery dans un grand ensemble de données, 6e ACM Conférence internationale sur la recherche en Computationa l Molec- Biologie Ular, RECOMB2002, Affiche. Yang, J., W. Wang, W. Haixun, P. Yu (2003) sur des données biclustering amélioré d'expression, 3e Conférence IEEE sur bio-informatique et bio-ingénierie, 321-327. L'analyse des CV d'expression de Données Dans l'ADN Gènes is un outil important de la recherche used Dans les Génomique Do not s'étendent de Objectifs principaux du l'étude des tionnel caractère fonc- et Gènes Spécifiques their participation Dans les Processus biologiques à la recons- truction des conditions de maladies et à their pronostique. Les d'expression de Données Gènes Dans des Sont matrices arrangées where each correspondent à Une gène ligne et each état Une colonne Représente Expérimentale Spécifique. Les techniques de "biclustering" mais de verser ONt Pressothérapie des sous-ensembles de les Gènes Qui montrent d'activité Modèles sous sous similaires ONU-ensemble des conditions. Notre approach Consiste en un algorithme de "biclustering" basons sur la locale proximité. L'Algorithme des "biclusters Cherche" d'une Manière gloutonne. Il "des AVEC commencent l'biclusters" qui contiennent deux et gènes de Autant- ensuite inclut Que possible en Gènes un seuil de respectant la distance de garantissant la similarité des Comportements gènes. - 692 -RNTI-E-6