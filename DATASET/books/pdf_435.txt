 Vers une mesure de similarité pour les séquences complexes Elias Egho Chedy Raïssi Toon Calders Thomas Bourquard Nicolas Jay Amedeo Napoli LORIA Vandoeuvre les Nancy France prénom nom loria fr Université Libre de Bruxelles prénom nom ulb ac be Résumé Le calcul de similarité entre les séquences est d’une extrême impor tance dans de nombreuses approches d’explorations de données Il existe une multitude de mesures de similarités de séquences dans la littérature Or la plu part de ces mesures sont conçues pour des séquences simples dites séquences d’items Dans ce travail nous étudions d’un point de vue purement combinatoire le problème de similarité entre des séquences complexes i e des séquences d’ensembles ou itemsets Nous présentons de nouveaux résultats afin de comp ter efficacement toutes les sous séquences communes à deux séquences Ces ré sultats théoriques sont la base d’une mesure de similarité calculée efficacement grâce à une approche de programmation dynamique 1 Introduction Le volume de données numériques actuellement disponible nécessitent de disposer de mé thodes efficaces permettant de les structurer résumer comparer et regrouper Dans tous ces cas il est indispensable de disposer d’une mesure de similarité permettant d’évaluer la proxi mité entre les objets considérés Les illustrations les plus récentes se situent dans le domaine de la bioinformatique pour l’alignement des sous séquences d’ADN ou d’acides aminés San der et Schneider 1991 Chothia et Gerstein 1997 ou dans la détection d’intrusion dans les réseaux où les différentes séquences d’accès sont analysées et comparées à une base de signa tures de comportements malveillants En ce qui concerne les données séquentielles de nom breux travaux Levenshtein 1966 Herranz et al 2011 Keogh 2002 Wang et Lin 2007 se sont intéressés à des séquences simples c’est à dire une liste ordonnée d’éléments ato miques Or dès lors que l’on s’intéresse à des séquences d’objets plus complexes le calcul de similarité se confronte à la nature même des objets comparés Les trajectoires d’objets mo biles les informations topologiques en biologie moléculaire Wodak et Janin 2002 sont des exemples de telles données Pour illustration supposons que nous souhaitons comparer les trois séquences complexes suivantes S1 = 〈{c}{b}{a b}{a c}〉 S2 = 〈{b}{c}{a b}{a c}〉 et S3 = 〈{b d}{a b}{c}{d}〉 Le calcul classique de la plus longue sous séquence commune entre S1 et S2 noté LCS S1 S2 est la sous séquence 〈{c}{a}{a c}〉 de longueur 3 De même LCS S1 S3 = 〈{b}{a b}{c}〉 de longueur 3 La mesure de la plus longue sous séquence commune nous amène à conclure que la séquence S1 peut être considérée équidis Vers une mesure de similarité pour les séquences complexes tante des séquences S2 et S3 Or la séquences S1 est quasi identique à la séquence S2 hormis l’interversion des deux premiers ensembles Il est donc important de comparer autrement l’impact des sous séquences pour réellement mesurer la similarité de séquences d’objets com plexes Il suffit de comparer le nombre de sous séquences communes qui est de 40 entre S1 et S2 alors qu’il est de 14 entre S1 et S3 Ce résultat reflète mieux la similarité entre S1 et S2 car il prend en compte les différentes structures et combinaisons présentes dans une séquence complexe La problématique se confronte à la combinatoire associée l’efficacité computatio nelle et nous amène à poser les questions suivantes i Etant donné une séquence complexe comment compter sans énumérer le nombre de sous séquences distinctes ii Pour un couple de séquences comment efficacement compter le nombre de sous séquences communes Dans ce contexte notre contribution est double un cadre théorique pour définir une mesure de si milarité pour les séquences complexes basée sur le nombre de sous séquences communes et un algorithme qui met en œuvre de façon efficace la mesure de similarité proposée Cette ap proche est basé sur la technique de la programmation dynamique afin de compter efficacement toutes les sous séquences communes entre deux séquences L’article est organisé de la façon suivante La section 2 présente les définitions préliminaires à notre proposition Les sections 3 et 4 détaillent notre contribution présentent de nouveaux résultats combinatoires et discutent la complexité ainsi que la complétude de notre algorithme La section 5 présente deux études expérimentales La section 6 fait le bilan et dresse les pers pectives associées à ce travail 2 Concepts préliminaires Définition 1 Séquence Soit I un ensemble fini d’ items Un ensemble ou itemset X est un sous ensemble non vide de I Une séquence S est une liste ordonnée 〈X1 · · ·Xn〉 telle que Xi 1 ≤ i ≤ n n ∈ N est un itemset Le l préfixe noté Sl est le préfixe 〈X1 Xl〉 de la séquence S avec 1 ≤ l ≤ n Le j ème itemset Xj de la séquence S est noté S[j] avec 1 ≤ j ≤ n La concaténation de itemsets Y avec une séquence S S ◦ Y est la séquence 〈X1 · · ·Xn Y 〉 Une séquence T = 〈Y1 · · ·Ym〉 est une sous séquence de S = 〈X1 Xn〉 noté T � S s’il existe 1 ≤ i1 < i2 < · · · < im ≤ n telle que Yj ⊆ Xij ∀j = 1 m ϕ S indique l’ ensemble de toutes les sous séquences d’une séquence S et φ S = |ϕ S | Pour deux séquences S et T ϕ S T indique l’ensemble de toutes les sous séquences communes entre deux séquences S et T ϕ S T = ϕ S ∩ ϕ T et φ S T = |ϕ S T | Définition 2 La similarité entre deux séquences S et T notée sim S T est définie comme le nombre de toutes les sous séquences communes entre S et T divisé par le nombre maximal de sous séquences de S ou T sim S T = φ S T max{φ S φ T } De manière usuelle l’ensemble des parties d’un ensembleX est noté P X et P≥1 X est l’ensemble des parties de X sans l’ensemble vide i e P≥1 X = P X \ {∅} Exemple 1 Nous utilisonsDex dans le tableau 1 afin d’illustrer ces définitions La base contient 4 séquences construites à partir de I = {a b c d e} 〈{a}{b}{c d}〉 est une sous séquence de S1 = 〈{a}{a b}{e}{c d}{b d}〉 Le 3 préfixe de S1 S31 = 〈{a}{a b}{e}〉 et S1[2] = {a b} est le deuxième itemset dans la séquence S1 L’ensemble de toutes les sous séquences Egho et al S1 〈{a}{a b}{e}{c d}{b d}〉 S2 〈{a}{b c d}{a d}〉 S3 〈{a}{b d}{c}{a d}〉 S4 〈{a}{a b d}{a b c}{b d}〉 TAB 1 Le jeu de données séquentielles utilisé pour les besoins d’illustrations dans notre papier de S21 est {〈〉 〈{a}〉 〈{b}〉 〈{a b}〉 〈{a}{a}〉 〈{a}{b}〉 〈{a}{a b}〉} et donc φ S24 = 15 de même le nombre de toutes les sous séquences communes entre S41 et S 3 2 est φ S 4 1 S 3 2 = 13 3 Comptage efficace de toutes les sous séquences distinctes Dans cette section nous présentons un ensemble de résultats théoriques ainsi qu’une tech nique efficace pour calculer φ S Nous esquissons dans un premier temps l’intuition qui a permis de développer notre approche Supposons que nous concaténons la séquence S avec un itemset Y et observons les valeurs de φ S et φ S ◦ Y Deux cas peuvent apparaître i Soit Y est disjoint avec tous les itemsets de S et dans ce cas le calcul de φ S ◦ Y est équivalent a |ϕ S | · 2|Y | car ∀T ∈ ϕ S et ∀Y1 Y2 ∈ P Y T ◦ Y1 6= T ◦ Y2 Par exemple φ 〈{a b}{c}〉◦{d e} = 8·22 = 32 ii Au moins un item de Y apparaît dans un des itemsets de S i e ∃i ∈ [1 n] Y ∩Xi 6= ∅ Dans ce cas φ S ◦ Y < φ S · 2|Y | car l’extension des séquences de ϕ S avec les éléments de l’ensemble des parties de Y produira nécessairement des sous séquences doublons Afin de calculer correctement φ S ◦Y nous avons donc besoin de définir une méthode pour supprimer les répétitions au niveau du comptage De manière plus formelle φ S ◦ Y = φ S · 2|Y | −R S Y où R S Y représente le terme de correction L’idée générale que nous développons s’appuie sur la possibilité de compenser les répéti tions de comptages dû à la concaténation de sous séquences de S avec l’ensemble des parties de l’itemset Y Afin de détecter où des répétitions de comptages se produisent dans une sé quence S donnée nous introduisons ci dessous le concept d’ensemble de positions critiques Définition 3 Ensemble de positions critiques Pour une séquences S = 〈X1 · · ·Xn〉 et un itemset Y l’ensemble de positions critiques notéL S Y regroupe toutes les positions d’item sets de S où l’intersection avec Y est maximale 1 Plus formellement L S Y = {i | Y ∩Xi 6= ∅ ∧ j j > i tel que Y ∩Xi ⊆ Y ∩Xj } Cette notion d’ensemble de positions critiques est cruciale dans notre approche puisqu’elle permet de focaliser les calculs uniquement sur les dernières positions où une répétition apparaît pour une séquence S donnée Le lemme suivant formalise cette intuition Lemme 1 Soient S une séquence et Y un itemset Alors R S Y = ∣∣∣∣∣∣ ⋃ `∈L S Y { ϕ S`−1 ◦ P≥1 S[`] ∩ Y }∣∣∣∣∣∣ 1 Selon la relation d’inclusion Vers une mesure de similarité pour les séquences complexes Preuve 1 Voir le rapport technique Egho et al 2012 Remarque Les éléments de l’ensemble ϕ S`−1 ◦ P≥1 S[`] ∩ Y ne sont pas néces sairement disjoints Pour s’en convaincre considérerons la séquence S = 〈{a b}{b c}〉 et Y = {a b c} alors L S Y = {1 2} et la séquence 〈{b}〉 est construite deux fois dans les ensembles ϕ S0 ◦ P≥1 S[1] ∩ Y et ϕ S1 ◦ P≥1 S[2] ∩ Y Afin de prendre en compte ce chevauchement d’éléments nous nous appuyons pour le calcul de R S Y sur le principe d’inclusion exclusion Théorème 1 Soient S = 〈X1 Xn〉 une séquence et Y un itemset Alors φ S ◦ Y = 2|Y | · φ S − ∑ K⊆L S Y −1 |K|+1 φ S minK −1 · 2| ⋂ j∈K Xj ∩Y | − 1 Preuve 2 Voir le rapport technique Egho et al 2012 Exemple 2 Nous illustrons le processus complet de comptage φ 〈{a}{a b d}〉 φ 〈〉 = 1 φ 〈{a}〉 = 2|{a}| · φ 〈∅〉 = 2 φ 〈{a}{a b d}〉 = 2|{a b d}|φ 〈{a}〉 − 2|{a b d}∩{a}| − 1 · φ 〈∅〉 = 23 · 2− 21 − 1 · 1 = 15 4 Comptage efficace de toutes les sous séquences communes Dans cette section nous allons étendre les résultats théoriques précédemment énoncés afin de compter toutes les sous séquences distinctes communes entre deux séquences S et T Comme pour la Section 3 nous présentons dans un premier temps l’idée générale avant d’énoncer les résultats formels ainsi que l’algorithme de comptage Supposons que nous conca ténons la séquence S avec un itemset Y et observons la variation des ensembles ϕ S T et ϕ S ◦ Y T Deux cas sont possibles Si aucun item dans Y n’apparaît dans les itemsets des séquences S et T alors la concaténation de l’itemset Y avec la séquence S n’a aucun ef fet sur l’ensemble ϕ S ◦ Y T i e le nombre de sous séquences communes ne change pas ϕ S ◦ Y T = ϕ S T Ou si au moins un élément de Y apparaît dans l’une des séquences S ou T ou les deux alors de nouvelles séquences communes apparaissent dans ϕ S ◦ Y T De la même manière que pour la méthode de comptage des sous séquences distinctes d’une séquence unique des répétitions peuvent se produire et il est nécessaire de définir un terme de correction De manière formelle |ϕ S ◦ Y T | = |ϕ S T |+A S T Y −R S T Y et A S T Y représente le nombre de sous séquences communes supplémentaires qui de vraient être ajoutées au compte après la concaténation de Y et R S T Y le terme de correc tion De même que pour le problème des sous séquences distinctes pour une seule séquence l’ensemble des positions critique joue un rôle dans le calcul de A S T Y et R S T Y Le lemme suivant formalise cette observation Egho et al Lemme 2 Soient S = 〈X1 Xn〉 T = 〈X ′1 X ′m〉 des séquences et Y un itemset alors A S T Y = ∣∣∣⋃`∈L T Y {ϕ S T `−1 ◦ P≥1 T [`] ∩ Y }∣∣∣ et R S T Y = ∣∣∣∣∣∣ ⋃ `∈L S Y  ⋃ `′∈L T Y { ϕ S`−1 T ` ′ −1 ◦ P≥1 S[`] ∩ T [` ′ ] ∩ Y } ∣∣∣∣∣∣ Preuve 3 Voir le rapport technique Egho et al 2012 Comme pour le Lemme 1 le calcul de A S T Y et R S T Y implique l’utilisation du principe d’inclusion exclusion Théorème 2 Soient S = 〈X1 Xn〉 T = 〈X ′1 X ′m〉 des séquences et Y un itemset Alors φ S ◦ Y T = φ S T +A S T Y −R S T Y avec A S T Y = ∑ K⊆L T Y −1 |K|+1 φ S Tmin K −1 · 2 | ⋂ j∈K X ′ j ∩Y | − 1 et R S T Y = ∑ K⊆L S Y −1 |K|+1  ∑ K′⊆L T Y −1 |K ′ |+1 · f K K ′  tel que f K K ′ = φ S minK −1 T minK ′ −1 · 2 | ⋂ j∈K Xj ∩ ⋂ j ′∈K′ X ′ j ′ ∩Y | − 1 Preuve 4 Voir le rapport technique Egho et al 2012 Le théorème 2 permet de concevoir un algorithme simple qui s’appuie sur la technique de programmation dynamique Pour deux séquences données S et T de tailles n et m respective ment l’algorithme produit une n ×m matrice notéeM tel que la valeur de la celluleMi j correspond au nombre de sous séquences communes entre Si et T j i e Mi j = φ Si T j Considérons les deux séquences S1 et S2 dans Dex alors φ S1 S2 = 21 Le {∅} {a} {b c d} {a d} {∅} 1 1 1 1 {a} 1 2 2 2 {a b} 1 2 4 5 {e} 1 2 4 5 {c d} 1 2 10 13 {b d} 1 2 12 21 TAB 2 Trace matricielle du comptage des sous séquences communes entre S1 et S2 5 Expériences Nous invitons le lecteur à lire la section des expérimentations dans le rapport technique Egho et al 2012 où nous étudions le passage à l’échelle de notre mesure ainsi que son appli cation dans le domaine de regroupement de séquences de protéines dans le domaine biologique Vers une mesure de similarité pour les séquences complexes 6 Conclusion Dans cet article nous étudions le problème de comptage de toutes les séquences communes entre deux séquences complexes Nous présentons un cadre théorique et un algorithme de pro grammation dynamique efficace pour compter efficacement le nombre de sous séquences com munes entre deux séquences Cette solution nous permet de définir une mesure de similarité entre deux séquences S et T d’une manière simple et intuitive Un travail théorique en cours consiste à approximer le nombre des sous séquences communes afin accélérer les calculs sur des séquences extrêmement longues Références Chothia C et M Gerstein 1997 Protein evolution how far can sequences diverge Na ture 6617 385 579–581 Egho E C Raïssi T Calders T Bourquard N Jay et A Napoli 2012 On Measuring Similarity for Sequences of Itemsets Research Report RR 8086 INRIA Herranz J J Nin et M Sole 2011 Optimal symbol alignment distance A new distance for sequences of symbols IEEE Transactions on Knowledge and Data Engineering 23 1541–1554 Keogh E 2002 Exact indexing of dynamic time warping In Proceedings of the 28th international conference on Very Large Data Bases VLDB ’02 pp 406–417 VLDB En dowment Levenshtein V 1966 Binary codes capable of correcting deletions insertions and reversals Soviet Physics Doklady 10 8 707–710 Sander C et R Schneider 1991 Database of homology derived protein structures and the structural meaning of sequence alignment Proteins 1 9 56–68 Wang H et Z Lin 2007 A novel algorithm for counting all common subsequences In Proceedings of the 2007 IEEE International Conference on Granular Computing GRC ’07 Washington DC USA pp 502– IEEE Computer Society Wodak S et J Janin 2002 Structural basis of macromolecular recognition Adv Protein Chem 61 9–73 Summary Computing the similarity between sequences is a very important challenge for many differ ent data mining tasks There is a plethora of similarity measures for sequences in the literature most of them being designed for sequences of items In this work we study the problem of measuring the similarity ratio between sequences of itemsets We present new combinatorial results for efficiently counting distinct and common subsequences These theoretical results are the cornerstone for an effective dynamic programming approach to deal with this problem 