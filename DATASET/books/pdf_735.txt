(Actes_non_num \ 351rotes.pdf) en collaboration Outlier Mining pour la détection des intrusions Goverdhan Singh *, Florent Masseglia *, Céline Fiot *, Alice Marascu *, Pascal Poncelet ** * INRIA Sophia Antipolis, 2004 route des Lucioles - BP 93, 06902 Sophia Antipolis Prenom .nom @ sophia.inria.fr ** LIRMM UMR CNRS 5506, 161 Rue Ada, 34392 Montpellier Cedex 5, France poncelet@lirmm.fr CV. La détection d'intrusion est un sujet important traitant de la sécurité des systèmes de formation in-. La plupart des succès des systèmes de détection d'intrusion (IDS) __gVirt_NP_NNS_NNPS<__ reposant sur la détection de signature et le besoin de mettre à jour leur signature aussi vite que de nouvelles attaques se font jour. D'autre part, de détection d'anomalie peut être utilisée à cette fin, mais il souffre d'un grand nombre de fausses alarmes. En fait, tout comportement qui est sensiblement différent des habituels sera considéré comme dangereux par un IDS basé sur une anomalie. Par conséquent, l'isolement de véritables intrusions dans un ensemble d'alarmes est une tâche très difficile pour la détection d'intrusion basée sur une anomalie. Dans cet article, nous considérons d'ajouter une nouvelle fonctionnalité à de tels comportements isolés avant de pouvoir être considérés comme malveillants. Cette fonction est basée sur leur éventuelle répétition d'un système d'information à l'autre. Nous vous proposons un nouveau principe de l'exploitation minière des valeurs aberrantes et validons par une série d'expériences. 1 Introduction La protection d'un système contre les nouvelles attaques, tout en gardant un travail automatique et adaptatif DE CADRE est un sujet important dans ce domaine. Une réponse à ce problème pouvait compter sur l'exploration de données. En fait, l'exploration de données à des fins de détection d'intrusion pour fournir de nouveaux outils afin de détecter les cyber-menaces (Luo, 1999;. Dokas et al, 2002; Bloedorn et al, 2001;.. Manganaris et al, 2000; Wu et Zhang, 2003) . Parmi les approches de l'exploration de données, anomalie essais de détection des intrusions de déduire à partir des dossiers atypiques (Lazarevic et al., 2003;. Eskin et al, 2002). Le principe général est en général pour des groupes ou des classes, d'utilisation et de trouver des valeurs aberrantes (à savoir les événements qui ne appartiennent à une classe ou d'un groupe identifiant usage normal). En fait, des valeurs aberrantes objectifs de détection pour trouver des documents qui s'écartent considérablement d'une notion bien définie de la normalité. Il dispose d'un large éventail d'applications, telles que la détection de la fraude pour les cartes de crédit (Aleskerov et al., 1997), les soins de santé, la sécurité informatique (Bloedorn et al., 2001) ou à la sécurité des systèmes critiques (Fujimaki et al., 2005) . Toutefois, le principal inconvénient de la détection des intrusions au moyen d'anomalie (valeurs aberrantes) est le dé- tection taux élevé de fausses alarmes depuis une alarme peut être déclenchée en raison d'un nouveau type d'usages qui n'a jamais été vu auparavant (et est donc considéré comme anormal). Compte tenu de la grande quantité de nouveaux modèles d'utilisation émergents dans les systèmes d'information, même faible pour cent de faux positif donnera une très grande quantité d'alarmes parasites qui seraient overw- pour barrer l'analyste. Par conséquent, l'objectif de cet article est de proposer un algorithme de détection d'intrusion qui est basée sur l'analyse des données d'utilisation provenant de plusieurs partenaires pour la collaboration de détection d'intrusion pour réduire le nombre de fausses alarmes. Notre idée principale est qu'un nouvel usage est susceptible d'être ted rapport aux contexte du système d'information sur lequel il se produit (il ne doit se produire sur ce système). D'autre part, quand un nouveau trou de sécurité a été trouvé sur un système, les pirates veulent l'utiliser en autant de systèmes d'information que possible. Ainsi, une nouvelle anomalie qui se produit sur deux (ou plus) des systèmes d'information est probablement pas un nouveau type d'utilisation, mais plutôt une tentative d'intrusion. Considérons Ax, une anomalie détectée dans l'utilisation du site Web S1 correspondant à une demande de php dans le répertoire personnel pour un nouvel employé: John Doe, qui travaille dans la chambre 204, étage 2, dans le département de R & D. La demande aura la forme suivante: staff.php FName = John \ & LName = Doe \ & chambre = 204 \ & étage = 2 \ & RD = Dpt. Cette nouvelle demande, en raison du recrutement récent de John En raison de ce département, Shoul d pas être consi- dérés comme une attaque. D'autre part, considérons Ay, une anomalie qui correspond à une véritable intrusion. Ay sera basée sur un trou de sécurité du système (par exemple une vulnérabilité php) et pourrait, par exemple, ressembler à: staff.php path = .. / etc / passwd% 00. On peut voir dans cette demande que les paramètres ne sont pas liés aux données accessibles par le script php, mais plutôt à un trou de sécurité qui a été découvert sur le script du personnel. Si deux ou plusieurs entreprises utilisent le même script (par exemple, un script resquesting répertoire acheté à la même société de logiciels), puis l'utilisation de ce trou de sécurité sera certainement répétée d'un système à l'autre et la demande ayant paramètre ../etc/passwd % 00 sera le même pour toutes les victimes. Dans cet article, nous proposons de fournir à l'utilisateur final avec une méthode qui ne prend que un mètre para: n, le nombre d'alarmes souhaitées. Ensuite, en fonction de l'analyse des données d'utilisation provenant des différents partenaires, notre algorithme détecte n valeurs aberrantes communes qu'ils partagent. Ces valeurs aberrantes com- munes sont susceptibles d'être de véritables attaques et déclenchent une alarme. Dans une application réelle de cette technique, la confidentialité préservation sera un enjeu majeur afin de protéger les données des partenaires. Dans cet article, nous nous concentrons sur les techniques de classification et détection des valeurs aberrantes dans un environ- nement distribué. Cependant, les questions de confidentialité dans notre cadre sont présentés dans un autre document actuellement soumis. L'article est organisé de la manière suivante. Dans la section 2, nous présentons la motivation de cette approche et de notre cadre général et de l'article 3 donne un aperçu des œuvres existantes dans ce domaine. La section 4 présente COD, notre méthode de détection de valeurs aberrantes et le déclenchement des alarmes véritables. Même- tuellement, notre méthode est testée à travers une série d'expériences à la section 5 et de l'article 6 donne la conclusion. (. Eskin et al, 2002) 2 Motivation et Principe général IDS Anomaly basé peuvent être divisés en deux catégories; semi-supervisés et non supervisés. Les méthodes semi-supervisés construire un modèle de comportements « normaux » sur le système. Chaque comportement qui n'est pas considéré comme normal est une anomalie et doit déclencher une alarme. Les méthodes non supervisées ne pas utiliser les données étiquetées. En règle générale, basée sur un algorithme de clustering, ils essaient de détecter les valeurs aberrantes et les considèrent comme des anomalies. De toute évidence, anomaly- IDS basé souffriront d'un nombre très élevé de fausses alarmes car un nouveau type de comportement sera considéré comme une anomalie (et une attaque). Dans cet article, nous vous proposons d'améliorer les ré- sultats d'IDS sans supervision au moyen d'un cadre de collaboration entre les différents systèmes à base NETWORK-. La section 3 donne un aperçu des IDS existants sur la base des principes pré- senté ci-dessus et les IDS de collaboration existants. Cependant, au meilleur de nos connaissances, notre proposition est la première IDS sans supervision en utilisant les anomalies communes de multiples partenaires ou- G. Singh et al. der pour détecter les véritables tentatives d'intrusion. L'idée principale de notre proposition est que plusieurs partenaires ne partagent pas les mêmes données, mais ils partagent les mêmes systèmes (le serveur Web peut être Apache ou IIS, le serveur de données peut exécuter Oracle, les scripts d'accéder aux données peuvent être écrites avec PHP ou CGI, etc). Quand un trou de sécurité a été trouvé pour un système (dire des scripts php avec des paramètres spécifiques de conduisant à un accès privilégié au disque dur), cette faiblesse sera la même pour tous les partenaires en utilisant la même technologie. Notre objectif est de réduire le taux de fausses alarmes basées sur cette observation, comme cela est expliqué dans la section 2 Dans cet article, nous présente COD (commune Outlier détection), un cadre et un algorithme destiné à détecter les valeurs aberrantes partagées par au moins deux partenaires dans un IDS de collaboration . Outliers sont généralement de petits groupes. Certaines méthodes utilisées pour les trouver sont présentés à la section 3. Notre objectif est d'utiliser ces listes de valeurs aberrantes de différents systèmes (basés sur un regroupement similaire, impliquant la même mesure de similarité). Si une valeur aberrante se produit pendant au moins deux systèmes, e en elle est considérée comme une attaque. COD est en effet basé sur l'hypothèse selon laquelle une tentative d'intrusion en essayant de trouver une faiblesse d'un script sera similaire pour toutes les victimes de cette attaque. Nous vous proposons de détecter les tentatives d'intrusion dans les archives d'un serveur Web, comme un fichier journal d'accès Apache. fichier conserve un tel enregistrement, pour chaque accès sur le site Web de la propriété intellectuelle, la date, URL demandée et referrer (entre autres informations). Pour la clarté de la présentation, nous présentons notre cadre sur la col- laboration de deux sites Web, S1 et S2 et nous considérons les demandes qui ont été reçues par les scripts de chaque site (cgi, php, sql, etc). Notre objectif est d'effectuer un regroupement sur les habitudes d'utilisation de chaque site et trouver les valeurs aberrantes communes. Cependant, ce ne serait pas suffisant pour répondre à la seconde contrainte de notre objectif: d'exiger qu'un seul paramètre, n, le nombre d'alarmes de retour. Notre mesure de similarité (présentée dans la section 4) permettra des modèles d'utilisation normal d'être regroupés plutôt que groupés avec des motifs d'intrusion. D'autre part, notre mesure simila- rité doit également veiller à distinguer un modèle d'intrusion de modèles d'utilisation normales et d'autres modèles d'intrusion (puisque les différents modèles d'intrusion seront basés sur un autre trou de sécurité et auront des caractéristiques très différentes). Notre algorithme effectue les étapes successives de regroupement pour chaque site. A chaque étape, nous vérifions les valeurs aberrantes correspondant potentiellement entre les deux sites. L'algorithme de clustering est agglomératif et dépend de la dissimila- rité maximale (MD) qui doit être respecté entre deux objets. Ce travail a pour but d'explorer les solutions de surveillance d'un réseau en temps réel. Ensuite, les alarmes potentielles seront déclenchées à chaque étape de la surveillance (par exemple avec une fréquence des une heure). En fonction du nombre d'alarmes vraies ou fausses, l'utilisateur peut vouloir régler n pour l'étape suivante, jusqu'à ce qu'il ne (ou très peu) fausse alarme est renvoyée. Notre hypothèse est que les valeurs aberrantes communes, triées par similitude d'un site à l'autre, donneront les intrusions au début de la liste. Notre défi, dans cet article, est de répondre à des questions importantes sous-jacente notre méthode; quelle est la similitude entre les deux modèles d'utilisation? Comment séparer les grappes afin de donner la liste des valeurs aberrantes? Comment détecter les valeurs aberrantes communes? Notre algorithme principal, ce qui correspond au cadre présenté dans cette section, est donnée à la section 4. 3 Travaux connexes Au fil du temps de nombreuses techniques ont été développées pour détecter les valeurs aberrantes, ce qui conduit à un certain nombre d'enquêtes et d'articles de revue (Hodge et Austin, 2004; Chandola et al., 2008). Certains d'entre eux plus précisément sur le Concentrons thème de la détection des valeurs aberrantes dans le contexte de la détection d'intrusion dans les réseaux informatiques (Lazarevic et al., 2003; Patcha et Park, 2007). Dans cet article, nous nous concentrons sur la détection d'intrusion collaborative ce domaine spécifique et nous vous proposons un système de détection sans supervision basée sur les anomalies. Au contraire des systèmes semi-supervisé détection des anomalies, consistant à décrire viours de comporte- normales pour détecter des motifs déviant (marchette, 1999, Wu et Zhang, 2003; Vinueza et Grudic, 2004), les techniques non supervisées ne nécessitent pas une identification préliminaire des utilisation normale par un expert humain. Notre application sera donc plus utilisable dans un contexte réel. La statistique communautaire a assez largement étudié le concept de outlyingness (Barnett et T. Lewis, 1994; Schölkopf et al, 2001;. Markou et Singh, 2003; Kwitt et Hofmann, 2007). tistique Sta- approche des modèles de distribution construction de probabilité dans lesquelles les valeurs aberrantes sont des objets de faible probabilité (Rousseeuw et Leroy, 1996; Billor et al., 2000; Lee et Xiang, 2001) Toutefois, dans le contexte de la détection d'intrusion, dimensionnalité des données est élevé . Par conséquent, pour améliorer les performances et la précision dans l'ensemble, il est devenu nécessaire de développer des algorithmes d'exploration de données en utilisant toute la distribution des données ainsi que la plupart des fonctionnalités de données (Knorr et Ng, 1998; Breunig et al., 2000; Aggarwal et Yu, 2001). La plupart de ces approches sont basées sur des algorithmes de détection des valeurs aberrantes à base de la mise en grappes (Jain et Dubes, 1988, Ng et Han, 1994;. Ester et al, 1996;. Portnoy et al, 2001; impôt et Duin, 2001; Eskin et al. ., 2002; He et al., 2003; Papadimitriou et al, 2003). Ces techniques reposent sur l'hypothèse que les points normaux appartiennent à des groupes grands et denses en anomalies (ou aberrantes, les instances atypiques) soit ne appartiennent à des groupes (Knorr et Ng, 1998 (Chandola et al., 2008); Ramaswamy et al. 2000;. Duan et al, 2006) ou forment des grappes très petites (ou très rares) (Otey et al., 2003; Chimphlee et al., 2005; Pires et Santos Pereira, 2005. Fan et al, 2006; Ceglar et al., 2007). En d'autres termes de détection des anomalies consiste à identifier ceux parmi les données qui sont loin d'être des groupes importants - soit isolés ou en petits groupes. Au contraire, les techniques d'utilisation abusive (à savoir les approches qui détectent des éléments similaires à usage bien connu malveillant) détecte précisément les attaques, mais ils manqueront chaque intrusion qui diffère de ces signatures d'attaque déjà connues. Par conséquent, certains travaux ont proposé des cadres ratives afin d'collaborations améliorer les performances et les taux d'alarme vrai et faux (Valdes et Skinner, 2001;. Yegneswaran et al, 2004). Ces approches reposent sur la propagation dans une liste noire IP IDS distri- bué après une mauvaise utilisation individuelle ou de détection des anomalies. De plus, cette communication peut conduire à des résultats plus précis, il ne permet pas au système de découvrir totalement inconnus des punaises at- ou pour éviter que les taux d'alarme élevés faux. Pour ces raisons, nous vous proposons dans cet article une approche de détection d'anomalies que les utilisations collaboration entre les systèmes afin de distinguer les attaques de comportements émergents ou utilisation nouvelle, conduisant ainsi à un nombre réduit de fausses alarmes. Selon l'approche, le nombre de paramètres requis pour exécuter l'algorithme peut être élevé et conduira à différentes valeurs aberrantes. Pour éviter cela, certaines œuvres renvoient une liste de classement des valeurs aberrantes potentiels et limiter le nombre de paramètres à préciser (Ramaswamy et al., 2000; Jin et al, 2001;.. Fan et al, 2006). 4 COD: Détection commune Outlier Le principe de COD consiste à effectuer les étapes de regroupement successives sur les modèles d'utilisation des sites partenaires de diffé- rentes, jusqu'à ce que le nombre de valeurs aberrantes communes répond le nombre d'alarmes souhaitées par l'utilisateur. Nous présentons dans cette section un algorithme conçu pour deux systèmes d'information. L'extension de ce travail à plus de deux systèmes nécessiterait un noeud central de coordination les comparaisons et le déclenchement des alarmes, ou un protocole de communication peer-to-peer. Ce n'est pas le but de cet article. Nos objets sont les paramètres donnés aux fichiers de script dans les demandes de G. Singh et al. ceived sur un site Web. En d'autres termes, le fichier journal d'accès est filtré et on ne garde que les lignes correspondant à des requêtes avec des paramètres à un script. Pour chacune de ces lignes, nous séparons les paramètres et pour chaque paramètre, nous créons un objet. Considérons, par exemple, la demande de sui- vantes: staff.php FName = John & LName = Doe. Les objets correspondants sont o1 = John Doe et o2 =. Une fois que les objets sont obtenus à partir des données d'utilisation de plusieurs sites Web, COD est appliquée et donne leurs valeurs aberrantes communes. Algorithme Cod entrée: U1 et U2 les habitudes d'utilisation de sites S1 et S2 et n le nombre d'alarmes. Sortie: I l'ensemble des groupes correspondant à des motifs malveillants. 1. Construction M, la matrice de distance entre chaque motif; 2. ∀p ∈ M, Neighboursp ← liste triée des voisins pour p (le premier motif d'utilisation dans la liste de p est le plus proche de p). 3. DensityList ← liste triée des motifs de densité; 4. MD ← 0; 5. MD ← MD + 0,05; 6. C1 ← Clustering (U1, MD); C2 ← Clustering (U2, MD); 7. O1 ← aberrants (C1); O2 ← aberrants (C2); 8. I ← CommonOutliers (O1, O2, MD); 9. Si | I | ≤ n revenir ensuite I; 10. Si MD = 1 puis retour I; // Pas commun aberrant 11. Sinon retour à l'étape 5; Fin algorithme Cod Comme expliqué en soi ction 2, l'algorithme COD traitera les habitudes d'utilisation des deux sites étape par étape. Pour chaque étape, un résultat de classification est fourni et analysé pour la détection d'intrusion. Tout d'abord, MD est réglé pour obtenir très serré et de nombreux groupes (similitude très courte est autorisée entre deux objets dans un cluster). Ensuite, MD est détendu par une quantité de 0,05 étape après étape afin d'augmenter la taille des clusters résultants, diminuer leur nombre et réduire le nombre d'alarmes. Lorsque le nombre d'alarmes souhaitées par l'utilisateur est atteint, puis se termine COD. 4.1 Clustering Clustering algorithme d'entrée: U, les modèles d'utilisation et MD, la dissemblance maximum. Sortie: C, l'ensemble des grands groupes comme possible, dans le respect MD. 1. i ← 0; C ← ∅; 2. p ← motif suivant non classés dans DensityList; 3. i + +; ci ← p; 4. C ← C + ci; Collaboration de détection d'intrusion 5. q ← motif suivant non classés dans Neighboursp; 6. ∀o ∈ ci Si d (o, q)> MD retourne à l'étape 2; 7. ajouter q ci; 8. Cc ← LCS (Cc, q); // Cc est le centre de C 9. retour à l'étape 5; 10. Si les modèles non classés restent revenir ensuite à l'étape 2; 11. retour C; Fin algorithme Clustering COD Clustering algorithme est basé sur un principe agglomératif. L'objectif est d'augmenter le volume des clusters en ajoutant des objets candidats, jusqu'à ce que la dissemblance maximale (MD) est cassé (par exemple il y a un objet Oi dans le cluster de telle sorte que la similitude entre oi et l'objet candidat OC est supérieur à MD). Similitude entre les objets. Nous considérons chaque objet comme une séquence de caractères. Notre simila- rité est alors basée sur la plus longue séquence commune (LCS), tel que décrit dans la définition 1. Définition 1 Soit S1 et S2 deux séquences. Laissez LCS (s1, s2) la longueur des plus longues séquences communes entre s1 et s2. La différence d (s1, s2) entre s1 et s2 est défini comme suit: d (s1, s2) = 1 - 2 × LCS (s1, s2) | s1 | + | S2 | Exemple 1 Considérons deux paramètres p1 = intrusion et p2 = induction. Le LCS entre P1 et P2 est L = inuion. L a une longueur de 6 et de la similitude entre P1 et P2 est d = 1 - 2 × L | p1 | + | p2 | = 33,33%. Ce qui signifie aussi une similitude de 77,77% entre les deux paramètres. Centre des clusters. Lorsqu'un objet est inséré dans un cluster, nous maintenons le centre de ce groupe, car il sera utilisé dans l'algorithme de CommonOutliers. Le centre d'une grappe de C est le LCS entre tous les objets de C. Lorsque oi d'objet est ajouté à C, son Cc central est mis à jour. La nouvelle valeur de Cc est la LCS entre la valeur actuelle de Cc et Oi. 4.2 Wavelet basée sur Outlier Détection La plupart des travaux antérieurs dans la détection des valeurs aberrantes nécessite un paramètre (Zhong et al, 2007;. Portnoy et al, 2001;.. Joshua Oldmeadow et al, 2004), comme un pour cent des petits groupes qui devraient être considérés comme valeurs aberrantes ou les valeurs aberrantes top-n. Leur idée principale est généralement pour trier les grappes par taille et / ou l'étanchéité. Nous estimons que nos groupes seront aussi serrés que possible, selon notre algorithme de regroupement et nous voulons extraire des valeurs aberrantes par le tri du cluster par taille. Le problème est de séparer « grands » et « petits groupes ». Notre solution est basée sur une analyse de la distribution de cluster, une fois qu'ils sont classés par taille. La répartition habituelle des grappes est illustrée par la figure 1 (capture d'écran faite avec nos données réelles). Nous vous proposons d'utiliser une transformée en ondelettes pour réduire la distribution. Dans la figure 1, l'axe y représente la taille des clusters, alors que leur index dans la liste triée est représentée sur x, et les deux plateaux permettent la séparation des grappes de petits et grands. La transformée en ondelettes est un outil qui coupe des données ou des fonctions ou des opérateurs en différentes composantes de fréquence, puis les études de chaque composant avec une résolution adaptée à l'échelle G. Singh et al. FIGUE. 1 - Détection de valeurs aberrantes au moyen de Haar ondelettes (Daubechies, 1992). Mathématiquement, la transformée en ondelettes continue est définie par: Twavf (a, b) = ∫ 1√ un + ∞ -∞ f (x) ψ * (x-ba) dx où z * désigne le conjugué complexe de z, ψ * ( x) est l'analyse ondelettes, un (> 0) est le paramètre d'échelle et b le paramètre de translation. Nous utilisons les vaguelettes Haar pour illustrer notre méthode de détection des valeurs aberrantes. Considérons les séries de valeurs suivantes: [1, 1, 1, 2, 7, 10, 11, 12]. Sa transformée de Haar ondelettes est illustrée par le tableau suivant: Niveau Approximations Coefficients 8 1, 1, 1, 2, 7, 10, 11, 12 4 1, 1,5, 8,5, 11,5 0, -0,5, -1,5, -0,5 2 1,25 , 10 -0,25, -1,5 1 5,625 -4,375 Ensuite, nous gardons seulement les plus deux coefficients significatifs et nous faisons les autres zéro. Dans notre série de coefficients ([5,625, -4, 375, -0,25, -1,5, 0, -0,5, -1,5, -0,5]) plus deux sont ceux Si- gnificant 5,625 et -4, 375, ce qui signifie que le série devient [5,625, -4, 375, 0, 0, 0, 0, 0, 0]. Dans l'étape suivante, l'opération inverse est calculée et l'on obtient une approximation des données originales [1,25, 1,25, 1,25, 1,25, 10,0, 10,0, 10,0, 10,0]. Cela nous donne deux plateaux et permet de couper la série après index 4 afin de séparer les grandes et les petites valeurs. 4.3 En comparant Outliers Puisque nous voulons que notre algorithme global d'exiger un seul paramètre (le nombre d'alarmes), nous voulons éviter d'introduire un degré de similarité pour comparer deux listes de valeurs aberrantes. Pour cette comparaison, l'algorithme de CommonOutliers utilisera le centre de valeurs aberrantes. Pour chaque paire de valeurs aberrantes, CommonOutliers calcule la similitude entre les centres de ces valeurs aberrantes. Si cette larité est inférieure à simi- MD en cours (CF. paragraphe 4.1), nous considérons ces valeurs aberrantes comme similaires et les ajouter à la liste des alarmes. Algorithme CommonOutliers Entrée: O1 et O2, deux listes de valeurs aberrantes et MD, la dissemblance maximale. Sortie: A, la liste des alarmes (valeurs aberrantes communes). 1. ← ∅ 2. ∀i ∈ O1 faire la détection d'intrusion Collaborative 3. ∀j ∈ Oj faire le centre de 4. centrei (i); 5. centre de centrej (j); 6. Si d (centrei, centrej) <MD Puis un ← A + i ∪ j; 7. fait; 8. fait; 9. Retour A; Mettre fin à l'algorithme CommonOutliers 5 expériences L'objectif de cette section est d'analyser nos résultats (à savoir le nombre de valeurs aberrantes et véritables intrusions et le genre d'intrusions, nous avons détecté). Nos ensembles de données proviennent de deux organismes de recherche différents; (Anonymisées pour la soumission). Nous avons analysé les fichiers journaux d'accès Web à partir du 1er Mars au 31 Mars Le premier fichier journal représente 1,8 Go de données brutes. Dans ce fichier, le nombre total d'objets (paramètres donnés aux scripts) est 30454. Le second fichier journal repré- sente 1,2 Go de données brutes et le nombre total d'objets est 72381. COD a été écrit en Java et C ++ sur un PC (2,33 GHz i686) sous Linux avec 4 Go de mémoire principale. Les paramètres qui sont générés automatiquement par les scripts ont été supprimés des ensembles de données, car ils ne peuvent pas correspondre à des attaques (par exemple « publications.php? Catégorie = Livres »). Cela peut se faire en énumérant toute la génération possible des paramètres dans les scripts d'un site Web. Comme cela est décrit à la section 2, COD procède par étapes et augmente lentement la valeur de MD, ce qui représente une valeur de tolérance lors du regroupement des objets au cours du processus de regroupement. Dans nos expériences, MD a été augmenté par étapes de 0,05 de 0,05 à 0,5. Pour chaque étape, nous présentons nos mesures dans le tableau 1. La signification de chaque mesure est la suivante. O1 (resp. O2) est le nombre d'objets périphériques dans le site 1 (resp. Du site 2). % 1 (resp% 2) est la fraction d'objets périphériques sur le nombre d'objets dans le site 1 (resp du site. 2). Par exemple, lorsque MD est réglé sur 0,3, pour le site 1, nous avons 5.607 objets périphériques, ce qui représente 18,4% du nombre total d'objets (par exemple 30454) dans le site 1. COD est le nombre de valeurs aberrantes communes entre les deux sites et FA% est le pourcentage de fausses alarmes dans les valeurs aberrantes communes. Par exemple, lorsque MD est réglé à 0,05, on trouve 101 alarmes dont 5 sont fausses (qui représente 4,9%). Une première obser- vation est que les valeurs aberrantes ne peuvent pas être directement utilisés pour déclencher des alarmes. De toute évidence, un nombre aussi élevé que 5607 alarmes pour vérifier, même pendant un mois, n'est pas réaliste. D'autre part, les résultats de COD montrent sa capacité à séparer les comportements malveillants de l'utilisation normale. Nos fausses alarmes correspondent aux demandes normales qui sont communes aux deux sites, mais rarement. un des documents de requête peut user de « John Doe » et la demande sera publications.php? FName = John \ & LName = Doe Par exemple, sur le script d'interrogation des références de anonym_lab1,. Si un autre utilisateur demande des papiers de « John Rare » sur le site Web de anonym_lab2), la demande sera biblio.php? FName = John \ & LName = Rare et le paramètre « John » sera donnée en tant que valeur aberrante commune et déclencher une alarme . Comme on peut le voir,% FA est très faible (en général, nous avons au plus 5 fausses alarmes dans nos expériences pour les deux sites Web) par rapport aux milliers de valeurs aberrantes G. Singh et al. 0,05 0,1 0,15 0,2 0,25 0,3 0,35 0,4 0,45 0,5 O1 13197 10860 8839 7714 6547 5607 5184 4410 3945 3532% 1 43,3% 35,6% 29% 25,3% 21,5% 18,4% 17% 14,4% 12,9% 11,6% O2 35983 27519 24032 20948 18152 14664 12738 11680 10179 8734% 2 49,6% 37,9% 33,1% 28,9% 25% 20,2% 17,5% 16,1% 14% 12,1% COD 101 78 74 70 67 71 71 85 89 90% FA 4,9% 5,12% 4% 2,85% 1,5% 2,8 % 2,8% 10,6% 11,2% 16,6% TAB. 1 - Les résultats sur des données réelles ont été filtrés par COD. Une autre leçon de ces expériences est qu'un faible MD implique très petits groupes et de nombreuses valeurs aberrantes. Ces valeurs aberrantes sont partagées entre les deux sites, parmi lesquels certains sont fausses alarmes dues aux rares mais le bon usage normal. Lorsque MD augmente, le processus de regroupement devient plus agglomératif et les alarmes sont regroupées. Ensuite, une alarme peut couvrir plusieurs ceux du même genre (par exemple le cas d'oeufs de Pâques a expliqué plus loin). En même temps, le nombre de valeurs aberrantes correspondant à une baisse d'utilisation normale (car ils sont également regroupés). Finalement, une valeur trop importante de MD implique des groupes de construction qui ne font pas vraiment de sens. Dans ce cas, les valeurs aberrantes sera plus grande, et les critères correspondants sera trop tolérant, ce qui conduit à un grand nombre de valeurs aberrantes correspondant capturant une utilisation normale. Dans un environnement continu impliquant les données réelles de ces expériences, on pourrait décider de conserver 70 comme le nombre d'alarmes souhaitées et de regarder le rapport des fausses alarmes. Si ce ratio diminue, l'utilisateur final doit envisager d'augmenter le nombre d'alarmes souhaitées. 6 Conclusion Dans cet article, nous avons proposé i) un système de classification non supervisée pour isoler les comportements cal atypi-, ii) une méthode de détection des valeurs aberrantes parameterless basée sur vaguelettes et iii) une nouvelle fonctionnalité pour caractériser les intrusions. Cette nouvelle fonctionnalité est basée sur la répétition d'une tentative d'intrusion d'un système à l'autre. En fait, nos expériences montrent que les comportements atypiques ne peuvent pas être directement utilisés pour déclencher des alarmes puisque la plupart d'entre eux correspondent à des demandes normales. D'autre part, ce très grand nombre de valeurs aberrantes peut être filtrée (réduire la quantité de comportements atypiques jusqu'à 0,21%) de manière efficace afin de trouver de véritables tentatives d'intrusion (ou punaises at-) si l'on considère plus d'un site. Finalement, notre méthode garantit un très faible taux de fausses alarmes, rendant ainsi le regroupement sans supervision pour la détection d'intrusion efficace, réaliste et réalisable. Aggarwal Références, C. C. et P. S. Yu (2001). Outlier détection de données de grande dimension. SIGMOD 30 dossiers (2), 37-46. Aleskerov, E., B. Freisleben, et B. Rao (1997). Cardwatch: Un système d'exploitation de base de données sur réseau de neurones pour la détection de la fraude par carte de crédit. Dans IEEE CIFE. Barnett, V. et T. T. Lewis (1994). Outliers dans les données statistiques. John Wiley & Sons. Détection d'intrusion collaborative Billor, N., A. S. Hadi, et P. F. Velleman (2000). BACON: bloqué proposants aberrantes adaptatives efficaces informatiquement. Statistiques de calcul et d'analyse des données 34, 279-298. Bloedorn, E., A. D. Christiansen, W. Hill, C. Skorupka et L. M. Talbot (2001). L'exploration de données pour la détection d'intrusion réseau: Comment commencer. Rapport technique, MITRE. Breunig, M. M., H.-P. Kriegel, R. T. Ng, J. et Sander (2000). Lof: identifier densité-bas ed valeurs aberrantes locales. SIGMOD 29 dossiers (2), 93-104. Ceglar, A., J. F. Roddick, et D. M. W. Powers (2007). Curio: Une valeur aberrante rapide et algorithme de détection des valeurs aberrantes assorti- ment pour les grands ensembles de données. En 2e Atelier international sur l'intégration de l'intelligence artificielle et Data Mining, pp. 37-45. Chandola, V., A. Banerjee, et V. Kumar (2008). détection d'anomalies - une enquête. ACM Computing Surveys Pour apparaître, Pour apparaître. Chimphlee, W., A. H. Abdullah, M. N. Md Sap, et S. Chimphlee (2005). Ano détection Maly sans supervision avec des données non marquées en utilisant le regroupement. Dans la conférence internationale sur les informa- tions et de la technologie de communication. Daubechies, I. (1992). Dix conférences sur vaguelettes. Philadelphia, PA, USA: Société de mathématiques appliquées et industrielles. Dokas, P., L. Ertoz, V. Kumar, A. Lazarevic, J. Srivastava, et P. Tan (2002). L'exploration de données pour la détection d'intrusion réseau. NSF Atelier sur la prochaine génération de Data Mining. Duan, L., D. Xiong, J. Lee, et F. Guo (2006). Un algorithme de regroupement spatial sur la base densité locale de bruit. IEEE Conférence internationale sur les systèmes, l'homme et Cybernétique. Eskin, E., A. Arnold, M. Prerau, L. Portnoy, et S. Stolfo (2002). Un cadre géométrique pour la détection d'anomalie non supervisée: intrusions détecter dans les données non marquées. Applications de l'exploration de données dans la sécurité informatique, 333-342. Ester, M., H.-P. Kriegel, J. Sander, et X. Xu (1996). Un algorithme basé sur la densité pour découvrir les clusters dans les grandes bases de données spatiales avec le bruit. En 2ème Conférence internationale sur la découverte de connaissances et d'exploration de données, p. 226-231. Fan, H., O. R. Zaiane, A. Foss, et J. Wu (2006). Un non paramétrique détection des valeurs aberrantes pour découvrir effica- vement le plus n valeurs aberrantes à partir de données de conception. En PAKDD. Fujimaki, R., T. Yairi, et K. Machida (2005). Une approche de problème de détection d'anomalie de l'engin spatial en utilisant l'espace de fonctionnalité du noyau. Dans 11 SIGKDD. Il, Z., X. Xu, et S. Deng (2003). Découverte de valeurs aberrantes locales à base de cluster. Motif Lettres de reconnaissance 24, 1641-1650. Hodge, V. et J. Austin (2004). Une enquête sur les méthodes de détection des valeurs aberrantes. gence artificielle Intelli Review 22, 85-126. Jain, R. K. et R. C. Dubes (1988). Les algorithmes de clustering de données. Prentice-Hall, Inc. Jin, W., A. K. H. Tung, et J. Han (2001). Mines haut n valeurs aberrantes locales dans les grandes bases de données. 7e conférence internationale SIGKDD sur la découverte des connaissances et l'exploration de données, p. 293-298. Joshua Oldmeadow, J., S. Ravinutala, et C. Leckie (2004). regroupement adaptatif pour la détection d'intrusion réseau. Dans 8 PAKDD. G. Singh et al. Knorr, E. M. et R. T. Ng (1998). Les algorithmes pour l'extraction des valeurs aberrantes basés sur la distance dans les grands ensembles Data-. En 24e Conférence internationale sur les très grandes bases de données, pp. 392-403. Kwitt, R. et U. Hofmann (2007). détection des anomalies dans le trafic non surveillé réseau au moyen de pca robuste. Dans Multi-Conférence internationale sur l'informatique dans le Global Information Technology. Lazarevic, A., L. Ertoz, V. Kumar, A. Ozgur, et J. Srivastava (2003). Une étude comparative des systèmes de détection d'anomalies dans la détection d'intrusion réseau. En 3ème SIAM DM. Lee, W. et D. Xiang (2001). Mesures d'information pour la théorie de détection des anomalies. Dans IEEE Symposium sur la sécurité et la confidentialité. Luo, J. (1999). L'intégration de la logique floue à des méthodes d'extraction de données pour la détection d'intrusion. Manganaris, S., M. Christensen, D. Zerkle, et K. Hermiz (2000). Une analyse de l'exploration de données des alarmes ITR. Réseaux informatiques 34, 571-577. Marchette, D. (1999). Une méthode statistique pour établir le profil du trafic réseau. Dans le 1er USENIX TRAVAiL boutique de détection d'intrusion et de surveillance réseau, p. 119-128. Markou, M. et S. Singh (2003). Détection de nouveauté: un examen - Partie 1: approches statistiques. Traitement du signal 83, 2481-2497. Ng, R. T. et J. Han (1994). méthodes de classification efficace pour l'extraction de données spatiales. Dans la 20ème Conférence internationale sur les très grandes bases de données, pp. 144-155. Otey, M., S. Parthasarathy, A. Ghoting, G. Li, S. Narravula, et D. Panda (2003). Vers Intrus base nic- détection d'ions. 9e conférence internationale SIGKDD sur la découverte des connaissances et l'exploration de données, p. 723-728. Papadimitriou, S., H. Kitagawa, P. Gibbons, et C. Faloutsos (2003). LOCI: détec- tion rapide aberrante en utilisant l'intégrale de corrélation locale. Dans 19 CIED. Patcha, A. et J.-M. Park (2007). Une vue d'ensemble des techniques de détection d'anomalies: Les solutions existantes et des dernières tendances technologiques. Comput. Réseaux 51, 3448-3470. Pires, A. et C. Santos-Pereira (2005). En utilisant le regroupement et estimateurs robustes pour détecter les valeurs aberrantes dans les données à plusieurs variables. Dans la Conférence internationale sur les statistiques robustes. Portnoy, L., E. Eskin, et S. Stolfo (2001). Détection d'intrusion avec des données non marquées à l'aide de l'anneau cluste-. ACM CSS Atelier sur l'exploration de données appliquée à la sécurité. Ramaswamy, S., R. Rastogi, et K. Shim (2000). Des algorithmes efficaces pour les valeurs aberrantes extraction de grands ensembles de données. SIGMOD 29 dossiers (2), 427-438. Rousseeuw, P. et A. M. Leroy (1996). La régression robuste et Outlier détection. Wiley-IEEE. Schölkopf, B., J. Platt, J. Shawe-Taylor, A. Smola, et R. W. (2001). L'estimation du soutien de la distribution de grande dimension. Neural Computation 13, 1443-1471. Impôt, D. M. J. et R. P. W. Duin (2001). La combinaison de classificateurs d'une classe. Lecture Notes in Computer Science 2096, 299-317. Valdes, A. et K. Skinner (2001). corrélation d'alertes probabilistes. Dans les progrès récents en matière de détection d'intrusion, pp. 54-68. Vinueza, A. et G. Grudic (2004). Unsupervised détection des valeurs aberrantes et l'apprentissage semi-supervisé. Rapport technique CU-CS-976-04, Univ. du Colorado à Boulder. Collaboration de détection d'intrusion Wu, N. et J. Zhang (2003). L'analyse factorielle basée détection des anomalies. Dans l'atelier IEEE sur l'assurance de l'information. Yegneswaran, V., P. Barford, et S. Jha (2004). la détection globale d'intrusion dans le système de recouvrement de domino. En réseau et Symposium de sécurité distribuée. Zhong, S., T. M. Khoshgoftaar, et N. Seliya (2007). intrusion réseau basé détec- tion Clustering. International Journal de la fiabilité, la qualité et l'ingénierie de sécurité 14, 169-187. Résumé La détection d'intrusion un domaine is important de la sécurité verser des Systèmes d'Informa- tion. Les Systèmes de détection d'intrusion (IDS) Les plus sur la utilisés reposent de signatures et détection Ontario Besoin de jour à Fréquentes mises verser un Défendre les contre Système nouvelles Attaques. D'un Autre Côté, la d'détection may Compenser CE anomalie Besoin, de Mais compositions provoquent Fausses alarmes Nombreuses. En effet, un comportement de Devie Qui sig- nificative des Manière Comportements sérums habituels par Considéré Comme un IDS dangereux les anomalies Utilisant. Isoler les intrusions Véritables Dans un ensemble d'un Fait is alarmes importante défi pour tous, IDS. Dans this article, nous considérons Une nouvelle characteristic verser les isoler Comportements malicieux. This is characteristic sur their possible basée d'un redites d'information à Système Un autre. Nous proposons un nouveau Principe de détection des objets Atypiques et le validons PAR UNE Série d'Expérimentations.