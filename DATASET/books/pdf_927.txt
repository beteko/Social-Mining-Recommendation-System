microsoft version_finale docdes fonctions oubli intelligentes entrepôts données aliou sabine goutier georges hébrail barrault 75634 paris cedex france hebrail général gaulle 92141 clamart cedex france georges hebrail sabine goutier résumé entrepôts données stockent quantités données massives arrivent saturation langage spécifications fonctions oubli défini résoudre problème offrir possibilité effectuer analyses historique données spécifica tions définissent résumés agrégation échantillonnage conserver parmi données oublier cette communication présente langage spécifications ainsi principes algorithmes assurer façon mécanique gestion fonctions oubli introduction jours moyens stockage soient performants moins moins chers entrepôts données arrivent saturation question données conserver forme historique poser rapidement choisir quelles données doivent archivées quelles données doivent conservées actives entrepôts données solution appliquée général assurer chivage périodique données anciennes cette solution satisfaisante archivage remise ligne données opérations coûteuses point considérer données archivées données perdues pratique inutilisa futur point utilisation cadre analyse cette communication proposons solution éviter saturation trepôts données langage spécifications fonctions oubli données anciennes défini déterminer données doivent présentes entrepôt données chaque instant spécifications fonctions oubli conduisent supprimer façon mécanique données oublier conservant résumé celles agrégation échantillonnage agrégation échantillonnage constituent techniques complémentaires résumer données considérons entrepôt données analyse click stream sites temps données détaillées anciennes deviennent moins moins utiles peuvent agrégées exemple agréger données conserver certaines données jugées intéres santes choisies façon aléatoire pouvoir effectuer analyses données entrepôt langage spécifications défini cadre modèle relationnel chaque table défini moyen spécifications ensemble uplets archiver raisons applicatives parmi uplets archiver échantillons peuvent conservés cadre utilisation entrepôt algorithmes mettre fonctions oubli intelligentes entrepôts données contenu entrepôt conformément spécifications fonctions oubli présentés noter algorithmes gérés administrateur bases données étudiés programmés prototype oracle cette communication apporter réponse problème saturation entrepôts approche décrite applique façon générale bases données relationnelles suite papier structurée comme section expose rapport fonctions oubli section présentées spécifica tions fonctions oubli après avoir défini formellement donnée présenté exemple motivation section propose structures données adaptées stockage données agrégées présente algorithmes mettre contenu entrepôt après application fonctions oubli section traite conservation échantil enfin section conclusion perspectives associées travail présentées travail relier travaux vacuuming approche permettant primer physiquement données temporelle données anciennes certaine seuil concept développé jensen jensen lorsqu particulière spécifiée données antérieures cette considérées comme étant inaccessibles doivent supprimées physiquement données technique réduction données décrite cadre bases données multidimensionnelles langage spécifications proposé réduire granularité données anciennes agrégeant données anciennes niveaux supérieurs grossiers travaux similaires nôtres cependant approches proposons cette communication appliquent entrepôts données largement bases données relationnelles contraintes référentiel peuvent exister entre tables différence travaux appliquent données multidimensionnelles stockées données auteurs proposent conserver détail certaines données perspective analyse données récemment beaucoup travaux effectués données existe besoin résumer données rapport temps exemple problème calcul agrégats temporels données suggéré maintenir agrégats différents niveaux granularité rapport temps données anciennes agrégées niveaux grossiers alors données récentes agrégées niveau cette communication reprenons concepts travaux façon agrégées données spéci administrateur entrepôt contrôlé travail relier aussi expiration données garcia molina cadre matérialisées gupta mumick approche consiste détecter données suppression affecte maintenance matérialisées entrepôt citer également travaux toman expiration données problème étudier expiration données contexte bases données histo risées stockent historique différents états données cependant travaux intéressons historique différents états données historique données stockées explicitement données entrepôt données évoquer principe ramasse miettes boehm programmes ramasse miettes constitue forme gestion automatique mémoire déterminer objets référencés récupérer stockage utilisé objets ramasse miettes analyser liens entre objets avant suppri travaux aussi lorsque fonctions appliquées uplets peuvent archiver alors référencés autres uplets encore archivés section traite problème similaire lorsque contraintes référentielles darin existent entre tables notre contribution cette communication extension réalisation proto œuvre langage spécifications fonctions oubli présenté travail spécifications définies administrateur données permettent appliquer façon mécanique fonctions oubli gèrent suppression données archiver prise compte contraintes référen tielles résumés conservés agrégats échantillons données détaillées chaudhuri auteurs montrent répondre requêtes utilisant seulement échantillons données agrégées totale lorsque dispose données agrégées données détaillées correspon dantes toujours possible répondre requêtes agrégation fournissant réponses approximatives autre théorie échantillonnage ardilly montré inférer propriétés ensemble données partir échantillons fouille données comme arbres décisions exemple seulement considérer agrégats données détaillées justifie notre approche conservation résumés données archiver spécification fonctions oubli notion donnée cadre travail considérons chaque donnée uplet table notre étude associée notée correspondra valeur attribut explicitement associé donnée timestamp système représentant dernière donnée donnée calculé courante notée défini comme étant différence entre dates dates peuvent exprimées unités temps suivantes seconde second minute minute heure month trimestre quarter année adoptons conventions suivantes minute secondes month quarter calculer utiliserons dates unité second quelles soient unités temps donnée calculé manière suivante fonctions oubli intelligentes entrepôts données exprimée niveau second a_la_seconde exprimée niveau second a_la_seconde a_la_seconde a_la_seconde fonction transforme seconde exprimée seconde considérant premier instant période temps verte cette exemple a_la_seconde a_la_seconde fevrier quelques exemples illustration présentés dessous second a_la_seconde a_la_seconde 2635200 second month enfin relation ordre définie entre considérant seulement en_secondes en_secondes en_secondes fonction transforme secondes durée expri autre unité temps utilisant conventions présentées dessus exemple month exemple motivation considérons entrepôt données contenant tables suivantes client cliid ville salaire commande cmdid date_cmd montant cliid chaque table attribut souligné représente primaire identifiant table client attributs cliid identifiant ville salaire client table commande cmdid désigne identifiant date_cmd associée mande montant montant commande cliid étrangère référençant table client considérons fonction suivante table commande summary table commande client cliid timestamp date_cmd hierarchy geographie ville département région month detail month montant client ville client montant département month montant région montant sample where montant summary fonction oubli indique abord applique table commande associé chaque uplet commande timestamp fourni colonne date_cmd timestamp date_cmd spécifications définissent quand données détaillées uplets table commande doivent archivées résumé conserver après application fonction oubli données moins jours données inférieur garde détail table commande uplets table commande données supérieur peuvent archivées versions agrégées données doivent conservées données compris entre doivent agrégées ville noter ville attributs table client référencée commande rendu possible grâce spécification client cliid données compris entre doivent décrites agrégats niveau département passage agrégation ville agrégation département possible utilisant hiérarchie géographie existe hiérarchie nommée géographie entre attributs ville dépar tement région données compris entre doivent agrégées région année données compris entre doivent agrégées aucun agrégat conservé données supérieur enfin spécification sample where montant signifie conservation échantillon aléatoire simple composé uplets parmi uplets archivés montant supérieur langage spécifications fonctions oubli langage défini spécifier fonction oubli associée chaque table données grammaire langage présentée annexe comprend caracté ristiques supplémentaires telles discrétisation attributs numériques utiliser comme attributs lesquels effectuer agrégation lorsque spécifications fonctions oubli définies application fonctions oubli automatique algorithmes structures stockage nécessaires assurer gestion fonctions oubli gestion fonctions oubli agrégation structure stockage données agrégées fonction oubli contenir plusieurs spécifications agrégation chacune spécifications indique niveau agrégation dépendant partir spécifications associe famille cubes utilisés stocker données agrégées famille cubes liste dimensions dimension temps espace vectoriel mesures chaque mension associée liste ordonnée niveaux niveaux comprenant valeur agrège complètement dimension niveaux dimension représentent hiérarchie noter cadre travail considère existe seulement cette possibilité présentée cette communication écrit fonctions oubli intelligentes entrepôts données hiérarchie dimension dimension temps organisée manière vante niveaux second minute month quarter considérant notre exemple avons c_commande emplacement total_montant levels emplacement ville departement region levels levels month utilisant famille cubes associer cette famille appelé aussi cuboïde selon certaines références chaque spécification agrégation famille cubes défini veaux chaque niveau associé ensemble leurs représentant domaine chaque niveau également associé ensemble valeurs représentant domaine cellule tuple reprenant exemple présenté paragraphe avons month montant ville ville sum_montant montant département month departement month sum_montant montant région region sum_montant montant sum_montant différentes spécifications peuvent ordonnées rapport cubes peuvent également ordonnés moins agrégé agrégé utilise notation noter signifie partition données détaillées induite celle induite données agrégées algorithmes proposons mettre données agrégées basés trois propriétés mesures agrégation additives différents cubes disjoints données agrégées celle données détaillées commutent additivité mesures agrégation mesures agrégation considère additives expressions calculées partir mesures additives notre exemple montant représente mesure additive cette propriété assure cubes données appartenant peuvent calcu partir données noter considère fonction rément cette communication remplacée fonctions count spécification défini valeur spécifiée juste après ordre total existe seulement hiérarchie dimension différents cubes disjoints avons spécifications agrégation ordonnées rapport considérant spécifications ordonnées ciées respectivement cubes avons tuple table commande notre exemple compte nière suivante seulement conséquence cubes fonction oubli disjoints aucune cellule incluse fonctionnellement cellule agrégé différents cubes contenus exclusifs stockent données périodes différentes temps commutativité mises mises effectuer données agrégées fonctions oubli types uplet détail archiver table stocké données agrégées peuvent transférées autre agrégé puisque répercussion uplets détail cubes chaque uplet compte celui satisfait critère spécifica correspondante alors équivalent commencer répercuter détail cubes effectuer transfert données agrégées entre cubes commencer transfert entre cubes ensuite répercuter uplets détail noter mises effectuer fonctions oubli peuvent appliquées instant façon régulière exemple chaque façon irrégulière spora diquement chaque application fonctions oubli nouveaux uplets table peuvent satisfaire critères spécifications agrégation doivent agrégés stockés cubes correspondants egalement lorsque données agrégées vérifient critère spécification correspondante vérifient critère respondant agrégé données doivent alors transférées noter hypothèse espace stockage nécessaire contenir données différents cubes limité rendu possible différents cubes disjoints propriété présentée dessus système activation désactivation cellules cubes lorsqu donnée passer autre cellule occupait supprimée désactivée répercuter donnée commencera vérifier occuper place cellule désactivée auquel cette cellule activée conséquence propriété commutativité mises distinguons procédures peuvent exécutées ordre quelconque procédure trans données agrégées entre cubes procédure répercute uplets détail archivés cubes algorithmes présentés dessous chaque cellule caractérisée champs position mesure position cellule ensemble valeurs niveaux dimensions déterminent cette cellule position cellule paris paris mesure correspondante égale transfert données agrégées entre cubes chaque critère spécification détermine données doivent agrégées fonctions oubli intelligentes entrepôts données chaque chaque cellule spécifications associées respectivement cubes parcours accéléré index dimension temps cellule couvrant trouvé incrémentation chaque mesure agrégation count sinon sinon sinon vérifier existe cellule désactivée ctrouvé remplacer trouvé ctrouvé position position ctrouvé mesure mesure activer ctrouvé sinon créer cellule désactiver cellule noter cubes possible cellules puissent satisfaire critère spécification correspondant suivant elles vérifient critère spécification correspondant cette situation survient général lorsque fonctions oubli appli quées pendant certain temps exemple considérant notre exemple présenté graphe lorsque fonctions oubli appliquées pendant correspondant deuxième spécification month montant ville doivent directement transférées agrégé explique présence algorithme premières boucles imbriquées répercussion uplets détail cubes ordre traitement cubes important chaque uplet stocké chaque detail table agrégés selon dimensions spécifications associées pectivement cubes spécification detail suppose existe index dimension temps chaque cellule detail cellule ayant mêmes valeurs dimensions trouvé incrémentation chaque mesure agrégation count notre exemple month detail sinon sinon sinon vérifier existe cellule désactivée ctrouvé remplacer trouvé ctrouvé position position ctrouvé mesure mesure activer ctrouvé sinon créer cellule gestion contraintes référentielles cette section considérons définition plusieurs fonctions oubli chacune associée table problème alors existe contraintes référentiel entre tables lesquelles définies fonctions oubli considérons notre exemple table facture factid date_fact montant cmdid factid identifiant date_fact représente facture montant montant facture cmdid étrangère référençant attribut cmdid table commande timestamp fonction oubli définie facture fourni lonne date_fact spécifications suivantes défnies month detail month montant month problème apparaît lorsqu uplet archiver table commande exemple référencé uplet autre table facture notre encore archivé considérant notre exemple applique fonctions oubli exemple chaque arriver uplets table commande soient spécifiés archiver alors uplets facture respondants encore archivés puisque factures garde pendant commandes elles peuvent archivées propo solution suivante suspendre archivage jusqu archivé marquer archiver chaque application fonctions oubli alors vérifier uplets référencent archivés auquel uplet devra archivé notre exemple marquer uplets table commande spécifiés archiver pourront archivés lorsque uplets table facture correspondants référencent auront archivés noter aucune autorisée uplets marqués archiver gestion conservation échantillons comme présenté paragraphe langage spécifications permet conserver échantillons données archivées spécification sample indique assurer maintenance échantillon aléatoire simple taille chaque données détaillées archivées uplets échantillonnés stockés table séparée ayant structure table laquelle définie fonction oubli chaque application fonctions oubli nouveaux uplets peuvent archiver doivent compte échantillon suppose exemple fonctions oubli intelligentes entrepôts données échantillon aléatoire simple individus conservé parmi uplets archi nouveaux uplets archiver depuis dernière oubli maintenance échantillon assurée manière incrémentale utilise algorithme réservoir vitter vitter propriété fondamentale algorithme après traitement chaque individu réservoir constitue échan tillon aléatoire individus visités noter taille échantillons fixée définition spécification sample comme indiqué section échantillons aléatoires population peuvent utilisés inférer information cette population totale partir données observées échantillons ardilly reprenant notre exemple estimer somme montants commandes partir échantillon uplets archiver table commande effectuer telles estimations effectif population uplets échantillonner conservé conclusion perspectives avons proposé solution résoudre problème saturation entrepôts données langage défini spécifier données archiver résumés agrégats échantillons conserver lorsque fonctions oubli définies algorithmes présentés mettent contenu entrepôt façon automatique confor mément spécifications fonctions oubli prototype développé oracle implémentation langage ainsi algorithmes présentés perspective associée travail exploitation résumés conservés effec analyses répondre manière approximative requêtes données après application fonctions oubli solution présentée applique bases données relationnelles schéma étoile pourrait intéressant définir fonctions oubli spécifiques cubes données références ardilly techniques sondage technip boehm bounding space usage conservative garbage collectors proceedings sigplan sigact symposium principles programming languages pages january hébrail picard fonctions oubli entrepôts données clermont ferrand janvier chaudhuri motwani narasayya robust optimisation based approach approximate answering aggregate queries proceedings sigmod pages santa barbara california réservoir considéré comme vecteur longueur étant taille échantillon multi dimensional regression analysis series streams pages china garcia molina labio expiring warehouse proceedings conference pages gardarin bases données objet relationnel eyrolles gupta mumick selection views materialize warehouse transactions knowledge engineering volume pages jensen vacuuming tsql2 temporal query language snodgrass editor chapter kluwer academic publishers jensen pedersen specification based reduction dimensional warehouses timecenter techreport toman expiration historical databases proceedings international symposium temporal representation reasoning press vitter random sampling reservoir transactions mathematical pages march annexe grammaire langage majuscules constructions entourées facultati celles suivies doivent apparaître moins symbole signifie autre forme possible éléments commence représentent séquence phanumérique quelconque fonction_oubli summary table nom_table liste_use_join_table timestamp system nom_colonne specif_discretise specif_hierarchie specif_detail liste_specif_agregation specif_keep summary nom_table idatt liste_use_join_table use_join_table liste_use_join_table use_join_table use_join_table empty nom_table colonnes colonnes colonne colonnes colonne colonne idatt specif_discretise empty discretisation specif_discretise discretisation discretisation discretise colonne idatt intervalle idatt intervalle valeur numerique valeur numerique valeur numerique nombre fonctions oubli intelligentes entrepôts données nombre chiffre nombre chiffre chiffre specif_hierarchie empty hierarchie specif_hierarchie hierarchie hierarchie hierarchy dimension niveaux hierarchie dimension idatt niveaux hierarchie niveau hierarchie niveaux hierarchie niveau hierarchie niveau hierarchie idatt specif_detail empty critere detail liste_specif_agregation specif_agregation liste_specif_agregation specif_agregation specif_agregation critere agregation donnees critere valeur niveau temps valeur chiffre valeur chiffre niveau temps second minute month quarter agregation donnees mesures liste mesures agregation mesures agregation agregation count colonne count liste empty liste niveaux liste niveaux niveau liste niveaux niveau niveau table colonne discretise niveau temps specif_keep empty sample valeur where condition condition expression condition logique expression table colonne expression simple expression simple idatt valeur numerique logique summary amount stored warehouses grows quickly saturated overcome problem propose language specifying forgetting tions stored order preserve possibility performing interesting analyses historical specifications include definition summaries deleted these summaries aggregates samples deleted house forgetting functions specified warehouse automatically updated order follow specifications paper presents language speci fications structure summaries algorithms update warehouse