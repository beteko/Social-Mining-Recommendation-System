Recommandation basée sur les mots-clés Recherche sur les bases de données relationnelles Haithem Ghorbel *, Nouha Othman * et Rim Faiz ***, * Université de Tunis, l'Institut Supérieur de Gestion de Tunis, LARODEC, Tunisie gho.haithem, othmannouha @ gmail.com *** Université de Carthage IHEC Carthage, LARODEC, Tunisie rim.faiz@ihec.rnu.tn~~V~~singular~~3rd Résumé. Récemment, il y a eu un intérêt croissant pour la recherche mot-clé dans les bases de données relationnelle en raison de sa facilité d'utilisation. Bien que des recherches approfondies ont été récemment fait dans ce contexte, la plupart de cette recherche exige non seulement un accès préalable aux données qui limite considérablement leur applicabilité si cette condition est pas vérifié, mais renvoie aussi des réponses très génériques. Cependant, fournir aux utilisateurs des réponses personnalisées est devenu plus que jamais nécessaire en raison de la surabondance de données qui peut être gênant pour l'utilisateur. Le défi de revenir personnalisé et des réponses pertinentes que les informations des utilisateurs reste la satisfaction des besoins. Inspiré par l'application réussie de la technique de filtrage collaboratif dans les systèmes recommender, nous proposons une nouvelle approche basée sur les mots clés pour fournir aux utilisateurs des résultats personnalisés en fonction de la pothèse hy- que seules les informations sur le schéma de base de données est disponible. 1 Introduction Au fil des décennies, une quantité explosive de données structurées ont été stockées dans des bases de données relationnelles (BDR) s. Ces derniers ont été largement utilisés en raison des informations qu'ils fournissent riches, y compris les relations entre les différentes entités du DB. L'élaboration de méthodes d'interrogation efficaces pour les utilisateurs de référentiels facilement recherche énorme et complexe sans le besoin d'expertise technique est devenu l'un des plus grands défis de la communauté de base de données (Agrawal et al., 2002; Aditya et al., 2002). L'émergence de moteurs de recherche Web a mot-clé recherche la technique de recherche le plus couramment utilisé. La force de ce dernier est qu'il permet aux utilisateurs d'exprimer facilement leurs besoins d'information par quelques mots-clés sans avoir besoin de connaître le schéma de base de données ou les langages de requêtes structurées. Néanmoins, une telle technique nécessite un accès avant le contenu de base de données afin de construire les indices qui Pinpoint les différents tuples associés aux mots-clés au moment de l'exécution (Bergamaschi et al., 2011). Ceci est une lacune considérable car elle limite son applicabilité si un accès préalable aux données est impossible. Une autre limitation importante est que les inter-dépendances entre les mots-clés de la requête ont été ignorés. En fait, le sens de chaque mot-clé dans la requête d'un utilisateur dépend aussi de la signification des autres. D'autre part, avec le formidable développement de l'information tech- nologie, la quantité de données a connu une croissance exponentielle. Ainsi, trouver les informations souhaitées dans une base de données massive est devenue un élément crucial, mais aussi une tâche difficile. Recommandation Systems (ORS) sont de puissants outils pour filtrer les données, fournissant uniquement ce que l'utilisateur est le plus susceptible chercher. Dans cet article, nous proposons une tentative réussie de combiner des techniques et RDB pour rSS surmonter la limitation de la recherche par mot clé. Nos objectifs d'approche proposée au retour des réponses personnalisées quand on n'a pas accès avant les données réelles stockées dans la base de données. Le reste du document est structuré comme suit: Dans la section 2, nous passons en revue les principaux travaux en cours sur l'interrogation BRD. Nous décrivons ensuite notre - 347 - Recommandation basée sur les mots-clés Recherche sur Relational approche BDs dans la section 3. Par la suite, nous présentons à la section 4, nous présentons notre évaluation expérimentale et les résultats. Vers la fin, nous concluons et présentons nos perspectives. 2 Travaux connexes sur Interrogation bases de données relationnelles On peut dire que, recherche par mot clé est devenu la norme pour la recherche d'informations sur le Web, car il permet à l'utilisateur de formuler facilement des requêtes avec quelques mots-clés. Cependant, sa simplicité est livré avec un prix; mots-clés sont très ambigu et leurs besoins de sens destinés à explorer plus loin (Wang et al., 2008). Au fil des années, les approches avancées pour le mot clé effectuez des recherches docu- ments ont été proposés pour retourner des réponses pertinentes à l'utilisateur. Ces approches, cependant, ne renvoient pas de bons résultats avec des systèmes RDB (BRD), comme la recherche de style IR considère tuples comme données non structurées, alors que dans BRD, les informations récupérées sont réparties entre les tables. Contrairement à des documents textuels, les tuples sont liés par les contraintes de clés étrangères primaires. Ainsi, les chemins clés étranger primaires connexion tuples qui contiennent des mots clés, représentent un élément essentiel pour résoudre une requête sur une base de données mot-clé. Définition des modèles de représentation des bases de données pour récupérer ces chemins est cru- cial. Pour ces raisons, l'application directe des approches par mots clés à des bases de données relationnelles, où l'information est fragmentée dans de nombreux tableaux, est ni efficace, ni efficace (Bergamaschi et al., 2014). En effet, plusieurs systèmes ont été proposés dans la littérature, où les plus populaires sont des banques (Aditya et al., 2002), banksii (Kacholia et al., 2005), DBXplorer (Agrawal et al., 2002), DISCOVER (Hristidis et Papakonstantinou, 2002) et SQAK (Tata et Lohman, 2008) et le plus un récent sont KEYMANTIC (Bergamaschi, Domnori, Guerra, Trillo Lado et Velegrakis, 2011), KEYRY (Bergamaschi, Guerra, Rota et Velegrakis, 2011) et SEMINDEX (Chbeir et al., 2014). L'objectif de ces systèmes est de mieux couvrir une requête mot-clé, afin de retourner des réponses qui correspond à l'intention de l'utilisateur. Ces approches peuvent être classées en deux grandes catégories: schéma basé et les approches tuple. Les approches fondées sur le schéma modèle, le schéma de base de données sous forme de graphique, dans lequel les noeuds expriment des rapports de base de données et les bords expriment entre in- clés interdépendance primaire et à l'étranger. De telles approches peuvent répondre à une requête mot clé par l'utilisation des informations de schéma pour générer des requêtes SQL dans BRD, comme dans DBXPLORER, DISCOVER, PRECIS, SQAK, KEYMANTIC et systèmes KEYRY. approches fondées sur le tuple tels que les banques et les banques II, le modèle de la base de données sous forme de graphique de données, dans lequel les noeuds représentent les tuples et des arêtes représentent les relations entre une paire d'uplets, tels que clés ou clé primaire de- pendances étrangère. La particularité d'un graphe de données est que les noeuds et les arêtes sont généralement pondérés, ce qui offre aux utilisateurs plus d'informations sur la façon dont les objets sont reliés entre eux. KEYMANTIC et KEYRY ont abordé la question de la recherche par mot clé sur BRD différemment; ils peuvent fournir des réponses à la requête de l'utilisateur sans la nécessité d'un accès préalable aux données stockées dans la base de données pour construire des indices qui localisera les tuples. 3 Solution proposée L'idée de base de notre approche, appelée DeepRec, est de combiner la recherche par mot clé sur RDB avec quelques techniques utilisées dans les systèmes recommender. vise DeepRec à intégrer des concepts de recommandation et des bases de données pour obtenir de meilleures réponses personnalisées à une simple requête basée sur mot-clé posté par un utilisateur. Il fournit des recommandations et des réponses fortuites, même lorsqu'il n'y a pas accès avant la base de données est autorisée, en se fondant sur les deux schémas et informations utilisateurs. Les différentes composantes de l'approche donnée sont détaillées ci-dessous. - 348 - H. Ghorbel et al. 3.1 Termes de schéma ne correspond à la première phase appelée schéma de calcul du poids consiste à déterminer les mots clés correspondant à des termes de schéma (attributs, relations) à partir d'une requête et les informations de schéma de la base de données. Les attributs et les relations sont considérées comme des métadonnées. Afin d'estimer la distance attribut / relation mot-, nous avons opté pour la mesure Levenshtein qui calcule le nom- bre minimal d'insertions, suppressions et remplacements nécessaires pour transformer une chaîne X en une chaîne Y. Cependant, une simple similitude de chaîne entre le mot-clé et le terme de schéma ne suffit pas en raison de l'hétérogénéité du vocabulaire de l'utilisateur. En fait, un utilisateur peut utiliser différents mots qui ne figurent pas dans les informations de schéma de la base de données. Pour tis fin, nous employons WordNet pour Word Sense homonymie (WSD), de sorte que chaque mot-clé utilisé est comparé à tous les synonymes, hyponymes et hy pernyms de chaque terme de schéma pour garder celui ayant la plus forte similitude. La deuxième phase appelée schéma poids personnalisation consiste à mettre à jour le schéma poids (SW) Matrice en utilisant les informations recueillies auprès des profils des utilisateurs. L'idée principale est d'ajouter ici le concept de filtrage collaboratif (CF) de l'ORS; profils de construction pour les utilisateurs et d'utiliser leur historique de recherche, ainsi que l'histoire des utilisateurs similaires à personnaliser les résultats. On calcule le schéma personnalisé Poids (PSW) qui utilise les informations des sessions pour mettre à jour la matrice SW. Des sessions similaires sont répertoriées dans une table. , On calcule ensuite combien de fois chaque terme de schéma a la valeur maximale, pour toutes les requêtes des sessions similaires. Nous stockons le résultat de ce calcul dans sa colonne spécifique dans la matrice SW. Chaque valeur de cette colonne est associée à chacun dans sa colonne analogique dans le SW pour obtenir les nouvelles valeurs de PSW dans leurs cellules correspondantes. En d'autres termes, nous pondérons les valeurs de la SW de chaque colonne par une variable qui affecte les premières valeurs en fonction du nombre de fois cette colonne a la valeur maximale. Le calcul de la meilleure adéquation possible des mots-clés à des conditions de base de données est connu comme le problème d'affectation. Les Munkres populaires, hongrois a.k.a., algorithme (Munkres, 1957), est une solution possible à ce problème, mais il ne fournit que la meilleure correspondance. Bergamaschi, Domnori, Guerra, Trillo Lado et Velegrakis (2011) adapté cet algorithme à notre contexte, de ne pas arrêter après la génération du sommet d'un mappage, mais continuer à générer les autres meilleurs. En outre, la matrice de poids est dynamiquement mis à jour chaque fois une mise en correspondance d'un mot-clé à un terme de base de données est décidée lors du calcul. 3.2 Valeur Poids contextualisation Le calcul de la matrice Valeur Poids (VW) est réalisée de la même manière que dans (Bergamaschi, Domnori, Guerra, Trillo Lado et Velegrakis, 2011). Le calcul se fait principalement dans les informations de domaine d'attributs. KEYMANTIC a utilisé une distance sémantique pour estimer le degré de parenté de deux concepts. Ainsi, chaque cellule de matrice dans la VW contient une valeur comme un indicateur de l'admissibilité et la pertinence du mot-clé avec le domaine d'attribut. Les mots-clés qui ont déjà été mis en correspondance avec schéma dans l'étape précédente s'attribué 0 dans chaque cellule de leurs lignes pour assurer qu'ils ne seront pas recalculées dans la VW. Après le calcul de la meilleure correspondance des termes de schéma Mi et la valeur matrice de pondération, la matrice de VW est mis à jour selon les conditions mises en correspondance avec le schéma. Dans les requêtes de mots-clés, un mot-clé peut se référer soit à un terme de schéma ou à une valeur dans un terme de schéma. Nous contextualiser la matrice de poids de valeur selon les termes mis en correspondance en termes de schéma de la PSW, en tenant compte des positions des mots-clés dans la requête. L'utilisateur peut utiliser plus d'un terme pour décrire un concept. L'intuition de base derrière notre méthode est de vérifier pour chaque mot-clé k si elle correspond à un terme de schéma x de ceux mis en correspondance. Ensuite, si k correspond à un mot-clé mis en correspondance avec un terme de schéma x, deux situations peuvent se présenter: si x est une relation R, on ajoute un Ω de poids à tous les attributs de R pour tous les mots-clés adjacents A (k) ∪ B (k ), sinon, si x est un attribut a d'une relation R, on augmente le poids de cet attribut et les attributs liés (avec dépendances fonctionnelles) en Ω pour tous les a (k) ∪ mots-clés B (k) k voisins. - 349 - Recommandation basée sur les mots-clés de recherche relationnelle DB A (k) et B (k) sont deux fonctions qui récupèrent les mots clés suivants et précédents voisins respectivement k. Ω est une variable, sa valeur est proportionnelle à la distance entre les mots-clés. La sortie de cette étape est une contextualisée Valeur Poids Matrice Vj (Mi). Encore une fois, nous allons utiliser l'extension de l'algorithme hongrois, cette fois-ci sur Vj (Mi), pour obtenir les meilleures affectations. 3.3 Génération des réponses de requêtes personnalisées: Le Vj (Mi) avec son associée Mi est une correspondance complète des mots-clés à termes DB, produisant ainsi une nouvelle combinaison nommée Aij. Le score de chaque c ombinaison est la somme des poids des Vj (Mi) et son Mi. associé requêtes SQL peuvent être obtenues avec la possession des combinaisons de première partition. Pourtant, cette dernière vient se trouver sur les mots-clés correspondent à leurs conditions de base de données adéquates, sans définir les relations entre les termes. Les travaux de ce processus sous la même hypothèse d'une absence d'accès avant des données telles que (Bergamaschi et al., 2011) ne considèrent la similitude entre les mots clés-attributs / domaine des similitudes, les attributs qui ne sont pas toujours approprié. Pour faire face à cette limitation, nous prenons avantage des profils construits par notre approche, de personnaliser les réponses. Donner un utilisateur actuel faisant une requête dans sa session en cours, on calcule la similitude de cette requête avec toutes les requêtes précédentes dans toutes les sessions en utilisant la similitude cosinus. La réponse que suscité un intérêt de l'utilisateur est crédité même sa requête associée est assez similaire à la requête en cours de l'utilisateur. 4 Evaluation expérimentale 4.1 Configuration expérimentale Dans nos expériences, nous avons utilisé 5 MySQL comme système de gestion de base de données relationnelle et WordNet 3.0 1 comme base de données lexicale. Nous lui avons expliqué le contenu de la base de données à aucun utilisateur technique sans exposer ses informations de schéma. Nous leur avons demandé de proposer des requêtes de mots-clés et de décrire ce qu'ils attendent que des réponses à leurs questions. Ensuite, un expert formule une requête SQL à cet effet. Nous avons comparé les résultats générés par notre approche avec ceux obtenus par l'expert. Nous avons utilisé une partie de la base de données MovieLens 2 100K. Lors de nos tests, 18 utilisateurs ont été impliqués, les requêtes de nous regroupons chaque utilisateur en une seule session. Le nombre de sessions est comprise entre 1 et 3 pour chaque utilisateur. Nous avons utilisé 105 requêtes distribuées entre les sessions des utilisateurs. Pour évaluer DeepRec, nous étions basés sur le nombre de mots clés et des sessions. Pour l'initialisation, nous avons utilisé les vues INFORMATION_SCHEMA fournies par MySQL qui permet de récupérer les métadonnées sur les objets dans la base de données. 4.2 Résultats expérimentaux et discussion La figure 1 montre une comparaison entre KEYMANTIC et DeepRec en termes de pourcentage de la 1ère réponses de position, le pourcentage de la non premières réponses de position et le pourcentage des réponses non trouvées qui indique les réponses pertinentes que le système ne parvient pas à revenir. Les expériences ont montré une amélioration du pourcentage des réponses 1er position sur la non premières réponses de position. Cependant, les pourcentages des réponses non trouvées pour les deux approches sont assez similaires. Les résultats du taux de réussite en fonction du nombre de séances sont données à la figure 2. Pour le nombre de mots clés et son impact sur le taux de réussite, nous avons calculé le pourcentage des réponses qui ont été considérées comme pertinentes pour les utilisateurs et retourné comme la première réponse tout en changeant le nombre de mots-clés dans la requête comme le montre la figure 2. 1. www.wordnet.princeton.edu 2. www.MovieLens.com - 350 - H. Ghorbel et al. FIGUE. 1 - Taux de réussite pour Généré DeepRec et KEYMANTIC Nous avons remarqué qu'aucun changement n'a été remarqué pour les réponses non trouvées. Certaines requêtes peuvent générer la réponse attendue, mais la plupart du temps, pas dans la première position, à l'exception de ceux qui ont été « aimé » avant par l'utilisateur. La variabilité des temps de traitement dépend du nombre de tables liées aux requêtes. Des résultats intéressants sont présentés pour les interactions des utilisateurs, y compris des sessions et des requêtes. Le nombre de réponses qui répondent aux attentes des utilisateurs a augmenté. Comme tout CF sur la base FIG. 2 - Taux de réussite selon Généré aux sessions et système Nombre Mots-clés, plus les utilisateurs que nous avons et les interactions plus qu'ils font avec le système, mieux sa performance est. Les expériences montrent qu'il n'y a pas un nombre optimal de mots-clés. Cependant, le nombre de mots clés peut augmenter soit la précision ou un heureux hasard selon les termes employés par l'utilisateur. Le problème de démarrage à froid de la technique CF est résolu par DeepRec. En outre, l'étape de personnalisation permet de prendre en compte chaque résultat qui correspond à la reque de l'utilisateur st. Ceci est très utile lorsqu'un utilisateur recherche une information qui a déjà recherché. Cependant, avec KEYMAN- TIC, quel que soit le nombre de fois que l'utilisateur interagit avec le système, il recalcule toujours les réponses en ignorant ce que l'utilisateur est probablement attend. 5 Conclusion Cet article a abordé le problème du traitement des requêtes par mot-clé sur BRD sous l'hypothèse que l'accès ne préalable aux données est possible. Notre contribution consiste à fournir aux utilisateurs des résultats sonalized per- dans ce contexte spécifique en élargissant une approche existante avec de nouveaux composants et des ressources à savoir, la personnalisation de la matrice de poids de schéma et les réponses, ainsi que les utilisateurs et les informations relatives à leurs interactions avec les système. Au-delà de simplement revenir réponses génériques, nos résultats indiquent que DeepRec fournit des résultats personnalisés qui correspondent mieux aux intention des utilisateurs. Avant la génération des réponses, nous avons profité du profil de l'utilisateur actuel à d'autres réponses de personnalisation basées sur la technique des FC de ORS; favoriser une réponse déjà aimé par l'utilisateur. Apporter des réponses personnalisées en l'absence de l'accès aux données avant est possible, rend utilisable DeepRec dans les bases de données Web et certains systèmes où la construction d'indices spécialisés ne sont pas une option possible. - 351 - Recommandation basée sur les mots-clés Recherche sur Relational Références DB Aditya, B., G. Bhalotia, S. Chakrabarti, A. Hulgeri, C. Nakhe, P. Parag et S. Sudarshan (2002). Banques: Navigation et recherche par mots clés dans les bases de données relationnelles. Dans Actes de la 28ème conférence internationale sur les très grandes bases de données, pp. 1083-1086. Agrawal, S., S. Chaudhuri et G. Das (2002). Dbxplorer: Système A pour la recherche par mots-clés sur les bases de données relationnelles. En CIED, p. 5-16. Bergamaschi, S., E. Domnori, F. Guerra, R. Trillo Lado et Y. Velegrakis (2011). Recherche par mots clés sur les bases de données relationnelles: Une approche de métadonnées. Dans Actes du 2011 SIGMOD Conférence internationale sur la gestion des données, p. 565-576. Bergamaschi, S., F. Guerra, S. Rota et Y. Velegrakis (2011). Une approche de modèle de Markov caché à la recherche par mots-clés sur les bases de données relationnelles. Dans la modélisation conceptuelle ER 2011, pp. 411-420. Bergamaschi, S., F. Guerra, et G. Simonini (2014). Recherche par mots clés sur les bases de données relationnelles: Sues, iS approches et défis ouverts. Dans un pont entre la recherche et l'information des bases de données, pp. 54-73. Chbeir, R., Y. Luo, J. Tekli, K. Yetongnon, C. R. Ibanez, A. J. Traina, C. Traina Jr, et M. Al Assad (2014). Semindex: index inversé sémantique-courant. En progrès dans les bases de données et systèmes d'information, pp. 290-307. Hristidis, V. et Y. Papakonstantinou (2002). Découvrez: les mots-clés de recherche dans les bases de données relationnelles. Dans Actes de la 28ème conférence internationale sur les très grandes bases de données, pp. 670-681. Kacholia, V., S. Pandit, S. Chakrabarti, S. Sudarshan, R. Desai et H. Karambelkar (2005). l'expansion bidirec- tionnel pour la recherche par mot clé sur les bases de données graphiques. Dans Actes de la 31ème Conférence internationale sur des bases de données très volumineux, pp. 505-516. Munkres, J. (1957). Les algorithmes pour les missions et les problèmes de transport. Journal de la Société de mathématiques appliquées et industrielles (1), 32-38. Tata, S. et G. M. Lohman (2008). Sqak: faire plus avec des mots-clés. Dans Actes de la conférence internationale SIGMOD 2008 sur la gestion des données, pp. 889-902. Wang, H., K. Zhang, Q. Liu, T. Tran et Y. Yu (2008). Q2semantic: Une légère interface de mot-clé pour la recherche sémantique. Dans le Web sémantique: Recherche et Applications, pp 584-598.. Résumé recemment, la recherche par mots-clés les bases de Dans Données un relationnelles un in- Teret suscité Grandissant en raison de sa facilité d'utilisation. Bien Que des Recherches Approfondies EFFECTUEES Dans fussent dernièrement CE Contexte, la Plupart de bureaux non Recherches un only nécessitent aux Accès préalable Données, Ce Qui RESTREINT si their this état Applicabilité Ne est pas vérifiée, Mais aussi des Réponses très renvoient Génériques. Cependant , Provide aux Personnalisées Utilisateurs des became Réponses Plus que jamais en raison de Nécessaire la de surabondance Données-qui-peut l'déranger Utilisateur. Le Défi de RETOURNER des Personnalisées et Réponses pertinentes Qui font les needs satisfaisant des Utilisateurs demeure. Par l'application de Inspiré l'de la technique réussie de les Dans filtrage collaboratif Systèmes de recommendation, nous proposons Une nouvelle sur les approach basée Mots-Clés pour provide aux Personnalisés Utilisateurs des Basés sur Résultats l'hypothèse Que l'information sur juin only le schéma de la Base de Données est disponible. - 352 -