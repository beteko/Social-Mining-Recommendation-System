nouvelle approche visuelle classification hiérarchique topologique hanane azzag mustapha lebbah université paris avenue baptiste clément 93430 villetaneuse france prénom paris13 résumé proposons article nouvelle méthode classifica hiérarchique topologique notre approche consiste construire nière organisée partition données représentées ensemble arbres répartis grille chaque cellule grille modéli arbre noeuds représentent données partition globale obtenue visualisée carte treemap laquelle chaque treemap représente arbre données évaluerons capacités performances notre approche données difficultés variables résultats numériques visuels seront présentés discutés introduction actuellement quantité informations stockées bases données crois sance rapide rajoute complexité structure données manipuler effet données uniquement composées attributs numériques symboliques peuvent enrichi exemple images vidéos textes sites information pertinente cachée ensembles données structurées tâche difficile méthodes classification visualisation techniques souvent utilisées analyse données structurées objectif principal papier lopper méthodes permettent experts domaine analyser manière intuitive ensembles données structurées souvent analyse intuitive données implique utilisation méthodes classification hiérarchique combinées techniques visualisation dubes handl littérature existe types méthodes classification hiérarchique divisives agglomeratives méthodes divisives celles partent ensemble individus procèdent divisions successives classes jusqu obtention partition revanche méthodes ascendantes partent singletons procèdent agrégations successives article proposons nouvelle approche classification hiérarchique permet construire forêts arbres manière organisée modèles cartes organisatrices organizing souvent utilisées visualisation classification topologique supervisé kohonen classification hiérarchique topologique tensions reformulations modèle décrites bishop fabrice rossi barbara hammer approches différentes autres partagent représenter grands ensembles données relation géométrique projetée carte topologique concerne aspect visuel notre approche pouvons trouver litté rature plusieurs algorithmes souvent visualisation structures hiérarchiques citer treemaps transforment manière récursive arbre série rectangles johnson shneiderman balzer deussen shneiderman treemap catégories données représentées rectangles imbriqués ensemble éléments organisé manière représenté totalement grand rectangle rectangles conçus taille proportionnelle nombre données formant chaque groupe évidemment autres manières représenter hiérarchie directement forme arbre cependant arbre engendré étant taille généralement conséquente visualisation déformée sortes loupes affichage hyperbolique carey déformation permet ensemble arbre visualisé espace représentation réservant grande partie chage petite partie arbre repoussant reste éléments afficher limites espace disponible également citer robertson utilisent comme représentation arbre conique tridimensionnel lequel associé chaque noeud parent sommet étant ensuite regroupés autour circulaire issue précisément racine arbre sommet descendants seront ensuite représentés intérieur hauteur ainsi suite manière récursive diminuant article introduisons nouvelle méthode appelée treemaps celle propose visualisation données forme carte treemaps fournit manière simultanée classification hiérarchique topologique chaque cellule carte représente arbre données treemap associé fournit globale organisation hiérarchique données forme arbres forêt arbres obtenue construite fonction règles autonomes basées principe proche voisinage processus topolo gique proposé inspiré modèle règles construction arbres inspirés méthode biomimétique fourmis artificielles azzag 2006b reste article organisé comme section présentons modèle treemaps section montrons résultats expérimentaux obtenus plusieurs bases données bases permettent illustrer utilisation treemaps comme algorithme classification hiérarchique topologique visuelle enfin présentons conclusion perspectives travaux futurs modèle classification hiérarchique topologique nouveau modèle présentons article fournit classification supervisée hiérarchique données laquelle chaque partition forêt arbres organisée carte utilise architecture grille modèle classique associé notion voisinage avons présenté première version simplifiée cette approche azzag lebbah notre modèle consiste rechercher classification automatique supervisée fournie organisation topologique hiérarchique azzag apprentissage individu modèle présente forme carte possédant ordre topologique cellules cellules réparties nœuds maillage chaque cellule racine arbre treec chaque noeud arbre représente donnée précisément notre modèle définit ensemble arbres répartis grille appelée prendre compte notion proximité entre arbres carte oblige définir relation voisinage topologique utilisée cartes topologiques classiques ainsi topologie carte définie graphe orienté distance entre cellules étant longueur chemin court sépare cellules associées arbres treec treer modéliser influence cellule cellule fonction proximité utilise fonction voisinage définie partir fonction noyau influence mutuelle entre arbres treec treer racine définie fonction représente taille voisinage température notons également chaque arbre associé point représentant donnée arbre treec treec choisir représentant permet adapter notre algorithme importe données suffit juste définir tableau similarité données qualité partition arbres associés définie fonction suivante treec affecte chaque donnée cellule unique carte minimisation fonction problème optimisation combinatoire proposons suite minimiser fonction manière version batch utilisant caractéristiques statistiques fournies arbres associés chaque cellule accélérer convergence algorithme trois étapes élémentaires minimisation fonction définies comme construction arbre après chaque affectation donnée cellule allons chercher trouver meilleure position arbre treec associé cette cellule utilisons règles accrochages connexions locales inspirées algorithme sification hiérarchique anttree azzag 2006a particularité arbres chaque noeud feuille noeud interne représente donnée notons noeud accrocher associé donnée nxpos noeud arbre noeud représente donnée connectée nxipos proche terme distance donnée notons également voisinage local arbre perçu noeud représentant ainsi autres nœuds données connectés nxpos chaque noeud représentant ainsi donnée connecté noeud nxpos position courante seulement cette action augmente valeur seuil distance tdist nxpos cette mesure définie valeur tance maximum observée voisinage local entre chaque couple données classification hiérarchique topologique connectées noeud courant nxpos tdist nxpos autres termes règles accrochages consiste comparer noeud noeud proche nœuds suffisamment entre tdist nxpos alors noeud connecté position courante nxpos contraire noeud associé donnée déplacé noeud proche conséquent valeur tdist diminue chaque accroché arbre effet chaque connexion donnée implique minimisation locale valeur tdist correspondant phase construction arbre chaque cellule carte associée arbre treec règles accrochage basées principe proche voisin chaque donnée connectée proche voisin formera suite arbre phase affectation groupe chaque donnée connectée arbre treec ensemble données formant ainsi relation hiérarchique utilisons suite fonction nœudfils fournie ensemble nœuds parent associé donnée itération initiale nœudfils notre phase affectation modifiée consiste trouver chaque donnée arbre gagnant utilisant fonction affectation cette cellule désignée comme gagnante proches voisins autres termes arbre complet racine affecté cellule gagnante manière récursive notons première itération données disposent fonction affectation définie comme suite nœudfils donnée représente arbre treec possible imaginer cette phase différentes manières affectations phase représentation minimiser rapport revient rechercher point minimise toutes distances locales minwc treec treec interprétation ordre topologique apparaisse explicitement trois étapes précédentes pérature représente taille voisinage évolue fonction différentes itérations pratique utilisons fonction voisinage suivante azzag ainsi décomposition fonction dépend permet mettre expression forme suivante treer treec cette fonction constituée termes conserver ordre topologique entre différents arbres minimisation premier terme permettre rapprocher arbres correspondant cellules voisines carte effet arbres treec treer voisins carte valeur alors petite valeur grande minimisation premier terme effet réduire davantage valeur fonction quant minimisation second terme correspond minimisation inertie observations noeuds accrochés arbre treec espace euclidien minimiser terme revient appliquer algorithme classification hiérarchique anttree azzag 2006a remarquons également différentes valeurs température chaque terme fonction importance relative minimisation grandes valeurs température premier terme prépondérant priorité conserver topologie valeur petite second terme considération fonction priorité déterminer représentant arbres compacts exécuter algorithme anttree algorithme treemap permet obtenir solution régularisée algorithme anttree régularisation étant obtenue grâce contrainte ordre arbres validation numérique visuelle avons testé comparé algorithme proposé plusieurs ensembles données générées gaussiennes uniformes autres bases extraites frank asuncion elles proposent plusieurs difficultés classification floue classes déséquili brées avant étudier résultats numériques présentons plusieurs visualisations carte obtenue treemaps associés caractéristiques importantes treemaps utilisent manière ficace espace affichage ainsi possible afficher grands arbres plusieurs niveaux hiérarchiques quantité minimale espace treemaps peuvent particulièrement utiles lorsqu dispose grandes classes affichage arbre niveau abstraction permet montrer naturellement informations encapsulées arborescence placer actuelle contexte classification hiérarchique topologique technique visualisation proposons chaque arbre cellule repré senté treemap cette initiative obtenir organisation automatique globale arbres carte figure montre exemple forêt comportant quatre struc tures arbres treemaps correspondants positionnement noeuds chaque arbre treemap processus récursif chaque noeud représenté rectangle différentes formes initialement noeuds enfants racine placés horizontalement affichage ensuite chaque noeud affiché placés vertica lement affichage processus ainsi répété alternant positionnement horizontal vertical jusqu noeuds soient affichés notons chaque tangle couleur différente suivant étiquette classe réelle facile comparaison visuelle pertinence groupes obtenus dessous discussion résultats visuels exemple forêt arbres treemaps correspondants treemaps figure chaque treemap représente organisation hiérarchique données arbre associé approche treemaps proposons plusieurs propriétés permettent classification simultanée topologique hiérarchique avons élaboré règles respectent propriétés suivantes chaque noeud représentatif arborescence observons figure données placées treec similaires noeuds enfants représentent récursivement arbres dissimilaire arbres frères arbres parent validation visuelle mieux analyser résultats visuels obtenus avons exécuté ensemble carte treemaps construire treemap unique figures représentent exemples treemaps dimension observant cartes générées chaque ensemble données consta notre algorithme fournit carte treemaps représente multi division azzag treemap principal organisation topologique hiérarchique données également visible treemaps visualiser cohérence entre organisation données arbre étiquetage points attribue couleur chaque étiquette chaque figure distin guons régions carte treemaps dédiées clusters mélangés figure observons diagonale allant cellule située droite image cellule située gauche dédiée seule classe couleur pouvons également treemap situé cellule droite image constitué données classes différentes observons treemap point jaune placé arbre résultat justifié présence données classe jaune voisinage mêmes remarques peuvent présentées bases tetra figure observons treemaps situé cellule droite image celui cellule gauche pouvons situer niveau clusters mélangent système visuel permet expert domaine naviguer facilement travers données avoir utiliser méthode projection cette façon espérons mesure parcourir grandes bases données permettre utilisateur interagir facilement données percevoir détails contexte forme arbre treemap treemaps dataset concerne résultats numériques parait objectif comparer notre modèle algorithme utilisant architecture similaire rappelons modèle treemaps fournit informations modèles traditionnels moyens autres travail comparons résultats obtenus modèle sique adoptons également mêmes paramètres taille carte voisinage initial voisinage final tableau présente résultats numériques obtenus treemaps utilisons critères mesurer pertinence partitionnement obtenu premier indice mesure pourcentage paires observations appartenant classification hiérarchique topologique treemap treemaps dataset treemap treemaps tetra dataset azzag cluster appartenant cluster saporta second indice critère davies bouldin utilisé déterminer nombre optimal centroïdes means indice proposé davies bouldin combine concept séparation cluster compacité cluster comme indiqué tableau pouvons méthode treemaps résultats similaires meilleurs obtenus majorité effet pouvons observer valeur indice inférieur celle indice élevé majorité notre objectif travers cette comparaison montrer treemaps obtient mêmes résultats comparable algorithmes classiques clustering contrairement méthode treemaps fournit macro micro données résultats comparatifs obtenus treemaps utilisant mêmes paramètres taille carte initialisation paramètre bases taille treemap anneaux cercle glass hepta target tetra twodiamonds chiffres manuscrits cette expérience concerne données composées chiffres manuscrits extraits partir collection cartes services hollandaisesfrank asuncion chaque caractère avons exemples obtenons ainsi total exemples chaque exemple imagette binaire pixel blanc dimension figure montre chiffres connectés premier niveau chaque arbre socié cellule remarquons ordre topologique apparaît clairement carte ordre topologique reste valide autres niveaux arbre figure montre treemap lequel pouvons clairement deuxième niveau certaines cellules carte constatons ordre topologique toujours maintenu analyse réalisée autres niveaux arbres foret classification hiérarchique topologique treemap niveau treemap niveau azzag conclusions perspectives article présentons nouvel algorithme dédié classification topologique hiérarchique propriétés suivantes fournit classification hiérarchique permet meilleure visualisation génère organisation arbres associés chaque cellule organisation globale hiérarchique présentée treemaps concerne résultats expérimentations réalisées prouvent efficacité treemaps traiter tâches classification visualisation comme perspectives beaucoup travail reste faire évident utilisation arbres permet accélérer processus apprentissage zhang permet traiter classer données volumineuses structurées phase affectation chaque accroche noeud noeuds voulons généraliser algorithme autres types structures seulement arbres mêmes principes semblent appliquer aussi graphes enfin nécessaire mettre accent aspect visuel notre approche effet comptons améliorer développement différents arbres treemaps permettre exploration interactive données références azzag guinot oliver venturini 2006b hierarchical based clustering algorithm three world applications dullaert sevaux springael european journal operational research special issue applications metaheuristics azzag guinot venturini 2006a mining hierarchical clustering azzag lebbah organisation topologique hiérarchique données yahia petit volume revue nouvelles nologies information cépaduès éditions balzer deussen voronoi treemaps infovis proceedings proceedings symposium information visualization washington computer society barbara hammer alexander hasenfuß median topographic biomedical bishop svensén williams generative topographic mapping neural comput carey kriwaczek rüger visualization interface document searching browsing proceedings workshop paradigms information visualization manipulation davies bouldin cluster separation measure transactions pattern recognition machine intelligence fabrice rossi optimizing organized modularity measure topographic graph clustering deterministic annealing approach neurocomputing classification hiérarchique topologique frank asuncion machine learning repository technical report versity california irvine school information computer sciences available archive handl knowles dorigo performance based clustering dubes algorithms clustering prentice advanced rence series murty flynn clustering review computing surveys johnson shneiderman space filling approach visualiza hierarchical information structures visualization diego kohonen organizing springer berlin robertson mackinlay trees animated visualizations hierarchical information proceedings sigchi conference human factors computing systems press saporta probabilités analyse données statistiques editions technip shneiderman visualization space filling approach transactions graphics zhang ramakrishnan livny birch efficient clustering large databases proceedings sigmod international conference management summary present paper clustering method which provides organization erarchical clustering method represents large datasets forest original trees which projected simple geometric relationship using treemap representation tained partition represented treemaps which define paper provide rules build using distance between order decide where connect nodes visual empirical results based synthetic datasets repository given discussed