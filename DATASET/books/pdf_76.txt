66 RNTI E33Application mobile pour l’évaluation d’un algorithme de calcul de distance entre des items musicaux Pierre René Lhérisson Fabrice Muhlenbach Pierre Maret Univ Lyon UJM Saint Etienne CNRS Laboratoire Hubert Curien UMR 5516 F 42023 Saint Etienne France {pr lherisson fabrice muhlenbach pierre maret} univ st etienne fr 1D Lab 5 rue Javelin Pagnon F 42000 Saint Etienne France pierrerene lherisson 1d lab eu Résumé Les systèmes de recommandation permettent de présenter à un utilisa teur des éléments susceptibles de l’intéresser La mise en place de tels systèmes dans les domaines culturels soulève souvent le questionnement de la place de la diversité de la nouveauté et surtout de la découverte Nous pensons que l’être humain bien qu’ayant ordinairement une tendance à se placer dans une zone de confort correspondant à ce qu’il connaît apprécie occasionnellement d’être poussé à des explorations le faisant sortir de sa routine Nous avons développé dans cette optique une méthode basée sur la dissimilarité qui élargit les centres d’intérêt des utilisateurs Nous avons réussi à délimiter une zone intermédiaire entre des items trop similaires et des items trop différents Afin de vali der cette hypothèse nous avons développé une application qui permet de tester et de valider cette méthode Dans cet article de démonstration nous expliquons le concept de zone intermédiaire nous détaillons le fonctionnement de l’ap plication puis nous présentons les résultats obtenus à partir des tests effectués 1 Problématique dans les systèmes de recommandation Les systèmes de recommandation de musiques qui se fondent sur la proximité entre les styles musicaux écoutés par les utilisateurs souffrent du problème suivant il n’est pas possible pour ces utilisateurs d’écouter d’autres styles musicaux et de découvrir une diversité stylis tique musicale susceptible de les intéresser McNee et al 2006 Cette recommandation peut être critiquée car elle a tendance à enfermer l’utilisateur dans une bulle de filtre de styles musicaux Pariser 2011 Une solution peut être proposée en injectant au hasard des nouveau tés mais cette méthode risque de désorienter l’utilisateur en lui proposant d’écouter des items qui pourraient ne pas l’intéresser du tout D’autres solutions triviales peuvent être proposées en relâchant légèrement la contrainte sur la distance stylistique entre les items La difficulté consiste alors à définir l’écart convenable la distance appropriée par rapport aux écoutes pas sées de l’utilisateur devant se trouver dans un intervalle avec des valeurs ne devant être ni trop proches – sous peine d’être trop similaires aux styles musicaux écoutés – ni trop lointaines – risquant d’être trop différents de l’intérêt de l’utilisateur Nos travaux portent ainsi sur le calcul des bornes de cet intervalle et notre démonstration consiste à présenter une application 461 Application mobile d’évaluation de calcul de distance entre des items musicaux d’évaluation par des êtres humains de la pertinence de cette approche à travers des évalua tions de similarité entre des musiques proposées en écoute à des utilisateurs nous cherchons à tester notre algorithme de calcul de distance entre des items musicaux ainsi que la justesse de la définition de différentes catégories obtenues à partir de bornes établies depuis cette distance Suivant des valeurs de distance que nous avons calculées nous proposons aux utilisateurs par rapport à un artiste musical de référence des items musicaux à des distances variées de celui ci des items considérés comme proches d’une catégorie intermédiaire ou dis tants L’application présentée ici a pour objectif d’évaluer la qualité de notre procédé Sur cette application mobile l’utilisateur écoute un item musical no1 dit item de référence puis il écoute deux autres items musicaux no2 et no3 et il indique à l’aide d’un curseur la proximité qu’il ressent pour chacun des deux avec l’item no1 de référence Précisons qu’il ne s’agit pas pour l’utilisateur d’indiquer sa préférence entre des items musicaux mais bien de juger d’une proximité stylistique ressentie L’exercice est répété avec le même item de référence et deux autres items musicaux L’application permet de collecter la position du curseur pour chacune des évaluations ainsi que les titres musicaux qui ont été écoutés lors de l’exercice Sachant que les items musicaux no2 3 4 et 5 ont été piochés au hasard dans les classes d’items musicaux issus des catégories considérées par notre algorithme de calcul comme étant proche intermédiaire ou distant vis à vis de l’item de référence l’exploitation des valeurs collectées nous permet de comparer ce procédé avec la perception de l’utilisateur Les positions indiquées par les utilisateurs au moyen du curseur sont enregistrées et ces valeurs nous permettent de tester l’hypothèse que les items des classes proche intermédiaire et distant sont bien perçus comme tels par l’utilisateur Nous souhaitons ainsi démontrer grâce à notre procédé que notre perception musicale basée sur les styles n’est pas que binaire et que nous sommes capables de sélectionner des items musicaux qui sont perçus au sens du style musical comme n’étant ni vraiment proches ni vraiment distants d’un item musical donné 2 Architecture de l’application L’application est composée d’un serveur et d’une application cliente mobile L’applica tion cliente permet à l’utilisateur d’écouter des items musicaux et de situer les 2 items can didats vis à vis de l’item de référence à l’aide d’un curseur qu’il positionne entre proche et différent cf Figure 1 Le serveur comporte des parties algorithmique et de stockage et d’échange de données cf Figure 2 Le serveur est relié au catalogue de musiques indé pendantes d’1D touch 1 à partir duquel sont extraits les exercices en initiant l’item musical par genre ou aléatoirement les distances entre les genres Diefenbach et al 2016 les artistes et les classes sont pré calculées Des APIs permettent au serveur de récupérer les résultats d’une recherche d’un utilisateur dans le catalogue mondial et des extraits sonores Niland 2 et Dee zer 3 Une API Blitzr 4 permet de récupérer des informations descriptives sur les artistes et albums sélectionnés par l’utilisateur à partir de sa recherche Ces informations sont transmises au module de calcul qui va les comparer à celles des artistes d’1D touch et déterminer via les 2 bornes les classes proche intermédiaire et distant 1 1dtouch com 2 s api niland io doc 3 s developers deezer com 4 s blitzr com 462 P R Lhérisson et al FIG 1 – Capture d’écran de l’application MODULE DE CALCUL CÔTÉ CLIENT SIMILARITÉ ENTRE ARTISTES SIMILARITÉ ENTRE GENRES API 1D TOUCH NILAND DEEZER AAPY BLITZR CÔTÉ SERVEUR APIS EXTERNES GET preview GET info externes Liste genres Liste info artistes GET reco_genres id GET reco_aléatoire POST exercices Exercice aléatoire Exercice genre GET liste info artistes Liste info externes Liste preview externes GET recherche externe GET reco recherche externe Exercice recherche externe FIG 2 – Schéma de l’architecture de l’application 3 Résultats L’application est disponible sur Android et iPhone sous le nom AAPY 5 Les premiers résultats opérés sur une dizaine de sujets expérimentaux permettant de récolter un minimum de 6 tests par sujet sont encourageants Ces calculs montrent que nos algorithmes identifient bien des items musicaux intermédiaires au plan de la similarité dissimilarité de style vis à vis d’un item musical donné Un autre enseignement de nos expérimentations porte sur l’accen tuation des contrastes Nous remarquons que les utilisateurs accentuent les dissimilarités en fonction des tests que nous leur proposons Dans leurs évaluations ils indiquent une plus forte distance à une musique de la classe intermédiaire quand elle doit être comparée en face d’une musique de la classe similaire situation indiquée intermédiaire similaire dans le Tableau 1 A contrario les utilisateurs indiquent une plus petite distance quand une musique 5 aapy eu 463 Application mobile d’évaluation de calcul de distance entre des items musicaux de la classe intermédiaire doit être comparée avec une musique de la classe différent intermédiaire différent moyenne écart type similaire 0 53 0 36 intermédiaire similaire 0 68 0 34 intermédiaire différent 0 54 0 35 différent 0 79 0 28 TAB 1 – Distances par rapport à l’item musical de référence unités arbitraires 4 Conclusion et perspectives Nous avons présenté AAPY une application qui permet de tester et valider une ap proche algorithmique ayant pour objectif de pousser un utilisateur à découvrir de nouveaux styles musicaux et ceci en allant explorer des musiques issues d’une zone intermédiaire entre des styles trop proches et des styles trop différents Dans le futur nous pensons à ajouter les caractéristiques issues de signal audio pour caractériser plus finement les morceaux musicaux Références Diefenbach D P R Lhérisson F Muhlenbach et P Maret 2016 Computing the semantic relatedness of music genre using semantic web data In Proc of the Posters and Demos Track of SEMANTiCS2016 Leipzig Germany September 12 15 2016 McNee S M J Riedl et J A Konstan 2006 Being accurate is not enough How accuracy metrics have hurt recommender systems In CHI ’06 Extended Abstracts on Human Factors in Computing Systems CHI EA ’06 New York NY USA pp 1097–1101 ACM Pariser E 2011 The Filter Bubble What The Internet Is Hiding From You Penguin Press Summary Recommender systems are used to predict what a user might like in the future In the cultural field using those systems raises the question of diversity novelty and discovery The human being is fond of stability but he is not against breaking his routine and explore things out of his comfort zone In this context we created a method based on dissimilarity measure between cultural items which expands the cultural knowledge of users We have been able to delimit an intermediate zone between “too similar” and “too different” We have developed an application which allows us to test andvalidate this method We explain the concept of “intermediate zone” wepresent the mobile application its functionalities and some tests we carried out 464 