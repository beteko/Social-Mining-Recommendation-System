Vers le développement minier à base de contrainte générique et efficace, une approche de programmation par contraintes Tias Guns * * KU Leuven, Celestijnenlaan 200A, Louvain, Belgique tias.guns@cs.kuleuven.be http://people.cs.kuleuven.be/ tias.guns / 1 Présentation les champs de l'exploration de données et la programmation par contraintes sont parmi les sous-domaines les plus réussis de l'intelligence artificielle. Pourtant, leurs méthodes sont très différentes. Constraint pro- grammation préconise une approche de modélisation et de résolution déclarative de satisfaction de contraintes et problèmes d'optimisation. L'exploration de données d'autre part a mis l'accent sur le traitement des grands ensembles de données complexes qui se posent dans des applications particulières. l'extraction de motifs vise plus particulièrement à extraire des modèles intéressants d'un ensemble de données, où interestingness est souvent définie par l'applica- tion à portée de main. méthodes ad hoc actuelles se concentrent souvent sur des algorithmes à usage spécial à des problèmes spécifiques et des critères Interestingness. Ce code donne généralement complexe qui est très efficace, mais difficile à modifier ou réutiliser dans d'autres applications. Par conséquent, moins d'attention a été consacrée à la question des stratégies de solutions générales et génériques. Néanmoins, il est nécessaire de techniques génériques qui peuvent gérer des variations de tâches connues, ainsi que les contraintes par les applications (Dzeroski et al, 2010;. De Raedt et al., 2011). La nature typique itérative du cycle des connaissances découverte (Han et Kamber, 2000), dans lequel sont définies itérativement les données et la définition des problèmes basés sur le prototypage et les petites évaluations à grande échelle. Dans ce cas, la spécification du problème change généralement entre les itérations, ce qui peut à son tour nécessiter la modification des algorithmes. Cela est reconnu dans le domaine de l'exploitation minière à base de contraintes, qui adopte la dologie métho- de formuler un problème en termes de contraintes (Nijssen, 2010; Boulicaut et Jeudy, 2005). Par exemple, pour itemset l'exploitation minière, une grande variété d'autres traints Cons- et une gamme d'algorithmes pour la résolution de ces problèmes à base de contraintes d'exploitation itemset (Mannila et Toivonen, 1997 (Agrawal et al., 1993). Jr. et al, 2000, Pei et Han, 2000, Pei et al, 2001;. Bucila et al., 2003; Han et al, 2007;. Soulet et Crémilleux, 2005; bonchi et Lucchese, 2007) a permis l'application de itemset minière à de nombreux d'autres problèmes, allant de l'exploration du Web à la bio-informatique (Han et al., 2007). cadres génériques dans la littéra- minière de contrainte-ture portaient essentiellement sur l'monotonicité (anti-) des contraintes (Mannila et Toivonen, 1997, Pei et Han, 2000;. Bucila et al, 2003) conduisant à des systèmes tels que (CONQUÊTE bonchi et Lucchese, 2007), MusicDFS (Soulet et Crémilleux, 2005) et Molfea (De Raedt et Kramer, 2001). Alors que de nombreuses tâches d'exploration de données typiques consistent en (anti) contraintes monotones, de nombreuses autres contraintes ne rentrent pas dans ce cadre, comme la recherche de motifs fermés dans les données denses (Pasquier et al, 1999; -. 13 - Vers par contraintes génériques et efficace minière Pei et al, 2000), ou l'extraction de modèles corrélés dans les données surveillées (Morishita et Sese, 2000; Cheng et al., 2007).. Les cadres qui sont plus génériques que (anti-) et dans lequel monotonicity combinaisons arbitraires de contraintes sont autorisées ont été portées disparues. 2 La programmation par contraintes et itemset minière Le cadre de CP4IM (De Raedt et al, 2008;.. Armes à feu et al, 2011a) a été le premier à proposer un cadre à base de CP générique pour l'exploitation minière itemset fondé sur la contrainte. Le cadre a passé englober itemset fréquentes et contraintes allant des contraintes monotones typiques (anti) tels que la taille et le coût du modèle, ainsi que les contraintes de représentation condensés tels que fermée et maximale. Depuis lors, de nombreux travaux ont étendu cette approche, y compris: - L'utilisation de différentes techniques de résolution déclarative. D'autres techniques explorées comprennent la compilation des connaissances et BDD, Set de réponse Programmation (Järvisalo, 2011) et la résolution de SAT (Cambazard et al., 2010) (Jabbour et al, 2015;.. Coquery et al, 2012); - l'exploitation minière de jeu de modèle, également kn propre comme modèles de n-aire. Ici, le but est de ne pas trouver tous les modèles indivi- double, mais plutôt de trouver un ensemble concis des motifs de n (armes à feu et al, 2011b;. Khiari et al., 2010); - Optimisation et exploitation minière top-k. Ici aussi le but est de ne pas énumérer tous les satisfaire sternes PAT- mais plutôt de trouver le modèle optimal, par exemple selon une mesure de corrélation ou la discrimination (Nijssen et al., 2009), ou pour trouver le top-k modèles les plus optimaux (Jabbour et al., 2013). - l'optimisation multi-objectifs, également connu sous le nom skypatterns minières. Dans ce cas, plusieurs mesures sont données et les solutions optimales sont Pareto recherchées (Kemmar et al, 2014;.. Rojas et al, 2014). Une généralisation de plusieurs objectifs aux relations de dominance englobe également des représentations condensées telles que motif fermé / maximal des mines et trouver des sous-groupes pertinents (Negrevergne et al., 2013). Fait intéressant, la plupart de ces approches utilisent solveurs non modifiés et sont encore en mesure d'obtenir une efficacité raisonnable, en particulier dans le cas où de nombreuses contraintes sont présentes (armes à feu et al., 2011a). La clé contrainte de bas niveau que ces formulations utilisent est une contrainte de somme pondérée réifiée sur des variables booléennes, où les moyens réifiées que la valeur de vérité de la contrainte se traduit par une variable d'indicateur booléen. A noter à cet égard est que l'on peut mettre en œuvre un résolveur de CP sur des variables booléennes en utilisant les structures de données utilisées dans les algorithmes extraction jeu d'éléments, et de réaliser la même extensibilité que l'extraction du jeu d'éléments en profondeur d'abord, tout en ayant le même caractère général que d'autres CP solveurs ont pour itemset l'exploitation minière (Nijssen, 2010 ET armes à feu). 3 La programmation par contraintes et la séquence minière Un motif séquentiel est une liste ordonnée d'événements. Cela diffère de commande séquentielle de l'interprétation traditionnelle (non ordonnée) d'un modèle. Itemset De plus, le même événement peut se reproduire plusieurs fois dans un modèle séquentiel. Une propriété essentielle de toute méthode d'extraction de motif est la capacité à calculer la fréquence d'un motif; elle consiste à vérifier pour chaque entrée dans la base de données si le modèle se produit dans cette entrée (par exemple, une entrée est souvent appelé une transaction pour jeux d'éléments, ce qui correspond à la vérification. - 14 - T. Guns ce que le motif est un sous-ensemble de la transaction, et pour les séquences qu'il est une suite de la transaction Works que l'utilisation des programmes de contraintes pour l'exploitation minière à base de contrainte peut être divisée en deux camps, en fonction de la représentation d'une séquence: -.. les séquences avec des caractères génériques explicites exemple An est <a, * , B> où * est le joker. Cela correspondra une transaction qui contient ana, suivi d'un seul événement arbitraire, suivie immédiatement par B. événement Il ne correspondrait pas à une transaction telle que <a, C, C, B>, mais il correspondrait avec <C, a, C, B>. Ce problème peut être formulé d'une manière qui est très similaire à l'extraction de motifs fréquents (Coquery et al., 2012) et, par conséquent un grand nombre des mêmes contraintes et variations peuvent être exprimé, y compris fréquents, fermé et maxi mal (Coquery et al., 2012) et le haut-k et les sous-groupes pertinents (Kemmar et al., 2014). - Les séquences avec des jokers implicites. Ceci est le motif de séquence plus traditionnelle consi- Dered, où un motif <A, B> est une sous-séquence de l'ensemble de <C, A, B>, <A, C, C, B> et <A, C,. . . , C, B> comme il y a des jokers implicites entre tous les symboles. Cela est beaucoup plus difficile à exprimer dans une résolution de contraintes (et al Métivier., 2013) comme dans le cas général, tester la relation pour une transaction séquence individuelle nécessite la recherche sur tous les appariements possibles, ce qui est exponentielle pire cas. Deux façons de surmonter ce sont tout d'abord, d'ajouter une contrainte globale qui fait cela de manière transparente pour le solveur de CP, et le second pour décomposer la contrainte de séquence et de la traiter pour chaque transaction comme un sous-problème indépendant qui exige la recherche (Negrevergne ET Armes à feu, 2015). La première approche est plus efficace que la même technique de projection préfixe utilisé dans PrefixSpan (Han et al., 2001) peuvent être utilisés, y compris la taille des extensions peu fréquentes. Mieux encore sc alability peut être obtenue en ayant une contrainte globale qui fait cela pour toutes les transactions à la fois, au lieu d'avoir une contrainte pour chaque tran- saction (Kemmar et al., 2015). Le travail sur les séquences nous montre que itemsets sont tout à fait exceptionnel que toutes les contraintes, y compris les représentations condensées, peuvent être exprimées à l'aide des contraintes standard disponibles dans CP. Seulement top-k, les relations d'optimisation et de dominance multi-objectifs exigent des changements à la procédure de résolution. D'autre part, pour modéliser la séquence tout en obtenant des performances de résolution raisonnable contraintes ou la recherche spécialisée procédures doivent être écrites. En outre, ding le contrôle de hi-séquence dans une contrainte globale est la plus efficace, mais ne permet pas de changer la relation de séquence, par exemple faire respecter un écart maximal entre les éléments qui correspond, sans modifier le code d'application de la contrainte. Il y a donc encore de la place pour les techniques Neric vraiment gé- pour l'extraction de la séquence, ainsi que pour d'autres tâches d'extraction de motifs structurés tels que l'exploitation minière de graphique. Voir (armes à feu et al., 2016) pour une discussion plus détaillée des défis et des solutions possibles. 4 Une langue pour l'exploitation minière de modèle générique? Le développement des langues génériques pour le modèle minier est une quête de longue date (bonchi et Luc- chese 2007, Soulet et Crémilleux, 2005. Blockeel et al, 2012;. Métivier et al, 2012;. Armes à feu et al, 2013). De nombreux efforts ont leurs racines dans l'idée de bases de données inductives (Mannila, 1997); ce sont des bases de données dans lesquelles les données et les modèles sont des citoyens de première classe et peuvent être interrogés. (. Meo et al, 1996; Imielinski et Virmani, 1999) La plupart des langages de requêtes inductives, par exemple, étendre - 15 - Vers le développement minier à base de contrainte générique et efficace SQL avec des primitives pour extraction de motifs. Ils ont seulement une langue restreinte pour exprimer les problèmes miniers, et sont généralement liés à un algorithme d'exploration. Un déve- loppement plus avancé est celui des vues minières (Blockeel et al., 2012), qui donne accès à des modèles paresseux à travers une table virtuelle. SQL standard peut être utilisé pour effectuer des requêtes, et la mise en œuvre ne se concrétisera ces modèles dans la table qui sont pertinentes pour la requête. Ceci est réalisé en utilisant un algorithme d'exploitation traditionnel. Des travaux plus récents ont étudié les langages de haut niveau qui ont une traduc- tion directe dans une spécification déclarative du problème (armes à feu et al, 2013;.. Métivier et al, 2012). (. Frisch et al, 2008;;. Nethercote et al, 2007; Van Hentenryck et Michel, 2005 Van Hentenryck, 1999) En même temps, de nombreux langages de modélisation de niveau élevé existent dans la contrainte de programmation ture littéra-. Le système MiningZinc (armes à feu et al., 2013) unifie les deux approches en adoptant le langage de programmation de contrainte Mi- niZinc (Nethercote et al., 2007), tout en offrant en même temps des abstractions supplémentaires qui se produisent souvent dans les problèmes d'extraction de motifs. La langue est indépendante de toute technologie de résolution qui donne au système MiningZinc la capacité de ve- rify si un algorithme existant existe qui correspond à la formulation du problème, ou si un solveur de contrainte générique doit être utilisée. Dans le premier cas, un algorithme spécialisé très efficace et évolutive peut être utilisée. De plus, en utilisant les règles de réécriture, le système peut détecter qu'un spécialiste peut être utilisé pour résoudre une partie du problème, et que les contraintes restantes peuvent être traitées après. Le résultat est une hybredisation de techniques de résolution, tout ce qui se cache derrière un langage générique de haut niveau. 5 Conclusions Dans cet exposé et document d'accompagnement, je mis en évidence les progrès récents ont à combler le fossé méthodologique entre les domaines de l'exploration de données et la programmation par contraintes. Le but sur endoloris est de faire l'exploration de données approches plus souples et déclarative, afin de le rendre facile de changer le modèle sans travaux de remise en marche sur le solveur. En effet, la plupart des approches sont référencées plus génériques que les systèmes existants. D'autre part, il y a souvent un compromis entre la généralité et effic iency et mettre au point des méthodes qui sont à la fois générique et évolutive est le premier défi. De nombreux succès récents ont d'une certaine manière hybridée données structures ou des algorithmes à partir de méthodes spécialisées dans solveurs de contraintes génériques. Ceci est une approche très prometteuse qui apporte l'exploration de données et les champs de programmation par contraintes plus non seulement au niveau de l'application, mais aussi au niveau algorithmique. Remerciements Je voudrais remercier Luc De Raedt et Siegfried Nijssen pour les nombreuses et fructueuses des collaborations, des discussions et collègues Anton Dries, Benjamin Negrevergne et Behrouz Ba- Baki qui ont contribué à façonner et à développer ces idées. Ce travail est le résultat de nombreux documents intéressants et des discussions avec d'autres chercheurs lors d'ateliers et de conférences. - 16 - T. Guns Biographie Tias Guns est un camarade post-doctoral au laboratoire DTAI de la KU Leuven. Ses recherches se trouve à la frontière entre l'exploration de données et la programmation par contraintes, et son principal intérêt réside dans les méthodes de Bining com- des deux champs. Dans le cadre de son doctorat, il a mis au point le cadre de CP4IM qui a montré pour la première fois la possibilité d'utiliser la programmation par contraintes pour ning de modèle. Sa thèse a reçu à la fois le prix de thèse de programmation de contrainte et le prix de thèse de l'intelligence artificielle ECCAI. Il est un membre actif de la communauté et a organisé un certain nombre d'ateliers et d'un numéro spécial sur le thème de combiner la programmation par contraintes avec l'apprentissage de la machine et l'exploration de données. Agrawal Références, R., T. Imielinski, A. et N. Swami (1993). Exploitation minière règles d'association entre ensembles d'éléments dans les grandes bases de données. Dans Actes de la SIGMOD rence internationale Confé- sur la gestion des données 1993, pp. 207-216. ACM Press. Blockeel, H., T. Calders, É. Fromont, B. Goethals, A. Prado, et C. Robardet (2012). Un système de base de données basée sur in- productive vues minières virtuelles. Données Min. Knowl. Décou. 24 (1), 247-287. Bonchi, F. et C. Lucchese (2007). L'extension de l'état de l'art de la découverte de modèle basé sur des contraintes. Les données Knowl. Eng. 60 (2), 377-399. Anglais Boulicaut, J.-F. et B. Jeudy (2005). l'exploration de données à base de contraintes. Dans O. Maimon et L. Rokach (Eds.), Data Mining et connaissances Manuel Découverte, pp. 399-416. Springer US. Bucila, C., J. Gehrke, D. Kifer, et W. M. White (2003). Dualminer: Un algorithme double pour la taille itemsets avec des contraintes. Données Min. Knowl. Décou. 7 (3), 241-272. Cambazard, H., T. Hadzic, et B. O'Sullivan (2010). compilation des connaissances pour ning itemset mi-. Au 19ème Conférence européenne sur l'intelligence artificielle, volume 215 des frontières dans l'intelligence artificielle et applications, p. 1109-1110. IOS Press. Cheng, H., X. Yan, J. Han, et C.-W. Hsu (2007). analyse de modèles fréquents discriminante pour la classification efficace. Dans Actes de la 23e Conférence internationale sur l'ingénierie des données, p. 716-725. IEEE. Coquery, E., S. Jabbour, L. Saïs, et Y. Salhi (2012). approche basée sat-A pour découvrir les modèles fréquents, fermés et maximale dans une séquence. En ECAI 2012 - 20 rence européenne Confé- sur l'intelligence artificielle. Y compris les applications prestigieux de l'intelligence artificielle (PAIS-2012) Démonstrations système piste, Montpellier, France, 27-31 Août 2012, pp. 258-263. De Raedt, L., T. Armes à feu, et S. Nijssen (2008). La programmation par contraintes pour l'exploitation minière itemset. Dans Actes de la 14e SIGKDD Conférence internationale sur la découverte de connaissances et d'exploration de données (KDD-08), pp. 204-212. ACM. De Raedt, L. et S. Kramer (2001). L'algorithme de l'espace version et son par niveaux à la recherche applica- tion de fragments moléculaires. Dans Actes de la dix-septième Conférence internationale conjointe sur l'intelligence artificielle, pp. 853-862. Morgan Kaufmann. - 17 - Vers le développement minier à base de contrainte générique et efficace De Raedt, L., S. Nijssen, B. O'Sullivan, et P. Van Hentenryck (2011). La programmation par contraintes rencontre l'apprentissage automatique et l'exploration de données (Dagstuhl séminaire 11201). Rapports Dagstuhl 1 (5), 61-83. Dzeroski, S., B. Goethals, et P. Panov (2010). Bases de données inductive et Data Mining Constraint Based (1re éd.). Springer-Verlag New York, Inc. Frisch, A., W. Harvey, C. Jefferson, B. M. Hernández, et I. Miguel (2008). Essence: Une langue contrainte pour spécifier des problèmes combinatoires. Contraintes 13 (3), 268-306. Armes à feu, T., Dries A., G. Tack, S. Nijssen, et L. De Raedt (2013). MiningZinc: Un langage de modélisation pour l'exploitation minière à base de contraintes. Dans Actes de la Conférence mixte internationale Vingt-troisième sur l'intelligence artificielle, Conférence internationale conjointe sur l'intelligence artificielle, Beijing, Chine 3-9 Août 2013, p. 1365-1372. AAAI Press. Armes à feu, T., S. Nijssen, et L. De Raedt (2011a). Itemset minière: Une perspective de programmation par contraintes. Artif. Intell. 175 (13/12), 1951-1983. Armes à feu, T., S. Nijssen, et L. De Raedt (2011b). ensemble k-modèle minier sous contraintes. IEEE Transactions sur les connaissances et l'ingénierie des données à apparaître. Aussi comme rapport technique CW596, oct 2010. Guns, T., S. Nijssen, et L. De Raedt (2013). k-directivité ensemble minier sous contraintes. IEEE Transactions sur les connaissances et l'ingénierie des données 25 (2), 402-418. Guns, T., S. Paramonov, et B. Negrevergne (2016). Sur la modélisation déclarative de l'exploitation minière de modèle structuré. Dans AAAI Atelier sur la base déclarative apprentissage Programmation, Phoenix, Arizona USA, 12-13 Février 2016. acceptées. Han, J., H. Cheng, D. Xin, et Yan X. (2007). l'exploitation minière fréquente modèle: les directions d'état actuels et futurs. Données Min. Knowl. Décou. 15 (1), 55-86. Han, J. et M. Kamber (2000). Data Mining: Concepts et techniques. Morgan Kaufmann. Han, J., J. Pei, B. Mortazavi-Asl, H. Pinto, Q. Chen, U. Dayal, et M. Hsu (2001). Prefixspan: extraction de motifs séquentiels efficacement par la croissance du modèle préfixe projeté. ICDE'2001, Avril, 215-24. Imielinski, T. et A. Virmani (1999). MSQL: Un langage de requête pour l'extraction de la base de données. Data Mining et Knowledge Discovery 3, 373-408. Jabbour, S., L. Saïs, et Y. Salhi (2013). Le haut-k fréquentes minière itemset fermé en utilisant problème SAT haut k. Dans Apprentissage et découverte des connaissances dans les bases de données - Conférence européenne, ECML PKDD 2013, Prague, République tchèque, 23-27 Septembre 2013, ding Procee-, Partie III, pp 403-418.. Jabbour, S., L. Saïs, et Y. Salhi (2015). Décomposition encodages base SAT pour les problèmes miniers. Itemset En avancées de la recherche du savoir et Data Mining - Conférence 19 Asie-Pacifique, PAKDD 2015, Ho Chi Minh-Ville, Vietnam, mai 19 à 22 2015, Compte rendu, Partie II, pp 662-674.. Järvisalo, M. (2011). Itemset l'exploitation minière comme une application de défi pour tion ensemble de réponses énumérative. Dans la programmation logique et non monotone Raisonnement - 11e Conférence internationale, LPNMR 2011, Vancouver, Canada, 16-19 mai 2011. Compte rendu, pp 304-310.. Jr., R. J. B., R. Agrawal, et D. Gunopulos (2000). l'extraction de règles à base de contraintes dans les grandes bases de données denses. Données Min. Knowl. Décou. 4 (2/3), 217-240. - 18 - T. Guns Kemmar, A., S. Loudni, Y. Lebbah, P. Boizumault, et T. Charnois (2015). PROJECTION contrainte globale par préfixe pour l'exploitation minière de modèle séquentiel. Dans Principes et pratique de la programmation par contraintes - 21e Conférence internationale, CP 2015, Cork, Irlande 31 Août - 4 Septembre, 2015, Proceedings, pp 226-243.. Kemmar, A., W. Ugarte, S. Loudni, T. Charnois, Y. Lebbah, P. Boizumault, et B. Crémilleux (2014). Exploitation minière modèles de séquence pertinents avec le cadre en fonction cp. Dans la Conférence nationale 26 IEEE Inter sur les outils d'intelligence artificielle, ICTAI 2014, Limassol, Chypre, 10-12 Novembre, 2014, p. 552-559. Khiari, M., P. Boizumault, et B. Crémilleux (2010). La programmation par contraintes pour l'exploitation des modèles n-aire. Dans Principes et pratique de la programmation par contraintes, volume 6308 de Lecture Notes in Computer Science, pp. 552-567. Springer. Mannila, H. (1997). bases de données inductives et représentations condensées pour l'exploration de données. En ILPS, pp. 21-30. Mannila, H. et H. Toivonen (1997). recherche et frontières par niveaux de théories dans la découverte de connaissances. Données Min. Knowl. Décou. 1 (3), 241-258. Meo, R., G. Psaila, et S. CERI (1 996). Un nouvel opérateur comme SQL pour l'extraction des règles d'association. En VLDB, pp. 122-133. Métivier, J., P. Boizumault, B. Crémilleux, M. Khiari, et S. Loudni (2012). Une contrainte lan- jauge pour la découverte de modèle déclaratif. Dans Actes du Symposium ACM sur Applied Computing, SAC 2012, Riva, Trento, Italie, 26-30 Mars, 2012, pp. 119-125. Métivier, J.-P., S. Loudni, et T. Charnois (2013). Une approche de programmation par contraintes pour l'extraction de motifs séquentiels dans une base de données de séquence. Dans ECML / PKDD 2013 Atelier sur les langues pour les mines et l'apprentissage automatique des données. également disponible en arXiv: 1311,6907. Morishita, S. et J. Sese (2000). Treillis avec itemset traversant la taille métrique statistique. Dans Actes du XIXe SIGMOD-SIGACT-SIGART Symposium sur les principes de base de données des systèmes, p. 226-236. ACM. Negrevergne, B., A. Dries, T. Guns, et S. Nijssen (2013). programmation Dominance pour l'exploitation minière de jeu item-. 13e IEEE Conférence internationale sur l'exploration de données, IEEE Conférence internationale sur l'exploration de données, Dallas, Texas, USA, 7-10 Décembre 2013, p. 557-566. IEEE Computer Society. Negrevergne, B. et T. Guns (2015). séquence basée sur les contraintes minières en utilisant la contrainte pro- grammation. Dans l'intégration de l'IA et OR Techniques en programmation par contraintes, Barcelone, Espagne, 18-22 mai 2015. Springer International Publishing. Accepté. Nethercote, N., P. J. Stuckey, R. Becket, S. Marque, Canard J. G., et G. Tack (2007). MiniZinc: Vers un langage standard de modélisation CP. En CP, Volume 4741 de LNCS, pp. 529-543. Springer. Anglais Nijssen, S. (2010). l'exploitation minière à base de contraintes. Dans C. Sammut et Webb G. (éd.), Encyclopedia of Machine Learning, pp. 221-225. Springer US. Nijssen, S. et T. Guns (2010). L'intégration de la programmation par contraintes et l'exploitation minière itemset. Dans Apprentissage et découverte des connaissances dans les bases de données, Conférence européenne (ECML / PKDD-10), volume 6322 de Lecture Notes in Computer Science, pp. 467-482. - 19 - Vers le développement minier à base de contrainte générique et efficace Springer. Nijssen, S., T. Armes à feu, et L. De Raedt (2009). Corrélé minière itemset dans l'espace ROC: Une approche de programmation par contraintes. En KDD, pp. 647-656. ACM. Pasquier, N., Y. Bastide, R. Taouil, et L. Lakhal (1999). Découverte de itemsets fermés fréquents pour les règles d'association. Dans la théorie de base de données, volume 1540 de Lecture Notes in Computer Science, pp. 398-416. Springer. Pei, J. et J. Han (2000). Peut-on pousser plus de contraintes dans les mines de fréquentes modèle? Dans Actes de la sixième conférence internationale SIGKDD sur la découverte des connaissances et l'exploration de données, p. 350-354. ACM. Pei, J., J. Han, et L. V. S. Lakshmanan (2001). Exploitation minière ensembles d'objets fréquents avec des contraintes convertibles. Dans Actes de la Conférence internationale IEEE sur l'ingénierie des données, p. 433-442. IEEE. Pei, J., J. Han, R. et Mao (2000). Closet: Un algorithme efficace pour l'exploitation minière itemsets fermés fréquents. Dans SIGMOD Atelier sur les questions de recherche dans l'exploration de données et de découverte du savoir, pp. 21-30. ACM. Rojas, W. U., P. Boizumault, S. Loudni, B. Crémilleux, et A. Lepailleur (2014). Mines (Soft-) skypatterns utilisant CSP dynamique. Dans l'intégration de l'IA et OR techniques en programmation par contraintes -. 11e Conférence internationale, CPAIOR 2014, Cork, Irlande, 19-23 mai 2014. Proceedings, pp 71-87. Soulet, A. et B. Crémilleux (2005). Un cadre efficace pour l'exploitation des contraintes flexibles. Progrès de la connaissance Découverte et exploration de données, volume 3518 de Lecture Notes in Computer Science, pp. 43-64. Springer. Van Hentenryck, P. (1999). Le langage de programmation d'optimisation de l'OPL. MIT Press. Van Hentenryck, P. et L. Michel (2005). Constraint-Based Local Search. MIT Press. Résumé Dans le monde des données riches d'aujourd'hui, les techniques d'extraction de motifs nous permettent d'extraire des connaissances à partir de données. Cependant, ces connaissances peuvent prendre plusieurs formes et dépend souvent de l'application à portée de main. Cela exige des techniques génériques qui peuvent être utilisés dans une large gamme de paramètres. Ces dernières années, la programmation par contraintes a été démontré que d'offrir une méthodologie générique fi ts de nombreux paramètres de l'extraction de motifs, y compris les nouvelles. solveurs de programmation de contraintes existantes n'échelle pas très bien cependant. Dans cet exposé, je vais passer en revue les différentes façons dont cette limitation a été surmontée. Souvent, cela est grâce à l'intégration des principes des techniques et des structures de données de l'extraction de motif dans les solveurs de contraintes. - 20 -