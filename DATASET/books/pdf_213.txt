 Transmute un outil interactif pour assister l’extraction de connaissances à partir de traces Pierre Loup Barazzutti Amélie Cordier Béatrice Fuchs LIRIS CNRS UMR 5205 Université Lyon 1 LIRIS CNRS UMR 5205 Université Lyon 3 prenom nom liris cnrs fr Résumé Alors que l’extraction de connaissances à partir de données ecd est un processus qualifié d’interactif et d’itératif l’interactivité des outils est souvent limitée et son étude est relativement récente Elle est pourtant déterminante lors de l’interprétation pour choisir les motifs qui deviendront des connaissances Nous proposons Transmute un outil d’assistance à l’interprétation dans le processus d’ecd dans le cadre de la recherche d’épisodes séquentiels à partir de traces La phase d’inter prétation est itérative et à chaque itération les résultats de la fouille sont mis à jour dynamiquement en fonction des interactions avec l’analyste Des outils de visualisation et des mesures de qualité indépendantes du domaine permettent de caractériser l’intérêt des motifs à interpréter pour faciliter leur choix et accompagner le travail de l’analyste afin de l’aider à se focaliser plus rapidement sur les motifs potentiellement intéressants 1 Introduction L’extraction de connaissances à partir de données ecd vise à analyser des don nées dans un processus itératif et interactif composé de plusieurs étapes Durant ce processus de nombreuses interactions ont lieu avec un utilisateur humain expert du domaine ou analyste qui y joue un rôle moteur Pour aider l’analyste dans sa tâche de nombreux outils permettent toutes sortes de visualisations réalistes des résultats mais leurs capacités d’interaction restent le plus souvent limitées à des manipulations graphiques Nous avons développé dans Transmute des fonctionnalités illustrant l’in teractivité dans le processus d’ecd en vue d’apporter une assistance à toutes les étapes Nous nous focalisons dans cet article sur l’étape d’interprétation en proposant un scé nario dans lequel l’analyste peut observer dynamiquement l’effet de ses actions et de ses choix au fur et à mesure de l’avancement de son travail Dans la suite de l’article nous rappelons d’abord le cadre d’application de ce travail Puis nous présentons le processus d’ecd et la démarche d’interprétation mis en place puis leur mise en œuvre dans Transmute Pour finir nous concluons sur l’état actuel du développement et les perspectives Ce travail a été réalisé dans le cadre du projet OFS Open Food System programme investisse ments d’avenir 463 Transmute 2 Traces et système à base de traces Nous nous plaçons dans le cadre de l’étude des traces bien que les concepts présen tés ici puissent s’appliquer à n’importe quelles données temporellement située comme par exemple la description d’une partition musicale qui est utilisé comme application jouet dans la démonstration Une trace est constituée d’une séquence d’éléments ob servés temporellement situés appelés des obsels Elle est associée à un modèle de trace décrivant les types d’obsels leurs attributs et leurs relations avec d’autres types d’ob sels Le modèle de trace permet d’interpréter les informations de la trace pour faciliter son exploitation ultérieure Les traces sont manipulées par un ensemble d’opérations élémentaires appelées transformations qui sont de différents types filtrage d’obsels fusion de traces etc Parmi ces transformations la réécriture crée une nouvelle trace appelée trace transformée qui vise à augmenter progressivement le niveau de compré hension et d’abstraction de la trace initiale La réécriture consiste à construire une nouvelle trace t2 à partir d’une trace primaire t1 en remplaçant dans t2 des motifs c’est à dire des séquences d’obsels de t1 par de nouveaux types d’obsels résumant chaque motif Un système à base de traces modélisées est un système permettant de collecter de traiter et de visualiser des traces Le framework kTBS kernel for Trace Based System 1 Champin et al 2013 réifie cette notion de système à base de traces de façon générique La réécriture de traces se situe au cœur du dispositif mis en place dans Transmute 3 Extraction de connaissances à partir de traces Les traces sont étudiées dans le cadre d’un processus d’ecd mis en oeuvre dans DisKit 2 dans un cycle composé des étapes principales 1 prétraitement sélection de trace transformation 2 fouille et 3 post traitement visualisation interprétation L’étape de fouille de DisKit utilise dmt4sp 3 un prototype d’extraction de motifs et de règles à partir d’une ou plusieurs séquences d’événements conformément à la sémantique d’occurrence minimale définie dans Mannila et al 1997 Durant le post traitement les résultats de la fouille sont présentés à l’analyste qui doit choisir les motifs qu’il estime les plus pertinents compte tenu de ses connaissances du domaine La fouille produit très souvent un nombre important de motifs caractérisés par une forte redondance combinatoire Il n’est pas facile pour l’analyste de s’y retrouver et faire un choix pertinent Nous proposons une démarche itérative et interactive pour l’aider à appréhender méthodiquement cette étape fig 1 La liste des motifs est com plétée par des indicateurs d’intérêt permettant à l’analyste de les trier et ainsi mettre en avant les motifs potentiellement les plus intéressants Actuellement ces indicateurs sont la fréquence la longueur et la couverture permettant de caractériser le nombre d’obsels distincts couverts par le motif Lors de la sélection d’un motif l’analyste peut voir l’impact de son choix à la fois sur la trace et sur la liste des motifs Sur la trace 1 tbs platform org tbs doku php 2 DIScovering Knowledge from Interaction Traces 3 Data Mining Techniques For Sequence Processing liris cnrs fr ~crigotti dmt4sp html 464 Barazzutti et al Fermeture des motifs et contraintes Motifs issus de la fouille Visualisation et choix Révision Réécriture Motifs rejetés Motifs � restants Motifs rejetésMotifs retenus + Mesures d’intérêt = Motifs candidats Trace transformée Motif choisi Fig 1 – Le scénario d’interprétation de Transmute il peut directement voir et accéder à toutes les occurrences du motif sélectionné Pour un motif sélectionné donné il peut alors créer un nouveau type d’obsel qui se substi tuera à chaque occurrence du motif sélectionné dans la trace transformée Lorsqu’un motif est sélectionné tous les motifs dont les occurrences ont au moins un obsel en commun avec les occurrences du motif sélectionné sont éliminés Les indicateurs des motifs restants sont alors recalculés et la liste est triée en conséquence Les motifs ne répondant plus aux contraintes fixées initialement par l’analyste support sont auto matiquement éliminés ce qui diminue graduellement le nombre de résultats et facilite ainsi le prochain choix de l’analyste qui peut se focaliser sur d’autres motifs Lorsque l’analyste a sélectionné tous les motifs et défini les types d’obsels les remplaçant il peut confirmer les changements et déclencher la création d’une nouvelle trace transformée Ceci a pour conséquence de supprimer définitivement tous les motifs précédemment estompés de l’interface L’analyste a la possibilité de continuer l’interprétation soit à partir des résultats restants soit en réitérant le processus avec d’autres contraintes sur la même trace ou sur la trace nouvellement créée 4 Transmute Transmute était initialement conçu pour visualiser et transformer des traces de façon interactive et fournit pour cela un ensemble de fonctionnalités pour créer des obsels manipuler des traces visualiser et stocker les résultats de transformations La motivation sous jacente est de fournir à l’analyste de l’activité des outils interactifs pour assister l’interprétation des traces Dans ce travail nous avons enrichi Transmute avec des fonctionnalités d’ecd qui permettent à présent de paramétrer et lancer un algorithme de fouille et d’afficher les résultats afin de construire des traces transformées et d’assister l’étape de post traitement du processus d’ecd ainsi que la manipulation des résultats L’architecture de Transmute s’articule autour de plusieurs modules fig 2 Il s’appuie d’abord sur Samotraces 4 un framework Javascript permettant de construire 465 Transmute TransmuteDisKit DMT4SP Samotraces kTBS Visualisation paramètres motifs séquentiels paramètres motifs séquentiels Ma nip ula tion � de trac es Modèle � de trace Fig 2 – Transmute architecture des visualisations de traces personnalisables en paramétrant l’affichage des éléments observés en fonction de leur type leurs attributs etc Samotraces permet également la communication avec le gestionnaire de traces appelé kTBS fournissant toutes les manipulations de base sur les traces collecte de traces traitement transformations exportations etc DisKit met en oeuvre les étapes du processus d’ecd L’étape de fouille utilise dmt4sp pour trouver les épisodes séquentiels fréquents à partir d’une ou plusieurs séquences d’événements dmt4sp prend en compte de nombreuses contraintes telles que le support des contraintes temporelles fenêtre temporelle maximale gap min max des contraintes syntaxiques longueur min max préfixe suffixe etc Ces contraintes sont complétées par DisKit en post traitement avec d’autres types de contraintes telles que la recherche de motifs fermés tels que définis dans Tatti et Cule 2010 des contraintes de présence ou d’absence de motifs spécifiques afin de réduire le nombre de motifs produits Les résultats de la fouille sont mis en forme et restitués Actuellement DisKit ne traite qu’une seule trace à la fois Une session typique d’utilisation de Transmute est la suivante Tout d’abord l’utilisateur choisit parmi les traces disponibles stockées dans la base des traces une trace qui est affichée Sur cette trace l’utilisateur choisit ensuite le type de transformation appliquer à cette trace en l’occurrence il s’agit dans cette démonstration d’un processus d’ecd La trace en cours de traitement et la trace transformée sont affichées avec leur modèle 4 s github com bmathern samotraces js 466 Barazzutti et al L’utilisateur est alors invité à choisir les paramètres à utiliser puis à lancer la fouille Le miner est lancé et les résultats sont mis en forme et affichés L’interface de d’interprétation interactive de Transmute comporte trois parties principales fig 3 1 La première partie montre en haut la trace en cours d’analyse et en bas la trace en cours de transformation où les motifs sont affichés 2 Sur la droite un résumé du modèle de trace permet de faciliter la compréhension de la trace et des motifs 3 La troisième partie montre la liste des motifs issus de la fouille 5 Conclusion et perspectives Nous avons présenté une démarche d’interprétation interactive dans un processus d’ecd mise en oeuvre dans Transmute L’analyste peut directement voir l’impact de ses actions sur la trace et sur les résultats de la fouille restant à examiner Il reste de nombreuses fonctionnalités à mettre en oeuvre notamment pour assister le pré traitement Un bon paramétrage de la fouille n’est pas une tâche facile et nous pensons poursuivre notre travail sur l’interactivité en améliorant Transmute dans ce sens Nous souhaitons également permettre à l’utilisateur de choisir les indicateurs qu’ils souhaite pour le tri des résultats de la fouille et lui proposer aussi bien des indicateurs dépendants que indépendants du domaine 467 Transmute Fig 3 – L’interface principale de Transmute Références Champin P A A Mille et Y Prié 2013 Vers des traces numériques comme objets informatiques de premier niveau une approche par les traces modélisées Intellec tica 59 171–204 Mannila H H Toivonen et A I Verkamo 1997 Discovery of frequent episodes in event sequences Data Mining and Knowledge Discovery 1 259–289 Tatti N et B Cule 2010 Mining closed strict episodes In ICDM 2010 The 10th IEEE International Conference on Data Mining Sydney Australia 14 17 December 2010 pp 501–510 Summary Analysis of traces is an increasingly active issue in knowledge discovery kd Un fortunately to date few tools are designed to help interactively the analyst during the knowledge discovery process In this paper we present Transmute a tool to assist the analyst throughout an interactive kd process in traces Transmute displays the results of the mining together with the source trace so that it is easier for the analyst to understand them and thus to refine the parameters of the algorithm accordingly Transmute is developed as a web platform and relies on a Python implementation of the kd process 468 