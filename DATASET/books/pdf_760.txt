actes_non_num 351rotes growth adaptation growth générer règles association classe bahri stéphane lallich laboratoire université avenue pierre mendès france 69500 bahri stephane lallich lyon2 lyon2 motivations classification associative prédit classe partir règles association particulières dites règles association classe règles consé quent variable indicatrice modalités classe écrivent conjonction descripteurs booléens variable indicatrice modalité classe intérêt règles classe permettre focalisation groupes dividus éventuellement petits homogènes point descripteurs présentant classe extraire règles classe méthodes classification associative procèdent filtrage règles générées algorithmes extraction règles associa développés supervisé première étape algorithmes extraient itemsets fréquents seuil déduisent toutes règles confiance dépasse seuil support différents problèmes première étape trait itemsets fréquents inutiles contiennent classe alors seconde étape simplifiée puisqu itemset contenant classe donne seule règle classe pouvoir travailler seuils support possible proposons growth adaptation growth élimine itemsets fréquents contenant classe outre désavantager classe moins nombreuse seuil support utilisé chaque classe proportionnel taille classe opposé apriori génère itemsets candidats teste conserver itemsets fréquents growth construit itemsets fréquents génération candidats abord compresse itemsets fréquents repré sentés données frequent pattern branches contiennent associations possibles items chaque association divisée ments constituent itemsets fréquents méthode growth transforme problème recherche itemset fréquent recherche petit conca ténation suffixe correspondant dernier itemset fréquent branche aboutissant considéré permet réduire recherche notre étude avons retenu growth raison structuration efficace apriori contribution growth growth algorithme proposons construire directement itemsets classe fréquents repose plusieurs principes cours construction élimine itemsets classe temps exécution stockage obtenu permettre diminuer seuil support aidera trouver pépites classe utilise seuil support adaptatif seuil utilisé chaque classe proportionnel taille classe pénaliser petites classes growth support noeud support noeud construction résultats évaluer efficacité growth avons testé bases réelles volumineuses ensemble trois bases traitées apparaît entre tiers moitié itemsets générés growth pertinents alourdit inutile procédure grâce procédure élimination itemsets classe seuil adaptatif growth permet extraire règles classes growth trois bases données varie suivant seuil évitant classe minoritaire défavorisée couverture indique proportion exemples couverts moins itemset classe nettement augmenté growth arriver environ représente entre augmentation selon bases alors growth permet traiter globalement moins itemsets growth temps exécution growth toujours inférieur celui growth autant seuil support petit outre cette comparaison prend compte temps exécution nécessaire construction itemsets néglige temps nécessaire filtrage itemsets classe lorsque utilise growth conclusion perspectives travail propose growth adaptation growth recherche itemsets règles association classe growth construit seuls itemsets fréquents classe basant support adapte taille chaque classe éviter défavoriser classes minoritaires résultats trouvés montrent amélioration couverture ainsi temps stockage grâce ration seuls itemsets fréquents classe permettra diminuer seuil support résultats justifient intégration growth comme algorithme génération règles procédure classification associative références mining frequent patterns without candidate generation naughton bernstein sigmod conference management press integrating classification association mining knowledge discovery mining