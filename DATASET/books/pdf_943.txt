 Intégration des connaissances utilisateurs pour des analyses personnalisées dans les entrepôts de données évolutifs Cécile Favre Fadila Bentayeb Omar Boussaïd ERIC Université Lumière Lyon 2 5 avenue Pierre Mendès France 69676 Bron Cedex {cfavre|bentayeb} eric univ lyon2 fr omar boussaid univ lyon2 fr Résumé Dans cet article nous proposons une approche d’évolution de schéma dans les entrepôts de données qui permet aux utilisateurs d’intégrer leurs propres connaissances du domaine afin d’enrichir les possibilités d’analyse de l’entrepôt Nous représentons cette connaissance sous la forme de règles de type si alors Ces règles sont utilisées pour créer de nouveaux axes d’analyse en générant de nouveaux niveaux de granularité dans les hiérarchies de dimension Notre approche est fondée sur un modèle formel d’entrepôts de données évolutif qui permet de gérer la mise à jour des hiérarchies de dimension 1 Introduction Les entrepôts de données centralisent des données provenant de différentes sources pour répondre aux besoins d’analyse des utilisateurs Le schéma de l’entrepôt est défini avec l’ob jectif d’analyser des mesures qui caractérisent des faits en fonction de dimensions qui peuvent être organisées sous forme de hiérarchies composées de différents niveaux de granularité déterminant la manière selon laquelle sont agrégées les données Pour concevoir le schéma d’un entrepôt nous distinguons dans la littérature différents types d’approches celles guidées par les sources de données Golfarelli et al 1998 celles guidées par les besoins d’analyse Kimball 1996 et les approches mixtes qui combinent les deux ap proches précédentes mettant en adéquation des schémas candidats générés à partir des sources de données avec les besoins d’analyse exprimés par les utilisateurs Nabli et al 2005 Cependant en pratique les sources de données tout comme les besoins d’analyse sont amenés à évoluer Dans la littérature il existe deux alternatives qui permettent l’évolution de schéma nécessaire suite à ces modifications D’une part la mise à jour de schéma qui est réalisée grâce à des opérateurs qui font évoluer un schéma donné Hurtado et al 1999 D’autre part la modélisation temporelle qui consiste à garder la trace de ces évolutions en utilisant des labels de validité temporelle Ces labels sont apposés soit au niveau des instances Bliujute et al 1998 soit au niveau des liens d’agrégation Mendelzon et Vaisman 2000 ou encore au niveau des versions du schéma Morzy et Wrembel 2004 L’inconvénient de ce type de solutions est la nécessité d’une réimplémentation des outils d’analyse de chargement afin de gérer les particularités de ces modèles Les deux alternatives sont intéressantes pour répondre au problème de l’évolution de schéma suite à une modification dans les sources de données puisque ce sont des solutions techniques Analyses personnalisées dans les entrepôts de données devant être mises en œuvre par l’administrateur Cependant elles n’impliquent pas directement les utilisateurs dans le processus d’évolution De ce fait elles n’apportent pas de solution au problème posé par l’émergence de nouveaux besoins d’analyse exprimés par les utilisateurs Or au cours de l’utilisation de l’entrepôt de nouveaux besoins apparaissent étant donné que 1 il est difficile de déterminer de façon exhaustive les besoins d’analyse pour l’ensemble des utilisateurs lors de la conception de l’entrepôt 2 ces besoins dépendent également des propres connaissances des utilisateurs 3 il est impossible de déterminer les besoins futurs Dans cet article nous proposons alors une approche originale qui s’inscrit dans l’approche de mise à jour de schéma impliquant les utilisateurs dans le processus d’évolution de l’en trepôt dans le but de leur fournir des analyses personnalisées en fonction de leurs propres connaissances du domaine et de leurs besoins Les connaissances utilisateurs concernent plus précisément la définition de nouvelles données agrégées et sont représentées sous la forme de règles de type si alors Ces règles dites d’agrégation sont ensuite utilisées pour générer de nouveaux axes d’analyse en créant dans les hiérarchies de dimension de nouveaux niveaux de granularité Notre approche est fondée sur un modèle d’entrepôt de données évolutif à base de règles nommé R DW Rule based Data Warehouse dont nous proposons ici une formali sation Pour valider notre approche nous avons développé une plateforme baptisée WEDriK1 data Warehouse Evolution Driven by Knowledge et avons appliqué notre approche aux don nées bancaires de LCL2 Néanmoins cette partie n’est pas développée ici en raison du manque de place et peut être consultée dans Favre et al 2006 Dans la suite de cet article nous introduisons tout d’abord dans la Section 2 un exemple simplifié motivant notre approche orientée utilisateurs Puis nous présentons dans la Section 3 notre approche ainsi que le principe du modèle R DW sur lequel elle se base Nous proposons ensuite la formalisation de ce modèle dans la Section 4 Enfin nous concluons et indiquons les perspectives de ce travail dans la Section 5 2 Exemple introductif Pour illustrer notre approche de modélisation d’entrepôt de données évolutif à base de règles nous utilisons le cas réel de la banque LCL Le PNB annuel Produit Net Bancaire cor respond à ce que rapporte un client à l’établissement bancaire Cette mesure est analysée selon les dimensions CLIENT AGENCE et ANNEE Figure 1 Il est possible d’agréger les données selon le niveau UNITE_COMMERCIALE qui est un regroupement d’agences Figure 2a FIG 1 – Modèle multidimensionnel pour l’analyse du PNB de LCL 1 eric univ lyon2 fr ~cfavre wedrik 2Collaboration avec la Direction d’Exploitation Rhône Alpes Auvergne de LCL–Le Crédit Lyonnais LCL dans le cadre d’une Convention Industrielle de Formation par la Recherche CIFRE C Favre et al Supposons qu’un utilisateur veuille analyser les données selon le type d’agence il sait qu’il en existe trois type étudiant pour les agences ne comportant que des étudiants type non résident lorsque les clients ne résident pas en France et le type classique pour les agences ne présentant pas de particularité Ces informations n’étant pas présentes dans l’entre pôt il est impossible pour lui d’obtenir une telle analyse Notre objectif est donc de proposer à l’utilisateur d’intégrer dans le schéma de l’entrepôt sa connaissance sur les types d’agence pour créer le niveau de granularité TYPE_AGENCE Figure 2b FIG 2 – Schémas de la dimension AGENCE a initial b enrichi par l’utilisateur 3 Une approche orientée utilisateur L’architecture de notre approche orientée utilisateur comprend quatre phases Figure 3 1 une phase d’acquisition des connaissances utilisateurs sous la forme de règles d’agrégation 2 une phase d’intégration de celles ci pour les stocker dans le SGBD Système de Gestion de Bases de Données 3 une phase d’évolution du schéma dans laquelle a lieu la création de nouveaux niveaux de granularité au sein des hiérarchies de dimension à partir des règles d’agrégation et enfin 4 une phase d’analyse sur le modèle qui évolue ainsi de façon incré mentale FIG 3 – Architecture pour l’évolution de schéma Les règles d’agrégation sont des règles de type si alors utilisées pour représenter des liens d’agrégation entre deux niveaux de granularité où une instance d’un niveau inférieur correspond à une instance dans le niveau supérieur Ainsi l’ensemble de règles d’agrégation définissant un nouveau niveau doit construire une partition des instances du niveau inférieur clauses si et mettre en correspondance chaque classe de la partition avec une instance du nouveau niveau clauses alors Analyses personnalisées dans les entrepôts de données Notre approche se base sur un modèle d’entrepôt évolutif à base de règles d’agrégation R DW qui est composé d’une partie fixe correspondant au schéma de l’entrepôt qui répond à des besoins d’analyse globaux et une partie évolutive définie par les règles d’agrégation créant de nouveaux niveaux de granularité dans les hiérarchies de dimension répondant aux besoins d’analyse personnalisés 4 Formalisation du modèle R DW Nous désignons le modèle d’entrepôt évolutif à base de règles R DW par le triplet suivant R DW � ��������� �� où � est la partie fixe � la partie évolutive et l’univers de R DW Définition 1 Univers de l’entrepôt Soit R DW � ��������� �� L’univers de l’entrepôt R DW est un ensemble d’attributs tel que � � ��� �� où � ������� ��������� �" est l’ensemble des � attributs prédéfinis définis dans la partie fixe � de R DW et � � � %�' �� * �+ est l’ensemble des attributs générés définis par la partie évolutive � de R DW Définition 2 Partie fixe de R DW Soit R DW � ��������� �� La partie fixe de R DW est définie par � �� �0 21 où est une table de faits et �3��465 ���7�98 �< = est l’ensemble des dimensions de premier niveau qui ont un lien direct avec Nous supposons que ces dimensions sont indépendantes Exemple 2 Dans la Figure 1 > _ A�B � { C D�EFB % E C BGBGEFE %�H I EFB > } 1 consti tue la partie fixe de l’entrepôt R DW pour l’analyse du PNB Définition 3 Hiérarchie de dimension et niveau de granularité Soit R DW � � � �0 J1������ �� 465LK M6N � 465PO P�=Q R� est une hiérarchie de la dimension 4S5 La hiérarchie de dimension465LK M6N est composée d’un ensemble de T niveaux de granularité ordonnés notés HVU 465LK M6N��J��H L� H �+� K�K�K � H U � K�K�K � H W � T X�+ avec H ZY H �SY K�K�K Y H U Y K�K�K Y H W où Y exprime l’ordre partiel sur les H�U Le niveau de granularité H�U de la hiérarchie MSN de la dimension 4S5 est noté 465LK M6N[K H U ou plus simplement H 50NU Les niveaux de granularité peuvent être définis par des attributs générés Exemple 3 Selon le schéma de la Figure 2 b on a 4Z\^]�_�`ba�_bK M � ={AGENCE TYPE AGENCE} H \^]�_�`ba�_ �� =TYPE AGENCE Définition 4 Attribut généré Soient R DW � � c �0 31������ �� H 50NU le niveau de granularité H�U de la hiérarchie MSN de la dimension 465 et �� l’ensemble des attributs définis par la partie évolutive � de R DW Un attribut généré C O � caractérise le niveau de granularité H 50NU et est noté H 50NU K C Remarque pour des raisons de simplification nous supposons ici que chaque niveau de gra nularité est caractérisé par un seul attribut généré Exemple 4 Dans l’exemple de la section 2 H \^]�_�`ba�_ �� K C � BGd�e >gf�hji CVk iLlnmoi Définition 5 Partie évolutive de R DW Soit R DW � ��������� �� La partie évolutive de R DW est définie par � ���p q�U�r � H 50NU K C 1� où qPU�rj���LsLU t ������uS�v ���G�xwy� T est un ensemble de v règles d’agrégation définissant les valeurs de l’attribut C Favre et al généré H 50NU K C qui représente le niveau de granularité HbU de la hiérarchie MSN de la dimension465 � représente donc l’ensemble des niveaux de granularité créés et les règles associées qui permettent de les définir Exemple 5 Dans l’exemple de la section 2 on a � � � 5 ULU��=\������ ����� ‘01903’ ‘01905’ ‘02256’ ����� ��� 5[` ��������� � \������ ���� ‘étudiant’5 ULU��=\������ ���� � " ��"� ��� ��� 5[` ��������� � \������ ���� ‘non résident’ %' +* � 100 r \5 ULU��=\������ ���2�� ‘01903’ ‘01905’ ‘02256’ ‘01929’ � ��� ��� 5 ` ��������� � \������ ���� ‘classique’ 3 Définition 6 Règle d’agrégation Une règle d’agrégation permet de définir le lien d’agrégation qui existe entre deux niveaux de granularité dans une hiérarchie de dimension Elle est basée sur un ensemble 4 de l termes de règles notés 5 > � tel que 4 � � 5 > � ����� h � l ���76 d hP��iLl 8 8 v 9 où 6 est un attribut de l’univers de l’entrepôt d h est un opérateur � � � O iLl 8 est un ensemble de valeurs et v 9 est une valeur finie Exemple 6a 5 > =<+w�> CVk iLlnmoi�O � ‘01903’ ‘01905’ ‘02256’ 5 > ��< CVk i 1 A Une règle d’agrégation est une règle de type si alors La conclusion de la règle clause alors définit la valeur de l’attribut généré La prémisse de la règle clause si est basée sur une composition de conjonctions 8 disjonctions des termes de règles sLU t <�8�w 5 > V� i B8 dDC � 5 > � K K K � i B8 dDC � 5 >�� 9 d s 8 H 50NU K C � v 9 U t où v 9 U t�O 4 d�e E'FG r \ le domaine de définition de l’attribut H 50NU K C Exemple 6b Les règles suivantes déterminent les valeurs de l’attribut NomClasseAge qui définit le niveau hiérarchique AGE s <�8�w CVk i �H 9 d s 8 BGd�e % I9 8�8 i CVk i � ‘mineur’s 0�J<�8�w CVk i �H 9 d s 8 BGd�e % I9 8�8 i CVk i � ‘majeur’ Les règles doivent définir une partition du domaine de définition de l’attribut généré Propriété 1 Soient H 50NU K C l’attribut généré qui caractérise le niveau de granularité HbU de la hiérarchie MSN de la dimension 4S5 qPU�r � �LsLU t ����� w�� T ����� u6� C l’ensemble des C règles d’agrégation définissant les valeurs de l’attribut généré H 50NU K C et K d > f � sLU t � la clause si de la règle s�U t Les conditions exprimées dans un ensemble de règles qui définissent un attribut généré donné prises deux à deux doivent être disjointes L w=� L u ��M� i 8NM C i u M[� u OPO � � vRQ ��S ��M OPO T � C S � K d > f � sLU t � U K d > f � sLU�V � � Ø Propriété 2 Soient H 50NU K C l’attribut généré qui caractérise le niveau de granularité HbU de la hiérarchie MSN de la dimension 4S5 qPU�r � �LsLU t ����� w�� T ����� u6� C l’ensemble des C règles d’agrégation définissant les valeurs de l’attribut généré H 50NU K C v 9 U t la valeur de H 50NU K C définie dans la règlesLU t et 4 d�e E'FG r \ le domaine de définition de H 50NU K C L’ensemble du domaine de définition4 d�e E'FG r \ doit être couvert par les règles qui définissent l’attribut H 50NU K C L w=�XWRYt�� v 9 U t � 4 d�e E'FG r \ 5 Conclusion Dans cet article nous avons proposé une approche originale qui exploite les connaissances utilisateurs pour faire évoluer le schéma de l’entrepôt afin d’obtenir des analyses personna Analyses personnalisées dans les entrepôts de données lisées Notre approche est fondée sur un modèle formel d’entrepôt de données évolutif basé sur des règles d’agrégation Notre approche présente plusieurs avantages une flexibilité pour l’évolution du schéma de l’entrepôt puisque les hiérarchies de dimension sont mises à jour dynamiquement une interaction accrue entre l’utilisateur et le système d’aide à la décision L’utilisateur devient alors un réel acteur du processus décisionnel dont le rôle va au delà de la navigation dans les données selon le modèle initialement défini Ce travail ouvre de nombreuse perspectives D’une part nous voulons aborder d’autres opérations de mise à jour des hiérarchies de dimension D’autre part notre approche permet de prendre en compte l’évolution des besoins d’analyse Nous nous intéressons également à la prise en compte de l’évolution conjointe des sources de données et des besoins d’analyse Enfin il nous faut gérer la mise à jour des règles et étudier l’impact de celle ci sur l’entrepôt de données Références Bliujute R S Saltenis G Slivinskas et C Jensen 1998 Systematic Change Management in Dimensional Data Warehousing In IIIrd International Baltic Workshop on Databases and Information Systems Riga Latvia pp 27–41 Favre C F Bentayeb et O Boussaïd 2006 Une approche orientée utilisateur pour l’évolu tion de schémas dans les entrepôts de données Technical report Laboratoire ERIC Univer sité Lyon 2 Golfarelli M D Maio et S Rizzi 1998 Conceptual Design of Data Warehouses from E R Schemes In XXXIst Annual Hawaii International Conference on System Sciences HICSS 98 Big Island Hawaii USA Volume 7 pp 334–343 Hurtado C A A O Mendelzon et A A Vaisman 1999 Updating OLAP Dimensions In IInd ACM International Workshop on Data Warehousing and OLAP DOLAP 99 Kansas City Missouri USA pp 60–66 Kimball R 1996 The Data Warehouse Toolkit John Wiley Sons Mendelzon A O et A A Vaisman 2000 Temporal Queries in OLAP In XXVIth Interna tional Conference on Very Large Data Bases VLDB 00 Cairo Egypt pp 242–253 Morzy T et R Wrembel 2004 On Querying Versions of Multiversion Data Warehouse In VIIth ACM International Workshop on Data Warehousing and OLAP DOLAP 04 Wa shington District of Columbia USA pp 92–101 Nabli A A Soussi J Feki H Ben Abdallah et F Gargouri 2005 Towards an Automatic Data Mart Design In VIIth International Conference on Enterprise Information Systems ICEIS 05 Miami Florida USA pp 226–231 Summary In this paper we propose an approach to involve users in the data warehouse schema evo lution process by allowing them to define new aggregated data For this end we use “if then” rules to represent users’ analysis needs These rules are exploited to enrich and personalize analysis possibilities by creating new granularity levels in dimension hierarchies We define a data warehouse formal model to support our approach 