meilleure exploitation classification croisée systèmes filtrage collaboratif aghiles salah nicoleta rogovschi françois mohamed nadif lipade université paris descartes france saints pères 75006 paris prénom parisdescartes résumé prédiction automatique items préférés utilisateurs différents systèmes filtrage collaboratif proposés entre basés factorisation matricielle approches proches voisins malheureusement approches requièrent temps calcul important partie problèmes surmontée classification croisée clustering avère pertinente permet nature gestion simultanée ensembles correspondant lisateurs items cependant travaux doivent encore menés meilleure prise compte données manquantes travail proposons gestion efficace données observées permettant meilleure exploitation potentiel classification croisée domaine systèmes recommandation montrons permet tenir représentations graphes bipartis facilitant interprétation teractive affinités entre groupes utilisateurs groupe items introduction objectif systèmes recommandation prédire choix préférences viduelles fonction comportements préférences observées filtrage collaboratif technique utilisée systèmes recommandation consiste comparer données utilisateur données similaires autres utilisateurs basée tudes achat navigation goldberg permet commerçants fournir recommendations clients futurs achats suite données présentées matrice taille chaque ligne représente utilisateur colonnes représentent items chaque cellule attribuée lisateur notes peuvent binaires réelles appelée matrice réelle notations matrice obtenue manière explicite gardant évaluations fournies utilisateurs articles donnés manière implicite considérant utilisateur préfère implicitement acheter éléments présentés pages visitées filtrage collaboratif désormais désigné plusieurs approches utilisées techniques actuelles telles celles basées corrélation entre utilisateurs classification croisée visualisation systèmes bobadilla factorisation matricielle koren sarwar delporte couramment utilisées nécessitent temps calcul coûteux peuvent déployées ligne contexte classification croisée clustering consiste regrouper simultanément utilisateurs items bonne solution particulièrement appropriée systèmes recommendation ainsi exemple intéressant disposer groupes utilisateurs appréciant groupe films george merugu auteurs proposé approche algorithme classification croisée pondérée coclust implique regroupement simultané utilisateurs articles malheureusement cette approche prise compte données manquantes appropriée conduisant ainsi faible qualité recommandation proposons faire meilleur usage algorithme prise compte efficace données manquantes autre exploitant potentiel résultats classification croisée développons outil interactif visualisation interprétation simultanée groupes utilisateurs groupes items reste papier organisé comme section présente système classification croisée coclust sections fournissent détails approches gestion notes manquantes visualisation section démontre effica approches proposées données réelles enfin section conclut présente directions recherches futures notation matrice notes classification croisée clusters blocs matrices résultant classification croisée coclust conduit partition ensemble utilisateurs classes partition ensemble items classes notons matrice classification binaire taille finie utilisateur appartient classe sinon nière notons matrice classification binaire taille définie appartient classe sinon commodité utiliserons également respectivement vecteur étiquettes items enfin utiliserons indices désigner implicitement lignes utilisateurs colonnes items classes ligne classes utilisateurs classes colonnes classes items respectivement classification croisée coclust partant algorithme weighted bregman clustering banerjee auteurs george merugu proposé attaquer problème recommandation moyennant reconstitution données observées suivant classification croisée précisément partir réorganisation clusters obtenus algorithme coclust auteurs proposent matrice approximation sparse matrice sparse chaque cellule définie manière suivante respectivement moyennes calculées ensemble leurs observées cluster classe utilisateurs classe items chaque utilisateur chaque notons cette formulation dépend sachant partitions inconnues critère minimiser coclust suivant matrice binaire taille observé manquant solution optimum local problème obtenue minimisation alternée sachant sachant banerjee jusqu convergence algorithm convergence prédiction obtenue utilisant algorithm training based clustering input ouput initialisation repeat compute update argmin1 update argmin1 until convergence comme indiqué précedemment estimations cours itérations coclust basées uniquement données observées malheureusement étant donné données manquantes élevé sparsité certaines matrices ordre prédictions biaisées impliquant qualités recommandation discutables autre george merugu proposé remplacer moyenne cluster contient aucune observée moyenne globale cette stratégie tement perturber qualité classification croisée garantit conver gence coclust comme montre figure explications avons rapporté iterations illustration divergence coclust données sparse movielens classification croisée visualisation systèmes input initialisation iteration iteration iteration classification croisée utilisant coclust symbole représente quante figure matrice données trois classes lignes trois classes colonnes séparées figures présentent différentes itérations coclust résultat final figure montre coclust mesure trouver bonnes partitions lignes colonnes classes séparées effet notons sultat obtenu itération figure meilleur résultat final terme homogénéité clusters moyenne clusters vides remplacée moyenne globale section suivante proposons nouvelle manière imputer données manquantes pouvoir appliquer coclust pallier problèmes cités précedemment matrice utilisateur après imputation imputation moyennes items gestion notes manquantes surmonter problème données manquantes approches cipalement utilisées première consiste travailler uniquement valeurs observées deuxième consiste utiliser procédures imputation imputation moyenne couramment utilisée consiste remplacer notes manquantes utilisateur moyenne notes observées approches peuvent efficaces valeurs manquantes canismes données manquantes missing completely random missing random little rubin malheureusement notes manquantes filtrage colla boratif élevé approches inefficaces contexte effet elles peuvent conduire estimations fortement biaisées impacte négativement qualité recommandations illustrer propos avons rapporté figure exemple matrice utilisateur avant figure après imputation moyennes items figure voulons ordonner items fonction préférences utilisa teurs ordre fiable serait élément apprécié revanche utilisons matrice après imputation trier éléments manière obtiendrons ordre suivant absurde puisque arrive seulement troisième position arrive première position estimations fortement biaisées moyennes utilisateurs allons présenter nouvelle méthode imputation basée version ligne algorithme kmeans rique means zhong notre approche repose étapes principales partitionner ensemble utilisateurs classes utilisant algorithme means tenant compte valeurs manquantes estimer notes manquantes basant résultats classification enfin remplacer celles matrice dessous décrivons manière détaillée différentes étapes notre approche etape classification partitionner ensemble utilisateurs groupes proposons procédures suivantes initialisation version initiale means initialisation tirage aléatoire centres initiaux parmi ensemble utilisateurs cependant cette stratégie efficace notre effet probabilité choisir utilisateur notes observées comme centre gravité initial élevée autre sélectionner classification croisée visualisation systèmes centres initiaux uniquement parmi ensemble utilisateurs ayant beaucoup items permettrait seulement détection certains groupes surmonter difficultés proposons procédure initialisation suivante générer partition aléatoire utilisateurs classes estimer centres initiaux comme composante centre alors zikmijuij zikmij zikmij zikmijuij sinon seuil proportionnel taille classe défini utilisateur intuitivement cette stratégie permet estimer composante centre classe partir données disponibles seulement suffisamment notes observées cette classe revanche quand valeurs observées composante estimation celle pénalisée divisant seuil etape lorsque utilisateur choisi étape affectation dispose suffisamment notes observées assignation celui fiable conséquent centre correspondant déplacé utilisateur résoudre problème introduisons fonction binaire annule algorithme fournit détails cette étape classification algorithm classification input normalized users number clusters learning number batch iterations output centroids steps random initialization partition estimation initial centroids zikmijuij zikmij zikmij zikmijuij otherwize assignment compute argmink update winner centroid estimation notes manquantes cette étape notes manquantes estimées basant résultats classification cependant pondération notes avère encore nécessaire avons choisi accorder importance utilisateurs representant mieux classe partenance pondérant atténuant effet utilisateurs accord préférence globale classe appartenance utilisateur actif prend forme suivante sinon médiane probabilité apprécié groupe zikmij zikmij zikmij sinon section suivante proposons exploiter résultats classification croisée fournir utilisateurs représentation interactive basée graphes bipartis cette dernière permet seulement faciliter interprétation résultats aussi donner préférences utilisateurs contexte filtrage collaboratif visualisation résultats classification croisée travaux intéressés aspect visualisation contexte systèmes recommandation effet systèmes souvent évalués capacité faire bonnes recommandations fonctionnement reste abstrait utilisateurs parmi quelques travaux visualisation citer méthode visualisation shelton consiste représenter utilisateurs items aiment espace euclidien aussi citer peerchooser smyth système interactif permet visualiser forme graphe interactions entre utilisateur actif voisinage offrant possibilité modifier dérnier existe aussi travaux proposent visualiser dimensions liste items recommander utilisateur actif utilisant techniques classiques telles travail proposons nouvelle approche visualisation contexte systèmes recommandations contrairement autres méthodes citées dessus notre approche globale focalise uniquement utilisateur actif exploite dualité inhérente classification croisée mieux mettre évidence affinités entre certains types groupes utilisateurs certains types produits cisément proposons représenter relations préférences entre groupes lisateurs groupes items moyen graphes bipartis notre approche décrite comme classifier matrice utilisateur classes utilisateurs classes items expérimentations avons utilisé coclust après gestion manquantes présentée section précédente construire matrice résumant résultats classification croisée laquelle chaque groupe lignes chaque groupe classification croisée visualisation systèmes colonnes représenté utilisateurs items populaires votes respectivement calculer relation préférence entre chaque groupe utilisa teurs chaque groupe items formule construire graphe biparti étape décrite détail partie expérimentale matrice résumée étape utilisateurs items matrice binaire utilisateur sinon alors corrélation entre classe utilisateurs classe items calculée comme intuitivement corrélation préférence entre groupe utilisateurs certain groupe items représente proportion items populaires classe ayant appréciée utilisateurs populaires classe section suivante présente résultats expérimentaux démontrant efficacité approches proposées algorithm bipartite procedure input output correlation matrix between clusters steps compute clusters column clusters compute relevant users items compute correlation matrix between clusters using build bipartite graph résultats expérimentaux expériences avons choisi données movielens beaucoup utilisés domaine échantillon consti utilisateurs films million notes observées ensemble contient notes fournies utilisateurs films proportion notes observées dernier seulement évaluations utilisateurs partiennent intervalle notes manquantes codées données movielens fournissent également certaines informations démographiques utilisateurs telles profession postal informations films titre genre sortie noter plusieurs genres proposons suite réaliser comparaison courbes grouplens datasets movielens coclust svdcf coclust comparaison courbes ensemble number items coclust svdcf coclust comparaison measure ensemble iterations convergence coclust données coclust svdcf comparaison temps calcule données evaluation plusieurs systèmes données movielens measure systèmes suivants coclust incrémental décompo sition valeurs singulières svdcf sarwar coclust coclust après gestion valeurs manquantes comparaisons réalisées recommenderlab hahsler avons combiné langage implémenter différentes méthodes dessus courbes figure construites faisant varier nombre items recommander figures montrent amélioration signi ficative performances coclust grâce gestion données manquantes proposons remarque aussi faible qualité recommandations svdcf gestion données manquantes inappropriée effet cette dernière approche sarwar notes manquantes remplacées moyennes items estimations fortement biaisées autres termes cette imputation favorise items notes observées comme illustré section figure figure montre étape imputation coclust reste rapide svdcf concerne possibilités visualisation exploitant classification croisée figure montre exemple graphe biparti construit comme classification ensemble classes utilisateurs classes items utilisant coclust calculer corrélations entre groupes utilisateurs items formule construire graphe biparti rectangles gauche représentent groupes utilisateurs tandis droite groupes items seuls liens correspondent fortes corrélations représentés chaque groupe utilisateurs professions populaires présentées genres populaires chaque classe classification croisée visualisation systèmes student other student administrator other student librarian administrator student programmer educator administrator clusters count action comedy drama romance drama thriller drama action action drama clusters count genres graphe biparti représentant données partitionnées classes utilisateurs items respectivement films représentés toutes représentations graphes bipartis suivent réalisées bibliothèque figure montre groupes utilisateurs films proportions différentes dernières correspondent hauteur rectangles exemple classes utilisateurs correspondent rectangles jaune respectivement représentent grande proportion utilisateurs rapport autres groupes notons également graphe biparti figure survol souris classe utilisateurs graphe biparti figure survol souris classe corrélation intéressante entre groupe utilisateurs violet groupes items interpréter comme préférence particulière étudiants programmeurs professions populaires classe films action thriller drame autre résultat important pouvant déduit partir figure certains groupes peuvent fusionnés exemple groupes items peuvent fusionnés effet groupes représentés principalement films drama appréciés presque groupes utilisateurs autres interactions possibles comme affichage informations supplémentaires groupe survol celui souris figure ainsi possible constater membres classe utilisateurs forte préférence films groupes préférence films drame romance expliquée présence écrivains bibliothécaires artistes groupe utilisateur également forte proportion personnes âgées entre dernier figure montre autre interaction survol classe items conclusion papier avons proposé meilleure exploitation potentiel classi fication croisée systèmes faire avons développé nouvelle stratégie gestion efficace données manquantes avons ensuite proposé nouvelle approche interactive basée graphes bipartis permettant interpréter comprendre résultats classification croisée contexte résultats rimentaux montrent amélioration importante performances classification croisée grâce meilleure gestion notes manquantes avons aussi montré comment représentations interactives basées graphes bipartis peuvent aider classification croisée visualisation systèmes lisateurs donner résultats obtenus détectant clusters intéressants analysant contenu derniers références banerjee dhillon ghosh merugu modha generalized maximum entropy approach bregman clustering matrix approximation bobadilla ortega hernando gutiérrez recommender systems survey knowledge based systems delporte karatzoglou apprentissage factorisation recom mandation revue nouvelles technologies information george merugu scalable collaborative filtering framework based clustering fifth international conference mining goldberg nichols terry using collaborative filtering weave information tapestry communications hahsler recommenderlab framework developing testing recommenda algorithms koren bellkor solution netflix grand prize little rubin statistical analysis missing second edition shelton visualization collaborative sarwar karypis konstan riedl incremental singular value decomposi algorithms highly scalable recommender systems fifth sarwar karypis konstan riedl application dimensionality reduction recommender system study webkdd workshop smyth gretarsson höllerer peerchooser visual interactive recommendation zhong efficient online spherical means clustering joint neural networks summary collaborative filtering systems provide relevant items users existing based matrix factorization nearest neighbors methods fortunately approaches expensive terms computational treat missing rating matrix computational addressed using clustering methods which involve spaces simultaneously latter approaches still efficient strategy handling missing values propose effective method handling unobserved ratings allowing better clustering approaches furthermore propose interactive representation clustering results based bipartite graphs representation allows interpretation sense making preferences between clusters règles recommandations meilleure exploitation classification croisée systèmes filtrage collaboratif aghiles salah nicoleta rogovschi francois mohamed nadif