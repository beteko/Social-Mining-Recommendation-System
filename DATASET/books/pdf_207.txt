 Slider un Raisonneur Incrémental Évolutif Jules Chevalier Julien Subercaze Christophe Gravier Frédérique Laforest Université de Lyon F 42023 Saint Étienne France CNRS UMR5516 Laboratoire Hubert Curien F 42000 Saint Étienne France Université de Saint Étienne Jean Monnet F 42000 Saint Étienne France prenom nom univ st etienne fr laboratoirehubertcurien fr Les solutions existantes pour le raisonnement incrémental souffrent principalement de leur incapacité à prendre en charge des ontologies complexes et ne sont pas conçues pour gérer de grandes quantités de connaissances Dans cet article nous présentons Slider Chevalier et al 2015 un raisonneur incrémental évolutif par chaînage avant permettant de raisonner sur des flux de données sémantiques Les principales caractéristiques de Slider sont les suivantes Exécution parallèle et passage à l’échelle Le processus est parallélisé plutôt que distribué malgré le coût de l’accès concurrent au triplestore Limitation des doublons Les connaissances reçues ou inférées par le raisonneur sont acces sibles de manière concurrente par tous les modules du système Support de flux de données L’achitecture parallèle de Slider lui permet de recevoir des don nées de sources statiques et dynamiques Indépendance au fragment Slider supporte nativement les fragments RDFS et ρdf et peut être utilisé pour des fragments plus complexes Notre système multi processus est constitué de modules autonomes chacun associé à une règle d’inférence comme le présente la figure 1 Un triplestore unique est partagé par ces mo dules de manière synchronisée Le partitionnement vertical introduit par Abadi et al 2007 permet un accès rapide aux données Les triples envoyés au système sont récupérés par le distributeur général Cet élément re çoit les nouveaux triples les stocke dans le triplestore et les envoie aux règles pouvant les utiliser Chaque règle associée à un buffer récupère les triples envoyés par le distributeur gé néral Lorsque qu’un buffer est plein ou n’a pas reçu de nouveau triples depuis un temps prédéfini timeout un exécuteur de règle est instancié afin d’appliquer la règle d’inférence sur les triples présents dans le buffer Ces buffers permettent d’améliorer la répartition de charge en appliquant les règles sur des ensembles de triples et non pas pour chaque triple réduisant ainsi la quantité de processus légers instanciés Ils assurent également que chaque triple est traité par le système en garantissant même lors de l’exécution d’une règle qu’ils sont recueillis par le buffer Les triples inférés par les exécuteurs de règle sont ensuite récoltés par le distribu teur de la règle correspondante Ce distributeur les redistribue aux buffers des règles pouvant utiliser ces triples Afin de déterminer si une règle peut utiliser un triple inféré par une autre 537 Slider un Raisonneur Incrémental Évolutif TRIPLESTORE Flux de triples R2 R2 R1R3 Buffers Distributeurs R1 R2 R1 R2 Accès concurrent Exécuteurs de règles Distributeur Général R2 R2 R1 R1 R2 FIG 1 – Vue d’ensemble de l’architecture du raisonneur Slider règle un graphe de dépendance des règles présenté par Soma et Prasanna 2008 est calculé à l’initialisation du raisonneur Nos expérimentations ont montré une amélioration du temps d’inférence de 106 86% sur ρdf et de 36 08% sur RDFS par rapport à la base de comparaison commerciale OWLIM SE présentée par Bishop et al 2011 et grandement utilisée dans les comparatifs de systèmes de raisonnement Le code source de Slider est disponible librement à l’adresse suivante juleschevalier github io slider La page d’accueil du projet contient les ins tructions de reproduction des différentes expérimentations menées Références Abadi D J A Marcus S R Madden et K Hollenbach 2007 Scalable semantic web data management using vertical partitioning In PVLDB pp 411–422 Bishop B A Kiryakov D Ognyanoff I Peikov Z Tashev et R Velkov 2011 OWLIM A Family of Scalable Semantic Repositories Semantic Web Chevalier J J Subercaze C Gravier et F Laforest 2015 Slider An Efficient Incremental Reasoner In Proceedings of SIGMOD pp 1081–1086 ACM Soma R et V K Prasanna 2008 Parallel inferencing for OWL knowledge bases In ICPP’08 pp 75–82 IEEE Summary The main drawbacks of current reasoning methods over ontologies are they struggle to provide scalability for large datasets The batch processing reasoners who provide the best scalability so far are unable to infer knowledge from evolving data We contribute to solving these problems by introducing Slider an efficient incremental reasoner Slider exhibits a per formance improvement by more than a 70% compared to the OWLIM SE reasoner Slider is conceived to handle expanding data from streams with a growing background knowledge base It natively supports ρdf and RDFS and its architecture allows to extend it to more complex fragments with a minimal effort 538 