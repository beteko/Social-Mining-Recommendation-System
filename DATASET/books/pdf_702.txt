articles assemblage.pdf Tulip: un cadre de visualisation graphique évolutive David Auber, Patrick Mary, Morgan Mathiaut, Jonathan Dubois, Antoine Lambert, Dan Archambault, Romain Bourqui, Bruno Pinaud, Maylis Delest, Guy Melançon *, ** * UMR CNRS 5800 LaBRI, campus Université Bordeaux I @ labri.fr http://www.labri.fr ** INRIA Bordeaux Sud-Ouest, campus de l'Université Bordeaux I @ inria.fr http://www.inria.fr/bordeaux CV. Le cadre graphique de visualisation Tulip bénéficie maintenant 10 ans d'expérience utilisateur, et a mûri son cycle d'architecture et de développement. Origi- nalement conçu pour les grands graphes Navigate de manière interactive, le cadre implante des systèmes sur l'art concepts et bonnes pratiques d'ingénierie logicielle. Il offre un large panel de représentations graphiques (dessin graphique traditionnel, ainsi que des représentations alternatives). Tulip est le plus utile dans un contexte d'exploration de données et la découverte de connaissances, ce qui permet aux utilisateurs d'ajouter facilement leur propre analyse des données et des routines de com- Puting par son architecture plug-in. La plupart des efforts de recherche dans l'exploration de données et l'extraction de connaissances et de représentation ont besoin d'expérimentation et de validation. À cette fin, notre groupe développe le Tulip Graph cadre de visualisation. Tulip offre un C ++ plug-in mécanisme facilitant le développement et l'ajout de nouveaux algorithmes (statistiques de graphique informatique, dessin graphique ou regroupement graphique). Ceci est en fait une caractéristique principale de la plate-forme Tulip. Tulip outils optimisés et des structures de données efficaces, la gestion des données et le filtrage / in- mécanismes de Heritance. Son moteur de rendu OpenGL repose sur, tandis que ses restes de l'interface graphique sur la bibliothèque QT ch Trollte-. Le principal paradigme d'interaction offerte par Tulip est le calcul et la manipulation directe des hiérarchies de graphique, ce qui rend unique parmi toutes les plates-formes de visualisation graphique disponibles. Tulip peut être utilisé dans un scénario typique où l'objectif est de découvrir les tendances des données. L'exploration peut être entraîné par l'utilisateur à l'aide des plug-ins disponibles, le calcul de statistiques sur un graphique, la conception de palettes de couleurs ou d'attribuer tailles à des noeuds, par exemple. Fig. 1 illustre un nario scé- typique lors de l'exécution exploration et l'analyse des données en utilisant des tulipes. Alors que le volet de gauche donne accès à plusieurs propriétés du graphe et les paramètres de réglage, les volets de droite montre plusieurs vues sur les données: Dessin graphique de noeuds de liaison (en haut à gauche); Les coordonnées parallèles (en bas à gauche, ici représenté circulairement); des cartes d'auto-organisation et histogrammes, matrice de nuage de points (en haut droite) et la feuille tabulaire standard (en bas à droite). Tulip est incroyablement efficace à synchroniser des vues et des propriétés gardant cohérence entre les vues. L'application colormaps par histogrammes ou des noeuds de sélection par l'auto-organisation des cartes immédiatement les transferts à toutes les autres vues. RNTI-E-19- 623 - Tulip: une évolutive et cadre Adaptive graphique Visualisation figure. 1 - Exemple séance de travail en utilisant Tulip. L'une des caractéristique principale de Tulip est la possibilité pour un utilisateur d'ajouter ses propres plug-ins pour l'ensemble du cadre. 1 Le résultat d'un plug-in sera typiquement stocké dans un récipient conçu avant appelé une propriété. Propriétés apparaissent comme paradigme central Tulip, ce qui permet de modéliser le cadre et appliquer à une grande variété de domaines d'application et l'utilisation de l'application. Plug-ins peuvent compter les uns des autres grâce à des mécanismes d'invocation de la propriété. plug-in plus sophistiqué et interacteurs peut être développé au prix de faire face à l'intervalle QT. Tulip apparaît également comme un cadre unique permettant le calcul et la visualisation des algorithmes de regroupement multi-niveaux. En se fondant sur OpenGL, les hiérarchies de graphique peuvent être interactive explorés où des graphiques de niveau inférieur apparaît comme ils gagnent size.The les plus récentes avancées avec Tulip ont montré comment la programmation GPU pourrait être utilisée pour améliorer les performances lors de l'élaboration des graphiques ou lors de la conception des bords sous forme de courbes haut polynômes (Béziers) . Résumé La Plate-forme de visualisation de Graphes Tulip is de Maintenant riche d'ex- Dix Années PERIENCE, du Point de Tant vue de l'utilisation de fils, de la conception de l'architecture de fils de fils Que développement logiciel. Conçue verser de très grands Manipuler Graphes Dans un Contexte interactif, les concepts Elle Adopte et pratiques de l'état de l'art du génie et logiciel Une large palette implémente de Graphes de représentations. Destinées à des Avec Être utilisées d'- analyse de outils Données, architecture fils à l'Përmet d'integrer SES Utilisateur Propres d'analyser et Composants de dessin. 1. La méthode réelle peut actuellement être consulté sur le site Web de l'établissement Tulip. Voir l'URL www.tulip-software.org, pour accéder manuel et tutoriel, le mode d'emploi du développeur. Nous fournissons des modèles de C à partir de laquelle on peut développer son propre plug-in pour dessiner des graphiques ou calculer les statistiques graphiques de spécifiques. RNTI-E-19 - 624 -