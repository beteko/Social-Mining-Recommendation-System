Microsoft Word - EGC-Champin-prie- mille.rtf MUSETTE: un cadre pour la connaissance de l'expérience Capturer Pierre Antoine Champin, Yannick Prié, Alain Mille LIRIS - Bât Nautibus - Informatique Université Claude UFR Bernard Lyon 1 / F-69622 Villeurbanne Cedex prenom. nom@liris.cnrs.fr http://liris.cnrs.fr/prenom.nom CV. L'article de nous Présentons this Une nouvelle approche de l'expérience de modélisation d'utilisation d'un Système d'informatique, with répandrai de réutiliser this Objectif expérience en l'assisteur verser Contexte à Utilisateur sa Effectuer Tâche. Quatre scénarios this approach illustrent. 1. Introduction Il est un trivialité de dire que les ordinateurs sont largement utilisés, pour de plus en plus diverses et de nombreuses tâches, qui reposent principalement sur la « gestion de l'information »: l'organisation de l'information, le stockage, la communication, la recherche, le partage ... De plus, les environnements de gestion de l'information se de plus en plus personnalisable, afin de se rapprocher des pratiques des utilisateurs, des usages et, plus généralement, à leurs besoins de traitement de l'information quelle que soit sa forme. Par exemple, on pourrait considérer qu'un environnement composé d'un / le web en tant que fournisseur de ressources (documents, données) et b / un outil pour la visualisation et l'édition des documents HTML, est adapté à une tâche impliquant la collecte d'informations et la publication. Le spectre des tâches assistées par ordinateur devient plus large, et des outils pour l'exécution de ces tâches deviennent plus polyvalent et personnalisable. Depuis, d'autre part, ils ont de plus en plus les utilisateurs (souvent inexpérimentés), il y a un besoin croissant d'aider ces derniers dans leurs tâches tout en utilisant des outils ou des ensembles d'outils. Par conséquent, il est nécessaire de concevoir des agents logiciels comme assistants, qui tirer profit des connaissances décrivant la tâche à accomplir. En effet, il devient nécessaire de prendre dans les tâches de l'utilisateur du compte afin d'être en mesure d'interpréter, dans leur contexte, les traces laissées par l'utilisation de l'environnement informatique. Bien sûr, dans de nombreuses situations d'assistance aux utilisateurs, il peut y avoir une grande variété de questions qui peuvent être formulées, en fonction du contexte d'utilisation. Soulignons le fait que cette notion de « contexte » n'a rien à voir avec ce qui est communément abordée dans le soi-disant « aide contextuelle »: celle-ci envisage exclusivement le contexte de l'environnement informatique (par exemple, l'élément sélectionné, le menu en cours) tandis que nous nous concentrons sur le contexte de l'utilisateur, en particulier la tâche qu'il ou elle est prêt à effectuer. Plus précisément, nous considérons deux types de tâches. Tout d'abord, nous considérons les tâches qui sont bien identifiés, pour lesquels une assistance se fonderait sur les connaissances décrites dans ontologies soigneusement conçu. Mais il est également important d'envisager un deuxième type de tâches, qui sont difficiles à prévoir, et doivent être reconnus de leurs manifestations et définies à la volée, compte tenu de l'expérience réelle d'utilisation du système. Nous voudrions répondre à ces tâches, notre principale question est: comment est-il possible de modéliser et de l'expérience de capture dans l'utilisation d'un système, afin qu'il puisse être réutilisé en tant que connaissances pour l'assistance aux utilisateurs? Par ailleurs, comment pourrait-il que l'aide elle-même pourrait évoluer avec l'expérience concrète? MUSETTE: Un cadre pour la capture des connaissances de l'expérience de notre groupe, qui vient du domaine de la recherche Raisonnement Case-Based (CBR) comme moyen de suivi et de réutilisation d'expérience, a tenté de proposer des solutions pour relever ce défi à travers les travaux de recherche antérieurs [Prié et Mille, 2000; Champin et Prié, 2003]. Cela nous a conduit à élaborer Musette (Modélisation et tâches USAGES pour le traçage d'expérience), un cadre général pour représenter une expérience concrète en relation avec son contexte d'utilisation. La section suivante présente l'approche globale Musette. Les deux sections suivantes présentent les notions de modèle d'utilisation et des traces, puis d'expliquer la signature de la tâche comme un moyen de diviser une trace dans les épisodes, ou les cas réutilisables potentiels. La cinquième section traite des scénarios démontrant différents types d'assistants en action, Musette tandis que la sixième section est consacrée à l'examen des travaux connexes, principalement dans le domaine de la recherche communautaire et la modélisation des tâches. 2. Approche globale La figure 1 présente le cadre général de notre approche, ce qui (dans le sens horaire) à partir du niveau d'observation (coin supérieur droit) au niveau de réutilisation de l'expérience (-bas à gauche), avec deux niveaux de modélisation de l'expérience. Un utilisateur interagit avec un système, ce qui conduit à des changements dans ce système informatique (événements, fichiers ...). Un agent d'observation, en observant les changements selon un modèle d'observation, génère une trace primitive, qui est conforme à un modèle d'usage général. Ensuite, un analyseur de trace générique extrait des épisodes significatifs de la trace primitive, d'après les signatures de tâches expliquées. Ces épisodes peuvent être (re) utilisés par les agents auxiliaires, ce qui peut aider l'utilisateur soit comme agents clairement distincts du système (aide directe) ou par une modification du système (système d'aide à médiation). Dans ce dernier cas, l'interaction d'assistance peut à son tour être observé par l'agent d'observateur, ce qui permet des épisodes d'assistance à également réutilisés. Soulignons le fait que Musette est seulement un cadre général. Il peut être mis en œuvre en utilisant différentes langues ou formalismes de représentation, à condition que ceux permettent la représentation de toutes les composantes de l'approche Musette. 3. Modèle d'utilisation et des traces Puisque l'approche nécessite une représentation MUSETTE, comme une trace primitive, des interactions entre l'utilisateur et le système, la première étape dans l'application de cette approche est de décider ce que la trace sera faite, et comment seront effectivement construits. Ces questions doivent être posées respectivement par le modèle d'utilisation et le modèle d'observation, afin de construire l'agent d'observateur en charge de la production de la trace (cf. fig. 1). En gros, la trace sera composé d'objets d'intérêt (OI). Ceux-ci peuvent appartenir à l'une des trois catégories: les entités, les événements et les relations. Les entités peuvent être caractérisées comme des objets utilisateur agent Observer trace Primitive épisodes Épisodes interaction système d'aide directe assistance à médiation extraction épisode de génération de trace d'observation .... ............ Episode réutilisation système d'observation modèle signature Tâche 1 signature Tâche 2 Modèle d'utilisation des agents adjoints analyseur de trace générique FIG. 1 - Présentation de notre approche et le vocabulaire Champin et al. être présent à l'utilisateur dans leur interaction avec le système, alors que les événements peuvent être caractérisés comme des objets qui se produisent lors de l'interaction. Objets du sens à la fois l'application de l'ordinateur et de l'utilisateur. Les relations sont binaires, et peuvent impliquer soit des entités ou des événements. Le modèle d'utilisation d'un système particulier décrit ce type d'entités, les événements et les relations seront réellement observables pour produire la trace primitive. Des contraintes supplémentaires, y compris celles sur la structure interne de l'OIS, peuvent également faire partie du modèle d'utilisation. Soulignons le fait que les objets d'intérêt utilisés pour décrire un système, comme « intérêt » le mot implique, dépend de l'attention particulière, mais en général, du modèle d'utilisation. Décider comment l'interaction utilisateur-système sera observée est limitée à être biaisé par les objectifs du concepteur du modèle d'utilisation. Décrire les composantes de la trace à être produite ne suffit pas de construire un observateur, cependant. Le modèle d'observation doit encore être décrit comme un ensemble de moyens d'accès de données pertinentes dans le système, ainsi que des règles contraignantes du processus de production du -eg de trace, le sous-ensemble pertinent de toutes les entités observables doit être écrit à la trace à un moment donné? Contrairement au modèle d'utilisation, le modèle d'observation est non spécifiée par l'approche MUSETTE pour le moment, et un observateur ad hoc doit être construit pour chaque système et avec un modèle d'usage particulier à l'esprit, et le modèle d'observation doit être Hard- codé manuellement dans un tel observateur. Une fois que l'agent d'observateur a été spécifié par le modèle d'utilisation et le modèle (éventuellement logic codé) d'observation, on peut produire des traces de l'observation des interactions entre l'utilisateur et le système. La structure de la trace ne se limite pas à un flux continu d'entités et d'événements, éventuellement en relation avec l'autre. En effet, les entités sont utilisées pour représenter l'état du système à un moment donné (ou au cours d'une période considérée comme un instant dans le cadre du modèle d'utilisation). D'autre part, les événements se produisent dans la période transitoire entre deux états. D'où le groupement, dans la trace, des IO en fonction de leur catégorie, transforme la trace en une séquence alternée d'états et de transitions. Il convient de noter que les états et les transitions dans l'approche ont simplement Musette un rôle temporel. Ils ne visent pas à donner un sens causal prédéfini. Bien sûr, un modèle d'utilisation donnée peut ajouter telle sémantique de cause à effet à certains types d'entités, les événements et les relations qu'il définit. 4. Extasis et épisodes en supposant que le modèle d'utilisation permet une description appropriée des interactions de l'utilisateur avec le système, l'expérience de l'utilisateur est potentiellement récupérable de la trace primitive. Plus précisément, nous appelons un épisode d'une partie de la trace correspondant à une expérience spécifique dans l'exécution d'une tâche spécifique, et qui peut être réutilisé dans une situation similaire. Des morceaux de la trace sont reconnus comme des épisodes liés à une tâche particulière grâce à Explained TÂCHE SIGNATURES (Extasis). Nous avons besoin d'un moyen de localiser des épisodes dans la trace primitive. De manière plus générale, nous considérons que les caractéristiques communes peuvent être exprimées par: 1 / un motif du graphe constitué par les objets d'intérêt (par exemple des événements et des entités) et leurs relations; 2 / des contraintes sur les positions relatives des infections opportunistes dans le tracé (par exemple des co-occurrences dans les observations - Etats ou des transitions -, la distance entre les observations de la trace); 3 / contraintes dépendant de la langue sur la structure interne des infections opportunistes (par exemple, Les valeurs d'attributs). Une fois ces caractéristiques communes ont été identifiées pour une tâche particulière, ils peuvent être considérés comme une signature de cette tâche. En effet, leur instanciation dans la trace peut être interprétée comme une preuve de l'utilisateur qui effectue cette tâche dans la période correspondante. Épisodes ne sont pas limités à des parties de la trace instanciation d'une signature de la tâche, cependant: une fois identifié la tâche effectuée par l'utilisateur, on peut améliorer leur interprétation de la trace. Les rôles que le MUSETTE: cadre A pour la capture des connaissances de l'expérience dans le jeu IOs cette trace peut être plus facile à comprendre; relations supplémentaires, non capturés par l'agent d'observateur, et ne sont pas présents dans le modèle d'utilisation, peuvent être déduites; etc. Par conséquent, l'épisode peut être annotés ou expliqué, par un certain nombre d'informations provenant du fait qu'il a été reconnu comme un événement d'une tâche particulière. Les explications peuvent prendre la forme d'annotation de texte libre (qu'un humain pourrait interpréter), ou d'annotation de connaissances formelles (visant à une interprétation de l'agent automatisé). 5. Scénarios Montrons comment les différents types d'assistants peuvent être conçus sur le dessus de l'approche MUSETTE, compte tenu d'un scénario de navigation sur le Web. Un assistant spécifique peut prendre en une tâche donnée de compte en réutilisant l'épisode instanciation de l'Extasi correspondant. Par exemple, nous pourrions construire un assistant qui informe l'utilisateur chaque fois qu'elle navigue une page dans un site intéressant, c'est-, chaque fois qu'il trouverait un épisode correspondant à un Extasi « un site intéressant d'un signet » dont le site est le site actuel. Un tel assistant spécifique peut appliquer des mécanismes de raisonnement à base de cas [Aamodt et Plaza, 1994] de réutiliser des épisodes pertinents dans un contexte donné. Cependant, un avantage de l'approche est que la Musette même base de connaissances (les traces primitives) peut être partagée par de nombreux assistants différents différents épisodes de l'extraction il. De plus, un nouvel assistant peut être ajouté sans avoir besoin de construire un tout nouveau bas de connaissances e: seulement une nouvelle Extasi doit être fourni afin d'extraire de nouveaux épisodes de traces existantes. Le second scénario implique un assistant générique capable de traiter un certain nombre de tâches, via leur Extasi, de façon régulière: explorer la trace actuelle par rapport à une tâche particulière. Par exemple, l'utilisateur peut parcourir tous les sites intéressants qu'elle a déjà visité, ou toutes les pages qu'elle préférait lire en français. Il pourrait également être suggéré de mettre un signet sur une page ou modifier le paramètre de langue, quand il l'a déjà fait avec une page similaire. Encore une fois, l'assistant pourrait même effectuer ces actions automatiquement. L'avantage de Musette est que chaque tâche particulière est réifié et provoquée par la Extasi correspondante, et que les explications fournies dans le Extasi peut être utilisé pour guider l'assistant, ainsi que pour le rendre compréhensible par l'utilisateur. Dans le troisième scénario, l'utilisateur demande explicitement l'assistant de l'aide. Celui-ci doit alors identifier l'être des tâches effectuées par l'utilisateur afin de sélectionner des épisodes appropriés pour la réutilisation. identification des tâches peut varier de sélection explicite d'un Extasi par l'utilisateur, à la détection entièrement automatique dans la trace de courant selon l'Extasis disponible. Une solution intermédiaire est destiné au système de proposer plusieurs interprétations de l'activité de l'utilisateur, sur la base du Extasis partiellement instancié et les explications correspondantes. L'utilisateur peut alors accepter ou de rejeter ces interprétations jusqu'à ce qu'un consensus soit atteint. Le quatrième scénario va plus loin que le précédent. On suppose qu'aucun des Extasis proposée satisfaire l'utilisateur. L'assistant pourrait fournir un moyen pour lui de préciser encore plus précisément quelle tâche il est prêt à effectuer. Par exemple, notre utilisateur ne veut ni demander à quelqu'un, ni d'affiner sa requête en ajoutant d'autres mots-clés, mais préférez envoyer la même requête à un moteur de recherche plus spécialisés (par exemple, spécifique de champ ou spécifique de la langue). Ce que l'utilisateur est en train de faire est la description d'une nouvelle tâche avec sa propre Extasi -sans préciser complètement, bien sûr, puisque l'utilisateur a besoin d'aide pour trouver le moteur de recherche spécialisé approprié. Même si ce Extasi ne savait pas avant, cette tâche aurait déjà été réalisée, et par conséquent des traces peut contenir des épisodes pour cette Extasi nouvellement créé. L'utilisateur peut en effet décrire une tâche jusque-là inconnue à la volée, et obtenir encore une aide à ce sujet. On voit ici comment la séparation dans Musette, entre Champin et al. le modèle d'usage général et les signatures de tâches spécifiques, met à profit l'utilisateur de assistanceMerci les styles Suivants respecter Les Pour Les listes. 6. Autres travaux Bien avant les ordinateurs numériques et l'Internet, [Bush, 1945] a été le rêve de ce qu'il appelait le « MEMEX », un dispositif qui capture tout un scientifique a examiné ou commenté au sujet, la création d'une piste d'information dont il d'autres scientifiques ont pu récupérer plus tard. Dans les années 90, [Hill et al., 1992] a vu des interactions cumulées des utilisateurs avec des objets numériques comme une forme d'usure, comparable aux pages déchirées dans un manuel. Plus récemment, [Wexelblat et Maes, 1997] ont mis au point un outil permettant aux utilisateurs de visualiser les chemins les autres ont pris par un site. Ces travaux préliminaires ont porté sur ce qui pourrait être présenté directement à l'utilisateur que des empreintes à suivre pour elle (informulée) demande. Ils visent à travailler comme assistants génériques. Quelques travaux ont porté sur la tâche de l'utilisateur de mettre en contexte l'assistance [Farell et al., 2000; Francisco-Revilla et Breimer, 2000] tandis que d'autres ont essayé de capturer des épisodes de navigation web général sur les signatures statiques [Corvaisier et al., 1997; Jaczinski et Trousse, 1998] ou, comme [Takano et al., 2000], passé les cas de procédure utilisée pour aider leur utilisation dans des applications spécifiques. Ces derniers travaux reposent sur le paradigme Raisonnement Case-Based, qui est largement utilisé pour aider les systèmes de bureau. Ces cas de besoin d'être décrit par des formes [Herbeaux, 1999] ou du sonner une « conversation » (ce qui suppose que les questions peuvent être structurées pour répondre aux cas d'une bibliothèque) [Aha et al., 2001]. Par conséquent, la structure de cas doit être défini dans les bibliothèques d'avance et cas sont construits selon elle. L'expérience qui y sont stockés devient donc guère exploitable pour des questions imprévues. Si les cas doivent être assouplies comme des épisodes d'utilisation dynamique trouvés dans la trace, il est néanmoins nécessaire de prendre en compte les tâches utilisateur contexte. la modélisation des tâches a été largement étudiée par la communauté de l'ingénierie des connaissances. Cette modélisation peut être réalisée dans les systèmes à base de connaissances conception de contexte [Schreiber et al., 1999] et est de plus en plus utilisé à des fins KM [Holz et al., 2001]. De la même façon, l'ontologie conception est de plus en plus explicitement tâche axée sur [Reynaud, 1997]. L'ingénierie des connaissances propose des modèles, des méthodes et des outils, ce qui implique souvent de grands efforts pour susciter des tâches des comportements réels des utilisateurs. D'autre part, les assistants informatiques qui permettent aux utilisateurs d'effectuer une tâche seulement besoin d'être exprimé en termes de ressources pertinentes pour l'assistance, plutôt que la modélisation des tâches à part entière. Néanmoins, dans une approche de réutilisation de l'expérience, il est nécessaire de repérer des morceaux des traces d'utilisation qui référeraient à la tâche de certains utilisateurs. Par conséquent, nous avons proposé Éxtasis que des vues simplifiées des modèles de travail. De telles signatures peuvent être conçues en fonction de l'ingénierie des connaissances classiques approches afin d'être intégré dans un environnement informatique, avant est jamais utilisé le système; mais ils peuvent aussi être conçus sur demande à temps géré par l'utilisateur lui-même. Cette approche suppose que les utilisateurs finaux sont co-créateurs de leur environnement d'assistance. 7. Conclusion L'application du modèle MUSETTE à une interaction a besoin d'une phase de prototypage: dans de nombreux cas, les agents observateurs devront être codées à partir de zéro, et donc des efforts de développement importants. Pour aller plus loin que la modélisation simple papier stylo, nous avons besoin d'un outil graphique pour le modèle d'utilisation rapide prototypage, des traces primitives et les premières signatures de la tâche. Nous avons développé un prototype d'un tel qu'un plug-in pour PROTÉGÉ (http://protege.stanford.edu/), en utilisant OKBC comme langue de mise en œuvre MUSETTE. Outre les systèmes que nous avons déjà construit, sur dont l'expérience la création, nous avons conçu MUSETTE, et donc qui - MUSETTE: Un cadre pour la capture des connaissances de l'expérience dans une certaine mesure - les parties mises en œuvre de l'approche MUSETTE, nous sommes maintenant plus particulièrement applique cette approche la conception de plusieurs agents adjoints concernés par divers outils. Références [Aamodt et Plaza, 1994] A. Aamodt, E. Plaza. raisonnement à partir de cas; questions fondamentales, les variations méthodologiques et approches du système. AI Communications, Vol.7, n ° 1 [Aha et al., 2001] D.-W. Aha, L. Breslow et H. Munoz-Avila. raisonnement à partir de cas conversationnel. Intelligence appliquée, 14 (1): 9-32, 2001. [Bush, 1945] V. Bush, comme on peut penser, Atlantic Monthly, 176 (1), 101-108, 1945 [Champin et Prié 2003] P-A. Champin et Y. Prié. : Annotation musettes utilisations basée sur le Web sémantique, Dans Annotation pour le Web sémantique, IOS Press, Amsterdam (NL), 2003. [Corvaisier et al., 1997] F. Corvaisier, A. Mille et J.-M. Épingler à. Recherche d'information sur le Web en utilisant un système de prise de décision. En RIAO 1997, pages 284-295, juin 1997. [Farell et al., 2000] R. Farrell, P. Fairweather et E. Brumer. Une tâche architecture pour adjonctions au courant d'application, ACM Conférence internationale sur les interfaces utilisateur Intelligent, La Nouvelle-Orléans, LA USA, pages 82-85, 2000 [Francisco-Revilla et Breimer, 2000] L. Francisco-Revilla et E. Breimer. diffusion de l'information médicale adaptative combinant l'utilisateur, les modèles de travail et la situation, Conférence Internation sur les interfaces intelligentes, Nouvelle-Orléans, LA, États-Unis pages 94-97, 2000 [Hill et al., 1992] W.C. Colline J.D. Hollan, D. et T. Wroblewski McCandless. Modifier et Wear Lire l'usure. Dans Proc. de la Conférence ACM sur les facteurs humains dans les systèmes informatiques, CHI'92, pa gements 3-9, New York ACM Press, 1992 [Holz et al., 2001] H. Holz, A. Könnecker et F. Maurer. la gestion des connaissances tâches spécifiques dans un processus centré voir. Dans Althoff, Feldmann et Müller, rédacteurs en chef, les progrès d'apprentissage organisations logiciels, Proc. de LSO 2001, LNCS 2176, 2001. [Jaczinski et Trousse, 1998] M. Jaczinski, B. Trousse. WWW Assisted navigation en réutilisant passé Navigations d'un groupe d'utilisateurs, dans Advances in Raisonnement à partir de cas, 4 EWCBR, Dublin, Irlande, 1998 [et Mille Prié, 2000] Y. et A. Mille Prié. La réutilisation des conteneurs de connaissances: une sémantique locale approche. Dans M. Minor, rédacteur en chef, atelier sur les stratégies souples pour le maintien de conteneurs connaissances, ECAI 2000, numéro 33, pages 38-45, août 2000. [Reynaud, 1997] C. Reynaud et F Tort. En utilisant des ontologies explicites pour créer des méthodes de résolution de problèmes. Inter-national Journal of-Homme-études, 46: 339-364, 1997. [. Schreiber et al, 1999] G. Schreiber, A. Hakkermans, A. Anjewierden, R. de Hoog, N. Shadbolt, W. Van de Welde et B. Wielinga. L'ingénierie des connaissances et de la gestion: La méthodologie CommonKADS. Le MIT Press, 1999. [Takano et al., 2000] A Takano, Y. Yurugi et A. Kaenaegami. Procédure à base du système d'aide de bureau, ACM IIU 2000, Nouvelle-Orléans, LA USA, pages 264-272, 2000 [Wexelblat et Maes, 1997] A. Wexelblat et P. Maes. Empreintes: Histoire riche en navigation sur le Web, en RIAO'97, pages 75-84, 1997. Résumé Nous présentons une nouvelle approche pour la modélisation de l'expérience de l'utilisateur dans l'utilisation d'un système informatique, avec la perspective de réutiliser cette expérience que les connaissances dans le contexte pour aider l'utilisateur le long de sa tâche. Les avantages de cette approche sont démontrées par quatre scénarios.