Une approche basée sur la sémantique de connexion Galois pour obtenir des bases génériques de règles d'association S. Ben Yahia, N. Doggaz Y. Slimani, J. Rezgui Département des Sciences de l'Informatique Faculté des Sciences de Tunis Campus Universitaire, 1060 Tunis, Tunisie. sadok.benyahia; yahya.slimani; narjes.doggaz@fst.rnu.tn, jihen rezgui@yahoo.fr CV. L'augmentation de la taille vertigineuse des Données (transactionnelles OU textuelles) is a Constante de Défi pour la « Scalabilité » des techniques d'ex- traction des connaissances heuristiques. Dans papier CE, sur approach Une Présente la verser des bases Génériques dérivation de rules associatives. Les ractéristiques de CA- Principales approaches this les Suivantes are. D'une partie juin, l'instauration d'structure de juin appelee Données « Trie-itemset » pour le stockage de la rela- tion en entrée. D'une partie de autre, utiliser le juin méthode « verser Diviser régner » pour le Réduire de construction de Coût des structures ordonnées Partiellement, à partir les bases Génériques desquelles de rules are Directement extraites. 1 Introduction De nombreuses recherches dans l'exploration de données de grandes bases de données a mis l'accent sur la découverte des règles de sociation as- [Agrawal et Skirant, 1994, Brin et al., 1997, Manilla et al., 1994]. Association génération de règles est réalisée à partir d'un ensemble F de itemsets fréquents dans un contexte d'extraction D, pour une minsupp de soutien minimal. Une association règle r est une relation entre itemsets de la forme r: X ⇒ (Y -X), dans laquelle X et Y sont des motifs fréquents, et X ⊂ Y. Jeux d'éléments X et (Y-X) sont appelés, respectivement, antécédent et conclusion de la règle r. Les règles d'association valides sont celles dont la mesure de confiance Conf (r) = support (Y) support (X) 1 est supérieur ou égal au seuil minimal de confiance, minconf nommé. Si Conf (r) = 1 alors r est appelée règle d'association exacte (ER), sinon elle est appelée règle d'association approximative (AR). Et la visualisation de l'exploitation des règles d'association est loin d'être une tâche triviale, surtout à cause du grand nombre de règles potentiellement intéressantes qui peuvent être tirées à partir d'un ensemble de données. Diverses techniques sont utilisées pour limiter le nombre de règles déclarées, en commençant par des techniques d'élagage de base sur la base de thre- sholds à la fois la fréquence du motif représenté (appelé le support) et la force de la dépendance entre l'antécédent et la conclusion (appelée confiance) . Des techniques plus avancées qui produisent un nombre limité de l'ensemble de règles reposent sur les fermetures et les connexions Galois [Bastide et al., 2000, Stumme et al., 2001, Zaki, 2000], qui sont à leur tour dérivé de la théorie de Galois et l'analyse de concepts formels (CAF) [Ganter et Wille, 1999]. Enfin, les travaux sur la FCA ont donné une série de résultats sur les représentations compactes des familles ensemble fermées, également appelées bases, dont l'impact sur l'association réduction de la règle est actuellement à l'étude intensive au sein de la communauté [Bastide et al., 2000, Stumme et al., 2001]. Dans cet article, nous proposons une nouvelle structure de données à base de Trie l'on appelle l'arbre « itemset-Trie ». arbre itemset-Trie étend l'idée revendiquée par les auteurs de FPTree [Han et al., 2000] et CATS [Cheung et Zaiane, 2003], visant à améliorer la compression de stockage et permettre (fermé) extraction de motifs fréquents sans candidat « explicite » itemsets génération. Ensuite, nous proposons un algorithme, qui tombe dans la caractérisation « Divide and Conquer » pour extraire les itemsets fermés fréquents avec leurs générateurs minimaux associés. Il est à noter que la dérivation de la base Luxemburger est basée sur l'exploration de ces jeux d'éléments fermés organisés sur leur ordre naturel partielle (également appelée relation de priorité). Voilà pourquoi nous construisons sur l'approche basée sur la sémantique de connexion Galois pour obtenir générique ... mouche, en même temps que le processus de découverte des itemsets fermés, le « iceberg réseau » local. Ces sous-structures locales commandées peuvent être tirées tout naturellement d'une manière parallèle. Ensuite, ces sous-structures ordonnées sont analysés pour dériver, de façon simple, l'association locale des bases génériques. Enfin, les bases locales sont fusionnées pour générer le global. Un tel processus peut être récapitulé comme suit: - Construire le itemset-Trie - Construire les structures locales ordonnées - Fusionner les structures locales ordonnées pour déduire des bases de règles d'association Le reste du papier est organisé comme suit: Dans la section 2, nous motiver le choix de le jeu d'éléments d'arborescence et présente un algorithme pour sa construction. La section 3 présente un algorithme pour la construction des structures ordonnées. L'article 4 conclut le papier et les points les orientations futures à suivre. 2 structure de données itemset-Trie Dans le contexte de l'exploitation minière motifs fréquents (fermés) dans les bases de données de transaction ou de nombreux autres types de bases de données, un nombre important d'études se fondent sur Apriori comme « générer - et test » approche [Agrawal et Skirant, 1994 ]. Cependant, cette approche souffre d'une étape de génération de jeu de candidats très coûteux, en particulier avec des motifs longs ou lorsque nous réduisons les besoins par l'utilisateur. Cet inconvénient est renforcé par des analyses de base de données de disque stockées tediously répétées. Pour éviter le goulot d'étranglement d'approche, des études récentes (par exemple, les travaux d'avant-garde de Han et al. Et sa structure FP-tree [Han et al., 2000]) a proposé d'adopter une structure de données de pointe, où la base de données est compressé afin de réaliser l'extraction de modèle. L'idée derrière la structure de données compacte FP-arbre est que lorsque plusieurs transactions partagent une fréquence identique itemset, ils peuvent être fusionnés en un seul avec un certain nombre d'occurrences enregistré. À côté d'une étape de tri coûteux, la structure FP-Tree proposée est malheureusement pas adapté à un processus d'extraction interactive, dans lequel un utilisateur peut être intéressé à faire varier la valeur de support. Dans ce cas, le FP-arbre doit être reconstruit depuis sa construction dépend soutien. Bien que le travail présenté dans [Cheung et Zaiane, 2003] aborde cette insuffisance, la structure de pro- posé appelé CATS dans lequel un seul élément est représenté dans un nœud. Voilà pourquoi nous introduisons une, indépendante de soutien, structure plus compacte appelée itemset-Trie, dans lequel chaque noeud est composé par un jeu d'éléments. Pour illustrer cette compacité, considérons la base de données de transac- tions données par la figure 1. La figure 1 (a) représente le FP-arbre associé, tandis que la figure 1 (b) représente la itemset-Trie associée. Exemple 1 Considérons la base de données de transaction donnée par la figure 1 (gauche). Chaque nœud a la structure suivante: <itemset / support>. Dans un premier temps, le vide Trie est et il est composé par un seul nœud racine. Nous commençons par le traitement de la première transaction « acfmp ». Nous dérivons un nœud de la racine et nous ajoutons un nouveau nœud contenant la chaîne « acfmp / 1 ». Ensuite, nous traitons la transaction « ABCFM ». Cette transaction et le précédent ont en commun (ou préfixé) {a} élément. Par conséquent, le premier noeud est divisé: on garde le noeud avec « / 2 » et deux noeuds sont dérivés contenant respectivement « BCFM / 1 » et « PIE / 1 ». Traitement de la troisième transaction « bf » conduira à la création d'un nouveau noeud « bf / 1 », directement dérivé du nœud racine, car aucun élément sont préfixés en commun. Le processus décrit ci-dessous est respecté jusqu'à ce que le traitement de toutes les transactions. 3 Dérivation des structures ordonnées En raison du manque d'espace disponible, lecteur intéressé par les résultats clés de la base RNTI-réseau Galois - E - 2 Ben Yahia et al. Articles TID 1 acfmp 2 ABCFM 3 bf 4 BCP 5 acfmp / 1/ 2 (a ) (b) figure 1 - gauche:. base de données de transaction droite: FP-tree et l'itemset-Trie associée à la base de données de transaction. paradigme CAF est appelé [Ganter et Wille, 1999]. En sortie de la première étape, nous avons construit le jeu d'éléments d'arborescence. Afin d'effectuer une extraction de règles asso- ciation (spécialement la base de règles approchées), nous avons besoin de construire des structures ordonnées en fonction de la relation de priorité. 3. 1 Principes Comme nous ne travaillons qu'avec itemsets fermés, les besoins de construction de commande pour récupérer la relation de la préséance famille de itemsets fermés. L'objectif principal (et contribution également) de notre approche est de découvrir les itemsets fermés et de les commander à la volée. Nous ne voulons pas construire une seule structure ordonnée de la relation d'entrée (qui tourne pour construire le diagramme de Hasse), mais au contraire, nous cherchons la construction de plusieurs structures ordonnées. Bien sûr, une certaine redondance apparaît à-dire une donnée itemset fermé peut apparaître dans plus d'une structure ordonnée, mais nous éviter le coût élevé de la construction du diagramme de Hasse. Ceci est effectué dans un processus graduel à-dire en reliant une notion à la fois à une structure qui est partiellement terminée. Une fois l'arbre itemset-Trie est construit, il peut être utilisé pour fermer la mine et leurs jeux d'éléments générateurs minimaux ted ciations à plusieurs reprises pour différents réglages de seuils de soutien sans qu'il soit nécessaire de reconstruire l'arbre. Comme FP-croissance [Han et al., 2000] et Féline [Cheung et Zaiane, 2003], l'algorithme proposé tombe dans les règles d'association Algorithmes d'exploration de caractérisation « Diviser pour mieux régner ». Le premier itemset-Trie est fragmenté en sous-essais conditionnels. En effet, étant donné un modèle appelé p, un arbre itemset-conditionnelle de Trie de p est construit, ce qui représente fidèlement toutes tions qui contiennent transac- motif p. Par exemple, compte tenu de la base de données de transaction de la figure 1, l'ensemble des 1-itemsets, avec leurs supports associés, est la suivante: <a / 3; b / 3; c / 4; f / 4; m / 3; p / 3>. Nous avons donc de tirer les années A, B et ainsi de suite itemset-essais conditionnels. Il est à noter que, contrairement à FP-croissance [Han et al., 2000] et placard [Pei et al., 2002] algorithmes, nous considérons que l'ordre lexicographique et nous considérons que dans une donnée conditionnelle Trie toutes les 1 itemset restants devraient être compris. Par exemple, dans les algorithmes mentionnés ci-dessus (à savoir, FP-croissance et Closet), la condition de Trie b ne comprend pas le 1-itemset {a} et de c exclura les deux {a} et {b}. Les auteurs, dans le but de découvrir que itemsets fermés, affirment qu'il n'y a pas besoin d'inclure le 1-itemset {a} dans celui de la b, puisque tous les itemsets fermés contenant {a} ont déjà été extraites pour Trie conditionnelle de l'un. Dans notre approche, nous cherchons à extraire itemsets fermés et leurs générateurs minimaux associés, à RNTI - E - 2 Une approche basée sur la sémantique de connexion Galois pour dériver générique ... construire leur structure ordonnée associée (à savoir, diagramme de Hasse). Étant donné que nous prévoyons de mener le processus d'extraction de manière parallèle, en attribuant à chaque processeur un sous-ensemble de l'ensemble des essais sous condition, chaque sous-Trie doit contenir une description exhaustive pour assurer la justesse de la découverte des itemsets fermée et pour réduire les coûts de communication inter-processeurs à vérifier itemsets inclusions. (A) (b) (c) acfm acfmp ABCFM (d) ABCFM b bf bc BCP (f) Roota / 3 bc fm / 1 c fm p / 2 Roota / 3 bc fm / 1 Roota / 3 c fm p / 2 b / 2 Roota / 3 bc fm / 1 f / 1 cp / 1 (e) Fig. 2 - (a) {a} est conditionnelle jeu d'éléments d'arborescence. (B) {ab} » s conditionnelle itemset-Trie. (C) {ap} » s conditionnelle itemset-Trie. (D) structure ordonnée associée à la 1-itemset {a}. (E) {b} est conditionnelle itemset-Trie. (F) structure ordonnée associée à la 1-itemset {b}. Exemple 2 Considérons la base de données de transaction donnée par la figure 1 (gauche). Ci-dessous, nous DES- CRIBE les structures ordonnées pour la construction minsup = 1. L'ensemble de 1-itemsets, avec leurs supports sociated as-, est définie comme suit: <a / 3; b / 3; c / 4; f / 4; m / 3; p / 3>. Ensuite, en commençant par itemset-Trie conditionnelle de l'un, représenté sur la figure 2 (a), nous pouvons trouver les associés itemset La liste: <b / 1; c / 3; f / 3; m / 3; p / 2>. De cette liste, on remarque que le 1-itemsets c, f et m sont aussi fréquentes que le 1-itemset a. Ils constituent donc un itemset fermé {} de ACFM avec un support égal à 2 et le 1-itemset {a} comme générateur minimal. Le 1-itemsets c, f et m ar e retiré de La. Puisqu'il est pas vide, nous devons aller récursive plus en profondeur et de construire les sous-tente, comme le montre la figure 2 (b et c), respectivement pour les 2-itemsets {ab} et {ap }. De Lab on découvre le itemset fermé {} ABCFM avec un support égal à 1 et le 2-itemset {ab} comme générateur minimal. Alors que de tour, on découvre le itemset fermé {} de acfmp avec le soutien égal à 1 et le 2-itemset {ap} comme générateur minimal. Le traitement de La fin car il n'y a pas plus d'éléments à manipuler. En sortie, le diagramme de Hasse local (associé à itemset-Trie conditionnelle du a) peut être établie progressivement. En effet, la première, les jeux d'éléments fermés {ACFM} et {} ABCFM en profondeur de la liste La permet de connecter, et la seconde pour connecter {acfm} et {} acfmp, comme représenté sur la figure 2 (d). L'algorithme doit traiter suivant la liste Lb: <a / 1; c / 2; f / 2; m / 1; p / 1>, extraite de la trie conditionnelle représentée sur la figure 2 (e). Nous pouvons vérifier facilement qu'aucun 1-itemset est si fréquent que b et {b} RNTI - E - 2 Ben Yahia et al. est un jeu d'éléments de fermeture. Étant donné que la liste reste à développer est pas vide, nous allons plus loin en profondeur et nous commençons par le 2-itemset {ab}. Lab est définie comme suit: <c / 1; f / 1; m / 1> et dont on découvre le itemset fermé {} ABCFM avec un support égal à 1 et le 2-itemset {ab} comme générateur minimal. Il n'y a pas plus d'exploration de cette liste car il est vide. Le itemset fermé {b} est connecté au itemset fermé {} ABCFM. Ensuite, nous devons nous attaquer Lbc qui est égale à <a / 1; f / 1; m / 1; p / 1>. Tout 1-itemset dans cette liste est si fréquente que {bc} et nous pouvons conclure que {bc} est un itemset fermé avec un support égal à 2 et ayant {bc} comme générateur minimal. La liste avec laquelle d'aller plus loin en profondeur reste inchangé. Nous avons respectivement à gérer CSLA, LBCF et LBCM, tout ce qui donne le itemset fermé {} ABCFM. Le itemset fermé {bc} est relié à celui de {} ABCFM. Ensuite, nous devons connecter {b} à {bc}. Ceci est effectué après un contrôle systématique si elles partagent un successeur immédiat commun, ce qui est le cas dans cet exemple. En fait, {bc} et {b} sont connectés respectivement à leur successeur immédiat qui est {} ABCFM. Voilà pourquoi nous devons supprimer le lien entre {b} et {} ABCFM. Le traitement des extrémités de la liste Lbc en lançant la liste LBCP, qui donne l'itemset fermé {bcp} avec un support égal à 1 et {} bcp comme générateur minimal. La structure ordonnée associée est illustrée sur la figure 2 (f). 3.2 Dérivation des bases génériques de règles d'association Le problème de la pertinence et de l'utilité des règles d'association extraites est d'impor- tance primaire. En effet, dans la plupart des bases de données réelles, des milliers et des millions même de règles de haute confiance sont générés parmi lesquels beaucoup sont redondantes. Ce problème a encouragé le dévelop- pement des outils pour la classification des règles en fonction de leurs propriétés, pour la règle de sélection selon des critères définis par l'utilisateur, et pour la visualisation de la règle. En ce qui concerne [Luxemburger, 1991] et [Guigues et Duquenne, 1986], nous considérons que, compte tenu d'une structure locale ordonnée, relation basée préséance ting représenta- ordonné itemsets fermés, bases génériques de règles d'association peuvent être dérivées d'une manière simple. Dans cette structure chaque itemset fermée est « décorée » avec sa liste associée des générateurs minimaux. En effet, AR représente « inter-noeud » implications, assorti d'une information statistique, à savoir, la confiance, à partir d'un sous-jeu d'éléments de fermeture-super-fermé-jeu d'éléments en commençant à partir d'un noeud donné dans une structure ordonnée. Inversement, ER sont implications « intra-noeud » extraites de chaque noeud dans la structure ordonnée. 4 Conclusion Nous avons présenté dans cet article une nouvelle structure de données pour extraire les itemsets fermés fréquents afin de générer des bases génériques de règles d'association. Les principales caractéristiques de cette structure sont. Tout d'abord une représentation compacte, puisque dans notre approche du nœud représente un itemset alors que dans d'autres approches, comme FP-Gr owth et CATS, un noeud ne représente qu'un seul attribut. En second lieu, un adapté pour une « Divide and Conquer » fermé itemsets approche d'extraction. Ensuite, nous avons proposé un algorithme pour construire des structures locales commandées à partir de laquelle il est possible d'obtenir des bases génériques de règles d'association. Maintenant, l'approche proposée est en cours d'expérimentation. Dans un proche avenir, nous prévoyons d'examiner les avantages potentiels de la mise en œuvre de l'approche proposée sur une machine MIMD (IBM SP2). En effet, les fils de la méthode de construction à un parallélisation naturel, en ce sens que chaque processeur d'une architecture parallèle peut construire localement sa structure ordonnée. Une fois que les structures locales sont construits, un processeur maître peut les fusionner pour dériver un ensemble de bases génériques de règles d'association. RNTI - E - 2 Une approche basée sur la sémantique de connexion Galois pour obtenir générique ... Références [Agrawal et Skirant, 1994] R. Agrawal et R. Skirant. algorithmes rapides pour les règles d'association minière. Dans Actes de la 20e Conférence internationale sur les très grandes bases de données, pages 478-499, Juin 1994. [Bastide et al., 2000] Y. Bastide, N. Pasquier, R. Taouil, L. Lakhal, et G. Stumme. Exploitation minière règles d'association non redondantes minimales en utilisant itemsets fermés fréquents. Dans Actes de la Conférence internationale DOOD'2000, Notes de cours en sciences informatiques, Springer-, pages 972-986 verlag, juillet 2000. [Brin et al., 1997] S. Brin, R. Motwani, et J. Ullman. Dynamique itemset comptage et les règles de cations impli-. Dans Actes SIGMOD, Conférence internationale sur la gestion des données, Tucson, Arizona, Etats-Unis, pages 255-264, 1997. [Cheung et Zaiane, 2003] W. Cheung et O.R. Zaiane. l'extraction progressive des motifs fréquents sans génération de candidat ou contrainte de soutien. Dans Actes du génie national septième inter-bases de données et applications Symposium (IDEAS 2003), Hong Kong, Chine, 16-18, Juillet 2003. [Ganter et Wille, 1999] B. Ganter et R. Wille. Analyse formelle de concepts. Springer-Verlag, Heidelberg, 1999. [Guigues et Duquenne, 1986] J.L. Guigues et V. Duquenne. Minimales d'families implica- tions d'un informatives tableau résultant de Données binaires. Mathématiques et Sciences Humaines, (95): 5-18, 1986. J. Han, J. Pei, et Y. Yin [Han et al., 2000]. Exploitation minière motifs fréquents sans génération de candidats. Dans Proceedings of the ACM-SIGMOD Intl. Conférence sur la gestion des données (SIGMOD'00), Dallas, Texas, pages 1-12, mai 2000. [Luxemburger, 1991] M. Luxemburger. de Implication un partielles de Contexte. Mathématiques et Sciences Humaines, 29 (113): 35-55, 1991. H. Manilla, H. Toinoven, et I. Verkamo [Manilla et al., 1994]. Des algorithmes efficaces pour les règles d'association disco-Vering. Dans AAAI sur Worshop Knowledge Discovery dans les bases de données, pages 181-192, Juillet 1994. [Pei et al., 2002] J. Pei, J. Han, R. Mao, S. Nishio, S. Tang, et D. Yang. Closet: Un algorithme effi- cace pour l'exploitation itemsets fermés fréquents. Dans Actes du SIGMOD DMKD'00, Dallas, TX, pages 21-30, 2002. [Stumme et al., 2001] G. Stumme, R. Taouil, Y. Bastide, N. Pasquier, et L. Lakhal. structuration intelligente et la réduction des règles d'association avec l'analyse formelle de concepts. Dans Actes de la Conférence KI'2001, Lecture Notes in Intelligence artificielle 2174, Springer-Verlag, pages 335-350, septembre 2001. [Zaki, 2000] M. J. Zaki. Génération de règles d'association non redondants. Dans Actes du 6e SIGKDD Conférence internationale sur la découverte de connaissances et d'exploration de données, Boston, MA, pages 34-43, Août 2000. Résumé. La croissance constante de la taille des données textuelles (ou transactionnelles) est un progrès-facteur clé pour plus des techniques d'extraction de connaissances aiguës, dont sont constamment mis au défi l'efficacité et de l'efficacité. Dans cet article, nous présentons une approche pour obtenir des bases génériques de règles d'association. L'approche proposée est la base sémantique de connexion Galois. Les principales caractéristiques de notre approche sont les suivants: d'abord, pour éviter les opérations d'E / S intensives, nous présentons une structure de données à base de Trie avancé pour stocker les relation d'entrée. En second lieu, nous utilisons une méthode « Divide and Conquer » pour réduire le coût de la construction de petites sous-structures partiellement ordonnées, dont nous retirons dans une association de façon simple des bases génériques. RNTI - E - 2