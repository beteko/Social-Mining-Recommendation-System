 actes_non_num\351rotes pdf Extraction de motifs fermés dans des relations n aires bruitées Loïc Cerf Jérémy Besson Jean François Boulicaut Université de Lyon CNRS INSA Lyon LIRIS UMR5205 F 69621 Villeurbanne France Prénom Nom liris cnrs fr Résumé L’extraction de motifs fermés dans des relations binaires a été très étudiée Cependant de nombreuses relations intéressantes sont n aires avec n > 2 et bruitées nécessité d’une tolérance aux exceptions Récemment ces deux problèmes ont été traités indépendamment Nous introduisons notre proposition pour combiner de telles fonctionnalités au sein d’un même algorithme 1 Introduction La fouille de relations binaires a été très étudiée via notamment les usages multiples des ensembles fermés fréquents Cependant il est courant que les données à traiter se représentent dans des relations n aires avec n ≥ 3 et il semble donc naturel de vouloir étendre le calcul de motifs fermés dans ce contexte Ji et al 2006 Jaschke et al 2006 Cerf et al 2008b Dans le cas des relations binaires calcul de 2 ensembles fermés ou concepts formels selon Ganter et al 2005 nous savons que le nombre et la qualité des motifs extraits sont déjà probléma tiques De nombreuses raisons e g une erreur de mesure peuvent mener à l’absence d’un couple dans la relation et un véritable motif donne lieu à plusieurs motifs fermés distincts et plus petits quand la quantité de bruit augmente le nombre de motifs fermés explose et leur pertinence se dégrade Cette situation empire dramatiquement lorsque l’arité de la relation à fouiller augmente Nous introduisons ici un algorithme de calcul de tous les motifs fermés ayant un nombre borné d’exceptions par élément de n’importe quel attribut sur n’importe quelle relation n aire Cet article est une version courte de Cerf et al 2008a 2 Notion de ET n ensemble fermé Soit D1 Dn les domaines de n attributs Soit R une relation n aire sur ces attributs i e R ⊆ D1 × · · · × Dn Appelons X un motif 〈X1 Xn〉 ∈ 2D 1 × · · · × 2D n ∀i = 1 n ∀e ∈ Di l’hyper plan de X sur e noté H X e est 〈X1 {e} Xn〉 0 X est le nombre de n uplets de X qui sont absents de R i e | X1 × · · · × Xn \ R| Un n ensemble fermé deR désigne l’extension naturelle de la notion de concept formel aux relations n aires quand n > 2 Un n ensemble fermé satisfait deux contraintes la contrainte dite de connexion et celle dite de fermeture X = 〈X1 Xn〉 vérifie la contrainte de connexion notée Ccx ssi ∀i = 1 n ∀e ∈ Xi 0 H X e = 0 X est dit fermé i e satisfait la contrainte Extraction de motifs fermés dans des relations n aires bruitées 1 2 3 1 2 3 1 2 3 A 1 1 1 1 1 1 1 B 1 1 1 1 1 1 C 1 1 1 1 1 1 D 1 1 1 1 1 1 α β γ TAB 1 – La relationRE ⊆ {A B C D} × {1 2 3} × {α β γ} notée Cfm ssi ∀i = 1 n ∀e ∈ Di \ Xi 0 H X e > 0 X est un n ensemble fermé ssi Ccx X ∧ Cfm X Les n ensembles fermés sont mal adaptés à la découverte de connaissance dans des re lations bruitées En effet la contrainte de connexion est en pratique trop forte et nous pro posons de l’affaiblir Soit �i i=1 n ∈ Nn des seuils de tolérance aux exceptions X vérifie la nouvelle contrainte de connexion CET cx ssi ∀i = 1 n ∀e ∈ Xi 0 H X e ≤ �i Etant donné un motif le seuil de tolérance aux exceptions �i est sur n’importe quel élément à l’intérieur du motif du ième attribut le nombre maximal de n uplets autorisés à être absents de la relation Lorsque ∀i = 1 n �i = 0 on a CET cx ≡ Ccx Pour définir un ET n ensemble fermé l’utilisation de CET cx nous conduit à renforcer la contrainte de fermeture X satisfait la nouvelle contrainte CET fm et est dit fermé ssi ∀i = 1 n ∀e ∈ Di \ Xi 0 H X e > �i Lorsque ∀i = 1 n �i = 0 on a CET fm ≡ Cfm X est un ET n ensemble fermé ssi CET cx X ∧ CET fm X Il s’agit donc de la généralisation d’un n ensemble fermé tolérant plus ou moins d’exceptions en fonction des seuils �i i=1 n Exemple 1 La Table 1 montre une relation ternaire notée RE Chaque ’1’ indique la pré sence dans RE du triplet correspondant Des exemples de 3 ensembles fermés dans RE sont 〈 A 1 2 3 α β 〉 〈 B 1 2 α γ 〉 et 〈 C 1 3 β γ 〉 Avec �1 = �2 = �3 = 1 XE = 〈 A B 1 α β γ 〉 est un exemple de ET 3 ensemble fermé dans RE En effet au cun de ses hyper plans ne contient plus de 1 triplet absent 0 H XE A = 1 0 H XE B = 0 0 H XE 1 = 1 0 H XE α = 0 0 H XE β = 0 et 0 H XE γ = 1 et il est fermé i e quelque soit l’élément que l’on ajouterait la contrainte CET cx serait violée e g si on lui ajoutait D on aurait 0 H XE 1 = 2 3 Exploiter les contraintes CET cx et CET fm Nous présentons les mécanismes de calcul efficace des ET n ensembles fermés Nous adoptons le principe d’un arbre d’énumération tel qu’il a été utilisé par exemple dans Cerf et al 2008b Il s’agit d’un arbre binaire où à chaque nœud un élément e est énuméré tous les motifs qui seront issus du fils gauche contiendront e alors que tous les motifs qui seront issus du fils droit ne le contiendront pas Si l’on peut être certain qu’une contrainte ne sera jamais vérifiée par les motifs issus du nœud courant on pourra procéder à un élagage Nous exploitons la contrainte de fermeture CET fm de cette manière puisqu’elle est anti monotone Cela signifie que si le plus grand motif qui pourrait être extrait à partir du nœud courant en ne suivant plus que des branches gauches ne la vérifie pas aucun motif issu de ce nœud ne la vérifie Une contrainte sera dite monotone cas e g de la contrainte de connexion CET cx si L Cerf et al lorsque le plus petit motif qui pourrait être extrait à partir du nœud courant en ne suivant plus que des branches droites ne la vérifie pas Dans ce cas implique qu’aucun motif issu du nœud courant ne la vérifie Pour de meilleures performances on effectue le test détaillé ci dessus avec un nœud d’avance i e plutôt que d’élaguer un nœud duquel ne découlerait aucun motif satisfaisant CET cx on va éviter de le générer en retirant au niveau de son père l’élément cor respondant de l’espace de recherche On parle alors de propagation Étant donné un nœud N appelons U = 〈U1 Un〉 le plus petit motif qui pourrait être extrait à partir de N borne in férieure et U ∪V le plus grand motif qui pourrait être extrait à partir de ce même nœud borne supérieure V = 〈V 1 V n〉 représente donc l’espace de recherche i e les éléments qu’il reste à énumérer Pour nous U et V sont matérialisés et chaque nœud N de l’arbre peut être identifié à l’aide de son couple U V Nous dirons que N représente l’ensemble des motifs compris entre U et U ∪ V i e {〈W 1 Wn〉 | ∀i = 1 n U i ⊆W i ⊆ U i ∪ V i} Soit un n ensemble X ∈ 2D 1 ×· · ·×2D n et un élément e ∈ Di i = 1 n pour simplifier X ∪{e} désignera le motif obtenu en ajoutant e à X i e 〈X1 Xi ∪ {e} Xn〉 De même nous écrirons e ∈ X ou nous parlerons du motif X \ {e} Règle 1 Élagage avec CET fm Si ∃i = 1 n et ∃e ∈ Di \ U i ∪ V i tel que 0 H U ∪ V e ≤ �i et ∀f ∈ U j 6=i 0 H U ∪ V ∪ {e} f ≤ �j Alors le nœud U V est élagué En effet aucun n ensemble qui serait issu de U V ne vérifie CET fm En effet tous peuvent être étendus avec l’élément e satisfaisant la prémisse de la règle c’est le cas du plus grand d’entre eux U ∪ V et CET fm est anti monotone Règle 2 Propagation avec CET cx Si ∃i = 1 n et ∃e ∈ V i tel que 0 H U e > �i ou ∃f ∈ U j 6=i 0 H U ∪ {e} f > �j Alors e est retiré de V i En effet aucun motif qui serait issu du nœud U V et qui contiendrait un tel élément e ne vérifie CET cx cas du plus petit d’entre eux U et CET cx est monotone Appliquer les Règles 1 et 2 à chaque nœud de l’arbre d’énumération permet d’extraire tous les ET n ensembles fer més et uniquement eux en évitant d’explorer de grandes parties de l’espace de recherche Cependant le coût de calcul lié à l’application de la Règle 1 est élevé En effet tous les élé ments de {e ∈ Di \ U i ∪ V i | i = 1 n} doivent être testés Or cet ensemble est très grand pour la grande majorité des nœuds qui sont près des feuilles Cet ensemble peut être réduit en remarquant que si l’un de ses éléments e ∈ Di \ U i ∪ V i satisfait 0 H U e > �i alors il ne peut jamais être utilisé pour déclencher le mécanisme d’élagage d’un nœud issue de U V La même observation est vraie si e satisfait ∃f ∈ U j 6=i tel que 0 H U ∪ {e} f > �j On peut donc se contenter de tester les éléments de S = 〈S1 Sn〉 où ∀i = 1 n Si = {e ∈ Di \ U i ∪ V i | 0 H U e ≤ �i ∧ ∀f ∈ U j 6=i 0 H U ∪ {e} f ≤ �j} Règle 3 Nouvelle règle d’élagage avec CET fm Si ∃i = 1 n et ∃e ∈ Si tel que 0 H U ∪ V e ≤ �i et ∀f ∈ U j 6=i 0 H U ∪ V ∪ {e} f ≤ �j Alors le nœud U V est élagué Un élément propagé par la Règle 2 n’est pas ajouté à S puisque sa propagation l’empêche d’appartenir à S En revanche à chaque fois qu’une branche droite de l’arbre d’énumération Extraction de motifs fermés dans des relations n aires bruitées est suivie l’élément e qui est énuméré est ajouté à S Comme U grandit en allant plus en profondeur dans l’arbre e risque par la suite de ne plus satisfaire la définition d’un élément de S On ajoute donc une règle pour purger S de ces éléments Règle 4 Purge de S Si ∃i = 1 n et ∃e ∈ Si tel que 0 H U e > �i ou ∃f ∈ U j 6=i 0 H U ∪ {e} f > �j Alors e est retiré de Si Notre algorithme baptisé ETM parcourt en profondeur l’espace de recherche Le nœud à la racine est 〈∅ ∅〉 〈D1 Dn〉 S est initialisé à 〈∅ ∅〉 A chaque nœud U V de l’arbre d’énumération l’élément e à énumérer est choisi et l’espace de recherche est partitionné en deux Les ET n ensembles fermés issus du nœud NG contiendront tous l’élément e tandis que ceux issus de ND ne le contiendront jamais Par appel récursif sur chacun de ces nœuds tous les ET n ensembles fermés représentés par U V sont extraits Entrée Un nœud U V de l’arbre d’énumération S tel que défini dans la Section 3 Sortie Les ET n ensembles fermés représentés par U V si Règle 3 ne s’applique pas alors si V = 〈∅ ∅〉 alors Sortir 〈U1 Un〉 sinon Choisir i e tel que i ∈ 1 n et e ∈ V i VG ← Règle 2 U ∪ {e} V \ {e} SG ← Règle 4 U ∪ {e} S ETM U ∪ {e} VG SG ETM U V \ {e} S ∪ {e} fin si fin si Algorithme 1 ETM Notez que si le choix de l’élément énuméré ne change pas la sortie d’ETM il influe énor mément sur la taille de l’arbre d’énumération parcouru et donc sur les temps d’extraction Faute de place nous ne détaillons ici ni la stratégie d’énumération choisie ni les mécanismes nécessaires à l’implémentation de ETM Cerf et al 2008a fournit plus de détails au lecteur intéressé Il en est de même pour la discussion de l’état de l’art Yang et al 2001 Pei et al 2001 Besson et al 2006 Cheng et al 2006 Poernomo et Gopalkrishnan 2007 4 Etude expérimentale Nous ne considérons ici qu’un protocole expérimental très simple Quatre n ensembles avec quatre éléments par attribut pouvant se recouvrir sont introduits de façon aléatoire dans un espace à trois ou quatre dimensions contenant 16 éléments par dimension La relation ainsi générée Rcachée est ensuite bruitée de façon uniforme i e chaque n uplet a la même probabilité p d’être mal encodé un n uplet absent de Rcachée est en fait présent ou vice versa La relation obtenue est ensuite fouillée avec ETM Toutes les extractions sont faites L Cerf et al 0 0 1 0 2 0 3 0 4 0 5 0 6 0 7 0 8 0 9 1 0 0 05 0 1 0 15 0 2 0 25 0 3 0 35 0 4 0 45 q u a lit y noise epsilon = 0 epsilon = 1 epsilon = 2 FIG 1 – Qualité des ET 4 ensembles fermés extraits avec � ∈ {0 1 2} 0 0 1 0 2 0 3 0 4 0 5 0 6 0 7 0 8 0 9 1 0 0 05 0 1 0 15 0 2 0 25 0 3 0 35 0 4 0 45 q u a lit y noise epsilon = 0 epsilon = 1 epsilon = 2 a Espace de taille 16 × 16 × 16 cachant des 3 ensembles de taille 4× 4× 4 0 0 2 0 4 0 6 0 8 1 0 0 05 0 1 0 15 0 2 0 25 0 3 0 35 0 4 0 45 q u a lit y noise epsilon = 0 epsilon = 1 epsilon = 2 epsilon = 3 b Espace de taille 32 × 32 × 32 cachant des 3 ensembles de taille 8× 8× 8 FIG 2 – Qualité des ET 3 ensembles fermés avec un même seuil � de tolérance aux exceptions et une même contrainte de taille minimale au moins deux éléments pour chaque attribut On note E l’ensemble des n uplets couverts par au moins un ET n ensemble fermé extrait On mesure alors la qualité de la collection de ET n ensembles fermés à l’aide de l’expression |Rcachée ∩ E| |Rcachée ∪ E| La Figure 1 représente les résultats obtenus sur la relation 4 aire plus ou moins bruitée Quelque soit le niveau de bruit p les ET 4 ensembles fermés extraits avec � = 1 sont de meilleur qualité que les 4 ensembles fermés exacts i e � = 0 Par exemple avec p = 0 25 la qualité des 4 ensembles fermés exacts est en deçà de 0 3 alors qu’elle atteint 0 65 lorsque � = 1 De plus on voit que � = 2 est excessif Cela s’explique par des contraintes de tailles mi nimales faibles La Figure 2 a représente les résultats obtenus sur la relation ternaire plus ou moins bruitée Cette fois le meilleur seuil � de tolérance aux exceptions est 0 Nous observons ici que prendre en compte l’aspect bruité des données revêt d’autant plus d’importance que l’arité est grande L’intérêt de la tolérance aux exceptions dans les relations ternaires est claire ment visible lorsque les 3 ensembles deRcachée sont plus grands Ainsi avec des 3 ensembles de taille 8 × 8 × 8 dans un espace de taille 32 × 32 × 32 la collection de ET 3 ensembles fermés extraits avec une contrainte d’au moins quatre éléments par attribut bénéficie de cette Extraction de motifs fermés dans des relations n aires bruitées tolérance Jusqu’à un niveau de bruit p de 0 15 � = 2 permet d’obtenir une qualité presque parfaite alors que à p = 0 15 la qualité de la collection de 3 ensembles fermés exacts est de 0 25 Avec p > 0 15 il est plus avantageux de fixer � à 3 Nous constatons donc que plus une relation est bruitée plus il est important de fixer un seuil élevé de tolérance aux exceptions En conclusion l’extraction complète de motifs fermés dans des relations n aires a récem ment été étudiée La présence de bruit dans ces données est d’autant plus désastreuse explosion du nombre de motifs extraits baisse de leur pertinence que l’arité n est grande Nous propo sons un algorithme qui étant donné une relation n aire extrait tous les motifs fermés tolérant un nombre borné d’exceptions par élément Ayant validé ETM sur des données synthétiques et réelles nous travaillons maintenant à son adaptation pour le calcul de quasi cliques dans des graphes dynamiques Références Besson J C Robardet et J F Boulicaut 2006 Mining a new fault tolerant pattern type as an alternative to formal concept discovery In ICCS pp 144–157 Cerf L J Besson et J F Boulicaut 2008a Calcul de motifs fermés tolérants aux exceptions dans des relations n aires bruitées In Research Report LIRIS Septembre 2008 12 pages Cerf L J Besson C Robardet et J F Boulicaut 2008b DATA PEELER Contraint based closed pattern mining in n ary relations In SDM Cheng H P S Yu et J Han 2006 AC Close Efficiently mining approximate closed itemsets by core pattern recovery In ICDM pp 839–844 Ganter B G Stumme et R Wille 2005 Formal Concept Analysis Foundations and Appli cations Volume 3626 Springer Jaschke R A Hotho C Schmitz B Ganter et G Stumme 2006 TRIAS An algorithm for mining iceberg tri lattices In ICDM pp 907–911 Ji L K L Tan et A K H Tung 2006 Mining frequent closed cubes in 3D datasets In VLDB pp 811–822 Pei J A K H Tung et J Han 2001 Fault tolerant frequent pattern mining Problems and challenges In DMKD Poernomo A K et V Gopalkrishnan 2007 Mining statistical information of frequent fault tolerant patterns in transactional databases In ICDM pp 272–281 Yang C U Fayyad et P S Bradley 2001 Efficient discovery of error tolerant frequent itemsets in high dimensions In SIGKDD pp 194–203 Summary The extraction of closed patterns in binary relations has been studied extensively Never theless many relations appear to be n ary with n > 2 and noisy need for fault tolerance Recently these two issues have been independently studied We introduce our proposal for the integration of both functionalities within a unique algorithm 