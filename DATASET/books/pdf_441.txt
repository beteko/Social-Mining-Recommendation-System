 Caractérisation et extraction de biclusters de valeurs similaires avec l’analyse de concepts triadiques Mehdi Kaytoue Sergei O Kuznetsov Amedeo Napoli Juraj Macko et Wagner Meira Jr Universidade Federal de Minas Gerais – Belo Horizonte – Brésil kaytoue dcc ufmg br contact principal Higher School of Economics – Moscou – Russie INRIA Nancy Grand Est LORIA – Nancy – France Palacky University – Olomouc – République Tchèque Résumé Le biclustering de données numériques est devenu depuis le début des années 2000 une tâche importante d’analyse de données particulièrement pour l’étude de données biologiques d’expression de gènes Un bicluster représente une association forte entre un ensemble d’objets et un ensemble d’attributs dans une table de données numériques Les biclusters de valeurs similaires peuvent être vus comme des sous tables maximales de valeurs proches Seules quelques méthodes se sont penchées sur une extraction complète i e non heuristique exacte et non redondante de tels motifs qui reste toujours un problème difficile tandis qu’aucun cadre théorique fort ne permet leur caractérisation Dans le pré sent article nous introduisons des liens importants avec l’analyse formelle de concepts Plus particulièrement nous montrons de manière originale que l’ana lyse de concepts triadiques TCA propose un cadre mathématique intéressant et puissant pour le biclustering de données numériques De cette manière les algo rithmes existants de la TCA qui s’appliquent habituellement à des données bi naires peuvent être utilisés directement ou après quelques modifications après un prétraitement des données pour l’extraction désirée 1 Introduction Le biclustering de données numériques a connu un essor considérable depuis le début des années 2000 apportant des réponses aux nouveaux challenges soulevés par l’analyse de don nées biologiques et plus particulièrement l’analyse de données d’expression de gènes A partir d’une table de données objets attributs le but du biclustering est de caractériser des sous tables d’intérêt selon les valeurs qu’elles comportent voir par exemple l’état de l’art de Madeira et Oliveira 2004 Ainsi un bicluster correspond à une paire composée d’un sous ensemble d’objets et d’un sous ensemble d’attributs Une telle paire se représente comme un rectangle dans la table de données modulo des permutations de colonnes et de lignes La table 1 est un exemple de telles données numériques chaque ligne représente un objet chaque colonne un attribut chaque case la valeur prise par l’objet en ligne pour l’attribut en colonne Cette table illustre également le bicluster {g1 g2 g3} {m1 m2 m3} représenté par un rectangle grisé 191 Caractérisation et extraction de biclusters de valeurs similaires avec l’ACF et l’ACT TAB 1 Exemple de données numé riques et d’un bicluster à valeurs si milaires avec θ = 1 m1 m2 m3 m4 m5 g1 1 2 2 1 6 g2 2 1 1 0 6 g3 2 2 1 7 6 g4 8 9 2 6 7 Il existe de nombreux types de biclusters selon la relation entre les valeurs de la sous table corres pondante Un cas trivial consiste à définir un biclus ter comme une sous table de valeurs égales Puisque le nombre de biclusters est exponentiel on est in téressé par des sous tables maximales par exemple {g1 g2 g3} {m5} De tels biclusters à valeurs constantes n’apparaissent que dans des situations idyl liques les données numériques sont généralement bruitées Ainsi divers travaux se sont penchés sur la caractérisation et l’extraction de biclusters à valeurs similaires voir les travaux de Madeira et Oliveira 2004 Besson et al 2007 Kaytoue et al 2011a par exemple Le rectangle de la table 1 illustre un tel bicluster {g1 g2 g3} {m1 m2 m3} où deux valeurs sont dites similaires si leur différence n’excède pas 1 De plus ce bicluster est maximal on ne peut pas ajouter d’objet ou d’attribut sans violer la condition de similarité Seules quelques méthodes abordent une extraction complète correcte et non redondante de tels motifs Besson et al 2007 Kaytoue et al 2011a connue pour être un problème difficile tandis qu’aucun cadre mathématique n’est précisément défini Dans cet article nous montrons que l’analyse de concepts formels ACF introduite par Ganter et Wille 1999 définit déjà dans un cadre mathématique clair tous les outils nécessaires pour une telle tâche L’ACF est connue pour être la base de l’extraction de motifs fermés dans les tables binaires ces motifs pouvant être vus comme des rectangles maximaux de 1 Il est évident que de telles notions se retrouvent dans les données numériques pour l’extraction de biclusters de valeurs similaires Le problème est de comprendre comment les notions de maximalité de biclusters et les opérateurs de fermeture en AFC se distinguent Dans cet article nous montrons que l’analyse de concepts triadiques ACT introduite par Lehmann et Wille 1995 – l’extension de l’ACF aux données binaires et relations ter naires – ainsi que l’échelonnage conceptuel interordinal – une discrétisation particulière sans perte d’information– sont deux outils suffisants pour traiter l’extraction souhaitée Ainsi cet article dresse de manière originale de nouveaux liens entre ACF et biclustering Pour cela nous détaillons deux méthodes basées sur l’ACT et l’échelonnage Ces méthodes s’accompagnent d’une meilleure interprétation et calculabilité des biclusters comparées aux approches exis tantes Pour une lecture plus aisée nous détaillons les avantages de notre approche au cours de l’article et en discussion Le papier est organisé comme suit Tout d’abord les notions de base de l’ACT sont pré sentées dans la section 2 Ensuite la section 3 pose formellement le problème d’extraction Suivent alors nos deux méthodes respectivement en section 4 et 5 Le papier se termine alors sur une série d’expérimentations et une discussion autour des perspectives de recherche 2 Analyse de concepts triadiques On rappelle les notions de l’analyse de concepts formels introduite par Ganter et Wille 1999 et de l’analyse de concepts triadiques ACT introduite par Lehmann et Wille 1995 Analyse de concepts formels Soient G un ensemble d’objets M un ensemble d’attributs et I ⊆ G×M une relation binaire G M I est appelé contexte formel ou contexte dyadique 192 M Kaytoue et al et g m ∈ I signifie que l’objet g “possède” l’attribut m Un contexte se représente par une table binaire où une case contient une croix × si l’objet en ligne possède l’attribut en colonne Les deux opérateurs de dérivation ′ définis par A′ = {m ∈M | ∀g ∈ A ⊆ G g m ∈ I} et B′ = {g ∈ G | ∀m ∈ B ⊆ M g m ∈ I} définissent une connexion de Galois entre l’ensemble des parties de G et l’ensemble des parties de M Un couple A B avec A′ = B et B′ = A est un concept formel ou concept dyadique A et B sont respectivement appelés l’extension et l’intension du concept Un concept se voit comme un rectangle maximal de croix dans la table binaire Analyse de concepts triadiques Cette extension su’utilise lorsqu’un objet possède un attribut dans certaines situations seulement par exemple à certains temps d’une cinétique Les données sont représentées alors par un contexte triadique noté G M B Y G M et B sont respectivement les ensemble d’objets d’attributs et de conditions et Y ⊆ G ×M × B g m b ∈ Y signifie que “L’objet g possède l’attribut m sous la condition b” Un concept triadique de G M B Y est un triplet A1 A2 A3 avec A1 ⊆ G A2 ⊆ M et A3 ⊆ B satisfaisant i A1 × A2 × A3 ⊆ Y et ii avec X1 ×X2 ×X3 ⊆ Y A1 ⊆ X1 A2 ⊆ X2 et A3 ⊆ X3 implique A1 = X1 A2 = X2 et A3 = X3 G M B Y est représenté par une table à 3 dimensions et i signifie qu’un tel concept est un cube rempli de croix tandis que ii caractérise la maximalité Pour un concept triadique A1 A2 A3 A1 est l’extension A2 l’intension et A3 le modus Pour décrire les opérateurs de dérivations il est plus aisé de représenter un contexte triadique par K1 K2 K3 Y Alors pour {i j k} = {1 2 3} j < k X ⊆ Ki et Z ⊆ Kj ×Kk les opérateurs de dérivation i sont définis par Φ X → X i { aj ak ∈ Kj ×Kk | ai aj ak ∈ Y pour tout ai ∈ X} Φ ′ Z → Z i {ai ∈ Ki | ai aj ak ∈ Y pour tout aj ak ∈ Z} Cette définition amène l’opérateur de dérivation K 3 et le contexte dyadique K 3 = 〈K3 K1 ×K2 Y 3 〉 De plus avec {i j k} = {1 2 3} Xi ⊆ Ki Xj ⊆ Kj et Ak ⊆ Kk les opérateurs de dérivation i j Ak sont donnés par Ψ Xi → X i j Ak i {aj ∈ Kj | ai aj ak ∈ Y for all ai ak ∈ Xi ×Ak} Ψ ′ Xj → X i j Ak j {ai ∈ Ki | ai aj ak ∈ Y pour tout aj ak ∈ Xj ×Ak} Les opérateurs Φ et Φ ′ sont qualifiés d’extérieurs et la paire qu’ils forment d’opérateur de fermeture extérieur De manière duale Ψ and Ψ ′ sont qualifiés d’intérieurs Les opérateurs de dérivations du contexte dyadique sont définis par KijAk = 〈Ki Kj Y ij Ak 〉 où ai aj ∈ Y ijAk ssi ai aj ak sont en relation Y for all ak ∈ Ak 3 Problème et notations Données En ACF une table de données numériques se définit comme un contexte multi valué G M W I oùG est un ensemble d’objets M un ensemble d’attributs à valeurs numériques W un ensemble de valeurs et I ⊆ G×M ×W une relation ternaire telle que g m w ∈ I aussi écritm g = w se lit “L’objet g prend la valeurw pour l’attributm” Dans la table 1 on a G = {g1 g2 g3 g4} M = {m1 m2 m3 m4 m5} W = {0 1 2 6 7 8 9} et m5 g2 = 6 Un bicluster est alors simplement une paire A B avec A ⊆ G et B ⊆M Biclusters et similarité Soient deux valeurs w1 w2 ∈ W et un paramètre dit de similarité θ ∈ R on dit que w1 est similaire à w2 ssi |w1−w2| ≤ θ et l’on note w1 'θ w2 Alors A B est un bicluster de valeurs similaires BVS ssi m g 'θ n h pour tout g h ∈ A et pour tout 193 Caractérisation et extraction de biclusters de valeurs similaires avec l’ACF et l’ACT m n ∈ B Un BVS est maximal BMVS ssi l’ajout soit d’un objet dans A soit d’un attribut dans B ne résulte pas en un BVS Dans l’exemple de la table 1 {g1 g2} {m2} est un BVS avec θ ≥ 1 Cependant il n’est pas maximal Avec 1 ≤ θ < 5 {g1 g2 g3} {m1 m2 m3} est maximal Pour θ = 7 {g1 g2 g3} {m1 m2 m3 m4 m5} est maximal Problème Le problème traité dans cet article est l’extraction de tous les BMVS d’un jeu de données numériques Nous souhaitons une extraction complète correcte et non redondante par opposition aux méthodes heuristiques Madeira et Oliveira 2004 Ce travail fait réponse à l’article de Besson et al 2007 Pour cela nous proposons dans la prochaine section une pre mière méthode ayant pour but d’extraire tous les BMVS pour n’importe quel paramètre θ Cette méthode établit de nouveaux liens entre le biclustering et l’ACF en général et l’ACT en parti culier La méthodologie est alors adaptée pour caractériser et extraire les biclusters maximaux pour un certain paramètre θ défini par l’utilisateur comme cela se fait habituellement 4 BMVS dans l’analyse de concepts triadiques Nous considérons le problème de la génération de tous les BMVS pour n’importe quel paramètre θ A partir d’un jeu de données G M W I l’idée est de construire un contexte triadique G M T Y où les deux premières dimensions restent respectivement les objets et les attributs du jeu de données tandis W est échelonné discrétisé en une dimension T Cette nouvelle dimension T est appelée la dimension d’échelonnage intuitivement cet ensemble donne les différents espaces de valeurs que chaque bicluster peut prendre Pour construire l’ensemble T nous utilisons l’échelonnage interordinal introduit par Ganter et Wille 1999 Il permet d’encoder dans 2T tous les intervalles de valeurs possibles de W Cette échelle permet de dériver un contexte triadique dont les concepts correspondent exactement aux BMVS Echelonnage interordinal Une échelle est une relation binaire J ⊆ W × T qui associe les éléments originaux de W à leur éléments dérivés de T Pour l’échelonnage interordinal on a T = {[min W w] ∀w ∈W} ∪ {[w max W ] ∀w ∈W} Ainsi w t ∈ J ssi w ∈ t La table 2 donne la représentation tabulaire de l’échelle interordinale pour la table numé rique 1 Intuitivement chaque ligne décrit une valeur tandis que les concepts formels – i e des rectangles maximaux de croix – représentent tous les intervalles de valeurs possibles de W Un exemple de concept dyadique est {6 7 8} {t6 t7 t8 t9 t10} ré écrit {6 7 8} {[6 8]} puisque {t6 t7 t8 t9 t10} représente l’intervalle [0 8]∩ [0 9]∩ [1 9]∩ [2 9]∩ [6 9] = [6 8] Contexte triadique dérivé Considérons la relation ternaire Y ⊆ G×M ×T Alors g m t ∈ Y ssi m g t ∈ J ou simplementm g ∈ t On appelle G M T Y le contexte tradique dérivé du jeu de données numériques G M W I La paire g1 m1 prenant la valeurm1 g1 = 1 permet de dériver les triplets g1 m1 t ∈ Y où t est un intervalle dans {[0 1] [0 2] [0 6] [0 7] [0 8] [0 9] [1 9]} L’intersection des intervalles de cet ensemble est la valeur originale elle même c à d m1 g1 = 1 une propriété basique de l’échelonnage interordinal Finalement la table 3 représente le contexte triadique dérivé dans son intégralité La toute première croix de cette table en haut à gauche représente le tuple g2 m4 t1 ce qui signifie que m4 g2 ∈ [0 0] 194 M Kaytoue et al TAB 2 Échelle interordinale de l’ensemble de valeurs W TAB 3 Contexte triadique dérivé de la table 1 avec l’échelle interordinale Nous présentons maintenant notre premier résultat principal il y a une bijection entre i l’ensemble de tous les BMVS de G M W I pour n’importe quel paramètre de similarité θ et l’ensemble des concepts triadiques de G M T Y Proposition 1 A B U avec A ⊆ G B ⊆ G et U ⊆ T est un concept triadique ssi A B est un BMVS pour un θ ≥ 0 et vice versa Preuve La preuve de cette proposition est donnée en annexe afin de faciliter la lecture Par exemple {g1 g2 g3} {m1 m2 m3} {t3 t4 t5 t6 t7 t8} est un concept triadique du contexte représenté par la table 3 Il correspond au BMSV {g1 g2 g3} {m1 m2 m3} avec θ = 1 θ = 1 car {t3 t4 t5 t6 t7 t8} est maximal c’est un modus qui correspond à l’intervalle [1 2] et 2− 1 = 1 est la longueur de cet intervalle Nous avons montré que l’extraction de BMVS requiert d’échelonner les données numé riques en un contexte triadique puis d’en extraire les concepts L’extraction des BMVS pour n’importe quel θ peut ne pas être efficace et générer un nombre non analysable de motifs ce qui reste un problème majeur dans le domaine de l’extraction de motifs en général Remar 195 Caractérisation et extraction de biclusters de valeurs similaires avec l’ACF et l’ACT TAB 4 Contexte triadique dérivé à l’aide des blocs de tolérance sur W et θ = 1 quons que les concepts A B U avec les ensemblesA B et C les plus grands représentent de grands biclusters de valeurs proches plus |A| et |B| sont grands plus la couverture du biclus ter est importante plus |U | est grand plus les valeurs du bicluster A B sont proches par les propriétés de l’échelonnage interordinal Ainsi l’extraction des k meilleurs BMVS peut être considérée avec des algorithmes existants comme DATA PEELER Cerf et al 2009 5 Extraction de BMVS pour un θ donné Nous considérons le problème d’extraction des BMVS avec l’ACT pour un θ donné Intui tivement considérons l’échelle appliquée à W du jeu de données numériques G M W I Cette échelle permet de transformer W en l’ensemble T et les sous ensembles de T carac térisent tous les intervalles de valeurs possibles de W Pour obtenir les BMVS pour un θ donné seulement nous n’avons pas besoin de considérer tous les intervalles de valeurs pos sibles mais seulement des intervalles maximaux de valeurs similaires Il s’agit là de blocs de tolérance Une fois ces intervalles obtenus le processus d’échelonnage reste le même et le contexte triadique résultant est traité avec un nouvel algorithme nommé TRIMAX Notons d’abord que 'θ est une relation de tolérance c à d réflexive symétrique mais non transitive Un bloc de tolérance de W est défini comme un ensemble maximal de valeurs si milaires deux à deux Dans la table 1 nous avons W = {0 1 2 6 7 8 9} et avec θ = 2 on obtient 3 blocs de tolérance soient {0 1 2} {6 7 8} et {7 8 9} Ces trois ensembles peuvent être renommés par leur enveloppe convexe sur R respectivement [0 2] [6 8] et [7 9] En effet n’importe quel nombre compris entre les valeurs minimale et maximale d’un bloc de tolérance est similaire à toutes les autres valeurs du bloc Pour dériver le contexte triadique nous utilisons l’ensemble des blocs de tolérance renom més par leur enveloppe convexe noté C et appliquons la même procédure que précédemment Continuons avec notre exemple nous avons C = {[0 1] [1 2] [6 7] [7 8] [8 9]} avec θ = 1 La table 4 illustre le contexte triadique dérivé avec cette nouvelle échelle et θ = 1 Contexte dyadique associé à un bloc de tolérance Considérons un bloc de tolérance c ∈ C Le contexte dyadique associé à ce bloc est donné par G M Z où z ∈ Z dénote les g m ∈ G×M tels que m g ∈ c Remarquons aussi que les blocs de tolérance sur W sont totalement ordonnés soient [v1 v2] et [w1 w2] deux blocs on a naturellement [v1 v2] < [w1 w2] ssi v1 < w1 Aussi les contextes dyadiques associés sont totalement ordonnés et nous utilisons dans la suite un en semble d’indices pour les caractériser Dans la table 4 les contextes pour les blocs 〈[0 1] [1 2] [6 7] [7 8] [8 9]〉 ont pour labels respectifs 〈1 2 3 4 5〉 196 M Kaytoue et al Nous pouvons maintenant présenter notre deuxième résultat le nouveau contexte triadique dérivé permet l’extraction des BMVS pour le seuil θ donné Dans ce cas cependant les algo rithmes existants de l’ACT ne peuvent pas être appliqués directement Par exemple dans la table 4 le concept triadique {g3} {m4} {3 4} correspond à un BVS qui n’est pas maxi mal Nous détaillons alors le nouvel algorithme TRIMAX ancré dans l’ACT et utilisant les opérateur de dérivation pour un calcul efficace des BMVS L’idée basique de TRIMAX repose sur les faits suivants Tout d’abord puisque chaque contexte dyadique est associé à un bloc de tolérance nous n’avons pas besoin de considérer les intersections de contextes ou des intervalles associés comme c’est le cas avec l’ACT classique De cette manière chaque contexte dyadique est fouillé séparément Cela assure que les concepts dyadiques résultant correspondent à des BVS mais n’assure pas la maximalité voir exemple précédent Nous devons alors vérifier si un concept dyadique est toujours un concept dans d’autres contextes c à d calculer son modus La proposition suivante formalise ces faits Proposition 2 Soit A B U un concept triadique du contexte G M C Y t q U est la fermeture extérieure du singleton {c} ⊆ C Si |U | = 1 A B est un BMVS Sinon A B est un BMVS ssi y ∈ [min U max U ] y < c t q A B 6= Ψ′y Ψy A B où Ψ ′ y et Ψy correspondent aux opérateurs de dérivations internes associés au yeme contexte dya dique Preuve Si |U | = 1 A B est un concept dyadique seulement dans un contexte corres pondant à un bloc de tolérance Par les propriétés de ces derniers A B est un BMVS Si |U | 6= 1 A B est un concept dyadique dans |U | contextes dyadiques Puisque les blocs de tolérance sont totalement ordonnés cela implique directement que le modus U est un intervalle [min U max U ] Ainsi si ∃y ∈ [min U max U ] t q A B = Ψ′y Ψy A B cela signifie que A B n’est pas un BMVS Description de l’algorithme TRIMAX TRIMAX commence par échelonner les données nu mériques pour produire plusieurs contextes dyadiques un par bloc de tolérance de W pour le θ donné L’ensemble de ces contextes dyadiques forme naturellement un contexte triadique Alors chaque contexte dyadique est fouillé séparément avec n’importe quel algorithme clas sique d’AFC ou algorithme d’extraction de motifs fermés et tous les concepts dyadiques sont extraits Pour chaque concept dyadique A B on calcule son modus Φ ′ A B c à d pour obtenir l’ensemble des contextes dyadiques dans lequel le concept apparait Si l’on obtient un singleton A B est un BMVS n’a pas et ne sera plus généré une autre fois Sinon A B est un concept dyadique dans d’autres contextes et peut alors avoir été généré plusieurs fois De fait A B n’est considéré que si l’on est sûr qu’il est généré pour la dernière fois Ce choix arbitraire est possible grâce à l’ordre total des blocs de tolérance Finalement nous devons encore vérifier que le concept dyadique correspond bien à un bicluster maximal c à d qu’il n’existe pas un contexte dans son modus où A B n’est pas un concept n’est pas maximal Proposition 3 TRIMAX produit une collection i complète ii correcte et iii non redon dante des BMVS pour un jeu de données numériques et un seuil de similarité donnés Preuve i et ii découlent directement de la proposition précédente L’affirmation iii est assurée par la deuxième condition if de l’algorithme un concept dyadique n’est considéré que s’il est extrait à partir du dernier contexte dyadique dans lequel il apparait 197 Caractérisation et extraction de biclusters de valeurs similaires avec l’ACF et l’ACT Algorithme 1 Pseudo code de l’algorithme TRIMAX input Données numériques G M W I seuil de similarité θ output Tous les BMVS de G M W I Soit C = {[ai bi]} l’ensemble totalement ordonné des blocs de tolérance sur W pour un θ Les i forment un ensemble d’indices forall [ai bi] ∈ C do Construire G M Zi t q g m ∈ Zi ⇔ m g ∈ [ai bi] forall G M Zi do Utiliser un algorithme d’AFC pour extraire ses concepts dyadiques A B forall concept dyadique A B dans le contexte G M Zi courant do if |Φ′ A B | = 1 then Afficher A B else if max Φ ′ A B = i then x← min Φ′ A B if y ∈ [x i[ s t A B 6= Ψ′y Ψy A B then Afficher A B 6 Expériences Données Nous explorons un jeu de données d’expression de gènes de l’espèce Laccaria bi color disponible au NCBI 1 Ces données mesurent l’expression de 11 930 gènes dans 12 situations biologiques Les valeurs d’expression varient entre 0 et 60000 Implémentation de TRIMAX TRIMAX est écrit en C++ Il utilise les structures de données de la librairie BOOST et l’implémentation originale de l’algorithme INCLOSE 2 pour l’extraction de concepts dyadiques A chaque itération de la boucle principale c à d pour chaque bloc de tolérance le contexte dyadique courant est produit nous ne générons pas le contexte triadique dans son intégralité par souci de consommation mémoire De fait le calcul du modus d’un concept dyadique nécessite de réaliser un échelonnage “à la volée” puisque l’on a pas accès aux autres contextes dérivés Les expériences ont été réalisées avec un processeur Intel CPU 2 54 Ghz et 8 GO de mémoire vive sous Ubuntu 11 04 Expériences Le but des expériences n’est pas de donner une évaluation qualitative de l’ap proche présentée mais plutôt de donner une évaluation quantitative en termes de temps d’exé cution En effet ce travail vise à montrer comment un type de bicluster existant peut être considéré au sein de l’AFC Pour une interprétation biologique le lecteur peut se tourner vers les articles de Besson et al 2007 Kaytoue et al 2011b Pour la plupart des expériences le jeu de données utilisé comporte un nombre croissant d’objets et les 12 attributs Les objets sont choisis aléatoirement une fois pour toutes afin de pouvoir comparer les différents résultats Nous faisons également varier le paramètre θ de la même manière dans toutes les expériences Nous nous intéressons aux aspects suivants i le nombre de BMVS ii le temps d’exécu tion iii le nombre de blocs de tolérance iv la densité du contexte triadique correspondant 1 ncbi nlm nih gov geo série GSE9784 avec de plus amples détails 2 sourceforge net projects inclose 198 M Kaytoue et al i Nombre de BMVS axe Y ii Temps d’exécution sec axe Y selon θ axe X et |G| axe Z selon θ axe X and |G| axe Z iii Nombre de blocs de tolérance axe Y iv Densité du contexte triadique axe Y selon θ axe X et |G| axe Z selon θ axe X et |G| axe Z v Comparaison du nombre de candidats vi Répartition du temps d’exécution par rapport au nombre de BMVS des procédures principales de TRIMAX en variant θ avec |G| = 500 avec θ = 33000 et |G| = 500 FIG 1 Expériences 199 Caractérisation et extraction de biclusters de valeurs similaires avec l’ACF et l’ACT d G M C Y = |Y | |G| × |M | × |C| un facteur important pour le calcul de concepts comme montré par Kuznetsov et Obiedkov 2002 v le nombre de candidats concepts dya diques comparé au nombre de BMVS et finalement vi le temps d’exécution des diverses procédures principales de l’algorithme TRIMAX à l’aide de l’outil GNU GPROF Résultats La figure 1 donne les résultats de nos expériences Une première observation du graphique i est la suivante le nombre de biclusters est le plus important pour une valeur de θ autour de 30000 Une première explication est que 30000 est la médiane des valeurs de W qui contient presque tous les multiples de 100 de l’intervalle [0 60000] Les temps d’exécution du graphique ii montrent le même comportement Ces résultats se comprennent à l’aide des graphiques iii et iv Dans iii le nombre de blocs de tolérance maximal est atteint quand θ = 0 et au contraire quand θ = max W alors |C| = 1 Maintenant observons le gra phique iv La densité suit un comportement inverse quand θ = 0 la densité tend vers 0% quand θ = max W la densité vaut exactement 100% Ces deux attitudes duales du nombre de blocs et de la densité expliquent le pire cas en terme de nombre de biclusters et de temps d’exécution cette explication n’étant pas connue avec les approches précédentes d’extraction de BMVS Une autre explication se découvre à l’aide du graphique v et est propre à notre mé thode Sont comparés sur cette figure le nombre de candidats et le nombre de BMVS Là aussi le pire cas est atteint quand θ ' 30000 Observons maintenant le graphique vi la procé dure la plus couteuse est le calcul du modus L’explication est que les modus sont calculés avec un échelonnage à la volée C’est là le point faible de l’algorithme En pratique cepen dant un analyste n’est pas intéressé par l’ensemble des biclusters et définit des contraintes comme des tailles minimales ou maximales sur le nombre d’objets d’attributs etc C’est là qu’est la force de TRIMAX nombre de ces contraintes peuvent être évaluées sur les candidats avant de calculer leur modus Ces expériences ne sont pas détaillés ici mais les résultats sont prometteurs Par exemple avec θ = 33000 |G| = 500 et la contrainte 10 ≤ A ≤ 40 TRI MAX ne produit que 5332 BMVS en 2 secondes comparés aux 104226 biclusters extraits en 16 secondes sans contraintes Cet aspect modulaire est intéressant pour prendre en compte de nouvelles contraintes selon la nature de l’algorithme d’extraction de concepts utilisé au cœur de TRIMAX Comparaison avec les méthodes existantes Deux méthodes existantes de la littérature consi dèrent le même problème l’algorithme NBS MINER de Besson et al 2007 et l’algorithme IPS de Kaytoue et al 2011a basé sur les structures de patrons intervalles en AFC Par manque de place nous ne détaillons pas ces méthodes NBS MINER et IPS ont étés implémentés en C++ également comme décrits dans leur article respectif Il s’avère que NBS MINER ne passe pas à l’échelle comme le laissent entendre ses auteurs IPS montre un meilleur pas sage à l’échelle mais est largement devancé par TRIMAX quand le nombre d’objets croit par exemple au dessus de 500 avec les données de ces expériences Le problème de IPS est qu’il doit calculer des blocs de tolérance pour chaque motif candidat alors que TRIMAX ne fait cette tâche qu’une seule fois La limite de la comparaison entre IPS et TRIMAX est le manque d’un algorithme efficace pour le calcul de blocs de tolérance sur un ensemble d’intervalles et non sur un ensemble de nombres comme pour TRIMAX qui est une tâche bien plus aisée 200 M Kaytoue et al 7 Conclusion Nous nous sommes intéressés au biclustering de données numériques avec l’ACF et avons montré comment les BMVS peuvent être caractérisés et extraits avec l’ACT qui se révèle être un cadre formel riche et associé à des outils existants et performants Nous avons éclairé quelques liens entre maximalité des BMVS et opérateurs de dérivations en ACT Après avoir “augmenté” les données d’une dimension un bicluster est représenté par un concept triadique son extension et son intension donnent sa couverture dans les données son modus donne son espace de valeurs Ces trois ensembles sont maximaux De plus la notion très connue de concept fréquent prend un sémantique nouvelle au regard de la similarité Par exemple soit A B C un concept triadique et A B son bicluster correspondant plus |C| est élevé plus les valeurs du bicluster sont proches La méthode peut aussi être adaptée aux jeux de don nées numériques n aires la fouille de BMVS à n dimensions peut être réalisée avec l’analyse de concepts n + 1 adiques pour lequel il existe un algorithme DATA PEELER Nous nous sommes aussi intéressés au problème plus classique de l’extraction de BMVS avec un θ donné et TRIMAX se révèle être meilleur que ses concurrents Cet algorithme est totalement modu laire divers algorithmes d’extraction de concepts dyadiques peuvent être utilisés en son cœur De nombreuses contraintes sur les biclusters peuvent être évaluées avant le calcul du modus à l’aide d’algorithmes d’extraction de motifs fermés existants TRIMAX peut être distribué ai sément sur plusieurs cœurs de calculs puisque que chacune de ses itérations est indépendante Ce sont là nos perspectives de recherche i le calcul des k meilleurs BMVS ii l’extension aux données multi dimensionnelles et enfin iii la parallélisation des calculs Références Besson J C Robardet L D Raedt et J F Boulicaut 2007 Mining bi sets in numerical data In S Dzeroski et J Struyf Eds KDID Volume 4747 of Lecture Notes in Computer Science pp 11–23 Springer Cerf L J Besson C Robardet et J F Boulicaut 2009 Closed patterns meet n ary relations TKDD 3 1 Ganter B et R Wille 1999 Formal Concept Analysis Springer Kaytoue M S O Kuznetsov et A Napoli 2011a Biclustering numerical data in formal concept analysis In P Valtchev et R Jäschke Eds ICFCA Volume 6628 of LNCS pp 135–150 Springer Kaytoue M S O Kuznetsov A Napoli et S Duplessis 2011b Mining gene expression data with pattern structures in formal concept analysis Inf Sci 181 10 1989–2001 Kuznetsov S O et S A Obiedkov 2002 Comparing performance of algorithms for genera ting concept lattices J Exp Theor Artif Intell 14 2 3 189–216 Lehmann F et R Wille 1995 A triadic approach to formal concept analysis In ICCS Volume 954 of LNCS pp 32–43 Springer Madeira S et A Oliveira 2004 Biclustering algorithms for biological data analysis a survey IEEE ACM Transactions on Computational Biology and Bioinformatics 1 1 24– 45 201 Caractérisation et extraction de biclusters de valeurs similaires avec l’ACF et l’ACT A Annexe preuve de la proposition 1 Nous devons tout d’abord introduire ce qui suit Par soucis de simplicité on considère W comme l’ensemble de tous les entiers compris dans le jeu de données numériques c à d W = {0 1 2 3 4 5 6 7 8 9} avec notre exemple Cela ne change en rien la preuve Valeur échelle et relation d’échelonnage On appelle valeur d’échelle s = q − r avec r = min W et q = max W La relation d’échelonnage est la relation binaire J ⊆ W × T où T = {t1 t2s+1} avec r ≤ w ≤ q et 〈w ti〉 ∈ J ssi i ∈ [w− r+ 1 w− r+ 1 + s] Il s’agit là d’une autre manière de définir l’échelonnage interordinal Base Eθw On introduit Eθw ⊆ T t q Eθw = [tw+θ−r+1 tw−r+1+s] pour un θ et w ∈ W donné Par exemple E12 = [t2+1−0+1 t2−0+1+9] = [t4 t12] Proposition 1 wb = m g 'θ n h = wc ssi 〈g m〉 ∈ Y 12Eθb et 〈h n〉 ∈ Y 12Eθb Preuve Soient Eb Ec ⊆ T et wc ≥ wb Par définition g m ∈ Y 12Eθb ssi m g t sont en relation Y pour tout t ∈ Eθb On obtient alors [twb−r+1 twb−r+1+s] = Eb ⊇ Eθb = [twb+θ−r+1 twb−r+1+s] qui est direct On doit alors montrer que h n ∈ Y 12Eθb est vrai On a alors [twc−r+1 twc−r+1+s] = Ec ⊇ Eθb = [twb+θ−r+1 twb−r+1+s] ssi wc − wb ≤ θ qui est la définition de 'θ On peut alors déduire le corollaire suivant wc−wb ≤ θ ssiEb∩Ec ⊇ Eθb et wc−wb = θ ssi Eb ∩ Ec = Eθb Nous pouvons alors prouver la proposition 1 Reformulation de la Proposition 1 〈A1 A2 U〉 avec A1 ⊆ G A2 ⊆ M et U ⊆ T est un concept triadique ssi A1 A2 est un BMVS pour un certain θ ≥ 0 De plus θ = s− |U |+ 1 Preuve Soit U = Eθb et le contexte dyadique Y 12U = Y 12 Eθb pour un certain wb A l’aide de l’opérateur de fermeture du contexte dyadique Ψ ′ Ψ A1 on obtient A1 A2 De la définition d’un concept triadique on sait que A1 ⊆ B1 implique A1 = B1 cela est vrai pour A2 également De la définition d’un BMVS on sait que 〈A1 A2〉 est maximal s’il n’existe pas 〈B1 B2〉 t q B1 ⊇ A1 cela tient aussi pour A2 Il est alors clair que ces deux ensembles sont maximaux par définition et nous avons le même contexte dyadique Y 12U = Y 12 Eθb Intéressons nous au contexte dyadique Y 12U = Y 12 Eθb Avec |U | = |Eθb| = |[twb+θ−r+1 twb−r+1+s]| on observe que |U | = s − θ + 1 qui donne θ = s − |U | + 1 Finalement U est maximal c’est un modus et Eθb est maximal également puisque wc − wb ≤ θ ssi Eb ∩ Ec ⊇ Eθb Les faits de cette preuve mènent à un bijection entre l’ensemble des BMVS et l’ensemble des concepts triadiques Summary Biclustering numerical data became a popular data mining task in the beginning of 2000’s especially for analysing gene expression data A bicluster reflects a strong association between a subset of objects and a subset of attributes in a numerical object attribute data table So called biclusters of similar values can be thought as maximal sub tables with close values Only few methods address a complete correct and non redundant enumeration of such patterns which is a well known intractable problem while no formal framework exists In this paper we intro duce important links between biclustering and formal concept analysis More specifically we originally show that Triadic Concept Analysis TCA provides a nice mathematical framework for biclustering with a better algorithmic scalability over existing methods 202 