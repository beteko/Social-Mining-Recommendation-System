article_egc docmise œuvre méthodes fouille données spatiales alternatives performances nadjim chelghoum karine zeitouni laboratoire prism université versailles avenue etats 78035 versailles cedex france nadjim chelghoum prism karine zeitouni prism résumé fouille données spatiales nécessite analyse interactions espace interactions peuvent matérialisées tables distances ramenant ainsi fouille données spatiales analyse multi tables méthodes fouilles données traditionnelles considèrent seule table entrée chaque tuple observation analyser simples jointures entre tables résoud problème fausse résultats raison comptage multiple observations proposons trois alternatives fouille données multi tables cadre fouille données spatiales première consiste interroger volée différentes tables modifie algorithmes existants seconde optimisation première calcule jointures adapte algorithmes existants troisième réorganise données table unique complétant joignant table analyse données présentes autres tables ensuite applique algorithme standard modification article présente trois alternatives décrit implémentation classification supervis compare performance positionnement problème fouille données spatiales aujourd domaine identifié fouille données besoin exploitation décisionnel données caractère spatial produites importées accumulées susceptibles délivrer informations connaissances moyen outils exploratoires zeitouni principale caractéristique considère relations spatiales appellera voisinage egenhofer relations origine implicites nécessitent jointures coûteuses critères spatiaux exhibées avons proposé travaux antérieurs matérialiser utilisant structure secondaire appelée index jointure spatial zeitouni calculer relation spatiale exacte entre localisations collections objets spatiaux stocker table objet1 relation spatiale objet2 permet pallier problème jointures spatiales moment analyse néanmoins cette organisation directement analysée méthodes fouilles données celles considèrent données entrée table unique chaque tuple cette table constitue observation individu analyser trouve alors confronté problème exploiter telles quelles données organisées plusieurs tables possible ramener seule table joignant différentes tables initiales cette jointure dupliquer tuples observations analyser liaison objets œuvre méthodes fouille données spatiales voisins fausse résultats méthodes fouille données raison multiple comptage observations article propose trois autres alternatives fouille données multi tables cadre fouille données spatiales première consiste interroger volée trois tables appel requêtes comprenant jointures agrégats chaque nécessaire seconde effectue toutes jointures entre différentes tables modifie algorithmes classiques évitant comptages multiples tuples revient optimiser première méthode troisième transforme structure multi tables table unique manière dupliquer observations applique ensuite méthode fouille données classique décrivons section trois alternatives section expérimentations tests performances seront présentés suivis discussion conclusion solutions proposées comme souligné précédemment introduction index jointure spatial fouille données spatiales grand avantage ramener cette dernière fouille données multi tables cette nouvelle organisation données directement exploitable méthodes fouilles données dernières considèrent données entrée table unique récemment travaux fouille données relationnelles abordé problème fouille données multi tables dzeroski appuyant programmation logique inductive inconvénient utilisation nécessite transformation coûteuse données relationnelles ensemble faits exprimés logique ordre place proposons trois alternatives fouille données multi tables cadre fouille données spatiales elles détaillées dessous alternative interroger volée différentes tables contrairement méthodes classiques méthode proposée prend entrée trois tables table objets analyser tables objets voisinage index jointures spatiaux chaque attribut analyser attribut voisinage algorithme appel double jointure entre table faits index table voisinage réside modification apporter algorithmes existants sinon applique algorithme classique modification exemple algorithme utilisant cette alternative donné chelghoum défaut cette solution temps exécution dégrade augmentation volume données requêtes jointures coûteuses invoquées boucle multipliant accès tables amené proposer autre alternative présentons dessous alternative matérialiser jointures cette alternative consiste effectuer toutes jointures entre trois tables évite multiplication requêtes jointures première alternative cependant résultat jointures duplication objets analyse oblige modifier algorithmes fouille données prendre compte cette duplication calculs compte observation seule cette alternative avantage rapide précédente grâce matérialisation jointures chelghoum faisons remarquer alternatives spécifiques fouille données spatiales appliquent multi tables général elles présentent néanmoins inconvénient pouvoir utiliser outils fouille données existants adaptation faire chaque algorithme alternative réorganiser données seule table ramener table unique effectuant jointures trois tables dupliquer objets compléter joindre table analyse données présentes autres tables propose opérateur croisement défini dessous principe générer chaque valeur attribut table attribut table résultat application préalable opérateur avantage éviter duplication objets permettre ensuite utilisation importe quelle méthode fouille données moindre modification définition opérateur croisement soient trois tables celles soulignées telles attributs qualitatifs leurs valeurs distinctes ensemble fonctions agrégats croisement table ayant schéma suivant p_b11 p_b1k1 p_bm1 p_bmkm p_b11 p_b1k1 p_bm1 p_bm2 p_bmkm p_bij valeur nulle sinon table correspondances pondérées relie table faits analyser table comprenant dimensions considérer opérateur recommandé lorsque attributs comportent assez valeurs distinctes propriété opérateur croisement résultat comporte toujours comme partie gauche table intégralité duplication tuples celle complétée partie droite poids dimensions provenant figure arrive couramment données relationnelles table correspondance traduit liens cardinalité opérateur comme moyen préparation données relationnelles fouille données faisons remarquer tuple valeur attribut avoir plusieurs liens poids éventuellement différents valeur p_bij résultat devant unique avons introduit fonctions agrégats calculer seule valeur p_bij inexistence valeur nulle remplace cette fonction tuples ayant correspondant complétés valeurs nulles comme jointure externe gauche récemment opérateur unpivot implémenté modules extraction transformation chargement entrepôt données oracle9i autre forme opérateur unpivot proposée graefe différence entre opérateur croisement avons proposé opérateur unpivot premier contrairement second prend entrée trois tables intègre fonctions œuvre méthodes fouille données spatiales agrégats répond notre problématique expression opérateur croisement unpivot oracle possible donne formule suivante croisement unpivot unpivot unpivot cependant implémentation directe opérateur évite multiples jointures plusieurs attributs ainsi stockage résultats intermédiaires unpivot expérimentations performances analyse sécurité routière avons testé trois alternatives précédentes objectif construire modèle prédictif recherchant correspondances entre accidents autres couches thématiques comme réseau tissu urbain expérimentations présentons dessous porteront application alternatives décrites article spécifique arbre décision spatial précisément avons appliqué alternatives méthode breiman générant ainsi arbre décision spatial tableau dessous résume coûts exécution seconde chacune alternatives expérimentations effectuées équipée processeur pentium implémentation réalisée environnement oracle algorithmes correspondent respectivement alternatives phase correspond étape transformation préalable données autrement matérialisation jointure alternative application opérateur croisement alternative phase représente étape construction arbre décision tests visent comparer performances chacune alternatives avons retenu trois critères taille table cible taille table voisin taille table correspondance index jointures spatial donne temps exécution trois algorithmes fonction taille table cible analyse résultats montre temps exécution algorithme nettement important algorithmes jointures répétitives coûteuses appelées calculs pénalisent algorithme exemple chaque combinaison classe valeur attribut algorithme plusieurs jointures invoquées constate également algorithme moins performant algorithme augmentation volume données comparativement résultats jointures suite opérateur croisement arriver lorsque valeurs distinctes nombreuses entre elles liées table analyse cette baisse constatée phase préparation données phase1 phase pratiquement équivalente entre algorithmes conclusion article montre comment traduire problème fouille données spatiales problème fouille données multi tables ensuite ramener cette fouille multi table problème fouille données table grâce opérateur croisement défini grand avantage permettre utilisation importe chelghoum algorithme outil fouille données clustering règles associations version détaillée article donnée prism recherche rapports avons proposé analysé trois alternatives fouilles données multi tables application méthode arbre décision spatial décrite leurs performances exposées résultats obtenus prototype implémenté confirment efficacité notre approche néanmoins tests effectués peuvent guider recommandation autre alternatives ainsi lorsque avoir flexibilité appliquer importe outil algorithme fouille donnée utilisation préalable opérateur croisement préconisée algorithme constitue méthode naïve beaucoup coûteuse temps exécution évidemment éviter matérialisation jointure accompagne modification algorithmes hormis inconvénient apparaît rapide pistes faire évoluer méthodes envisagées optimisation classique spatial pourrait utiliser préparations calculs graefe faudra mesurer précisément considérant prétraitements comptages préalables pourraient inspirer optimisation autres méthodes fouille données complexes comme règles association egalement perspectives extension opérateur cadre schéma entrepôt données plusieurs tables liées étoile amènerait considérer index multidimensionnels place index jointure guidé travail départ problème fouille données spatiales cette recherche couvrir problèmes communs fouille données complexes organisation temps exécution 20000 20000 40000 60000 80000 100000 10000 15000 20000 25000 30000 35000 durée algo1 durée algo3 durée algo2 temps exécution fonction taille table cible taille objets taille objets taille objets durée totale durée totale durée phase durée phase durée totale durée phase1 durée phase2 16860 20180 24799 20180 35205 15574 27054 48403 21892 53631 70020 29810 74302 88320 œuvre méthodes fouille données spatiales références breiman breiman friedman olshen stone classification regression trees wadsworth brooks montery california chelghoum chelghoum zeitouni decision multi layered spatial joint international symposium geospatial theory processing applications ottawa canada dzeroski dzeroski lavrac relational mining springer egenhofer egenhofer sharma topological relations between regions international symposium singapore june1993 springer verlag graefe graefe fayyad chaudhuri efficient gathering sufficient statistics classification large databases proceedings fourth international conference knowledge discovery mining press august knobbe knobbe siebes wallen daniel multi relational decision induction proceedings prague czech republic septembre lefébure lefébure venturi mining eyrolles oracle9i oracle9i warehouse builder transformation guide release windows b10658 february oracle corporation quinlan quinlan induction decision trees machine learning valduriez 19987 valduriez indices transactions database systems zeitouni zeitouni fouille données spatiales revue internationale géomatique numéro spécial edition hermès sciences avril zeitouni zeitouni aufaure indices spatial mining workshop temporal spatial spatio temporal mining lecture notes artificial intelligence springer france september summary spatial mining requires analysis object interactions within space these interactions materialized using distance tables reducing spatial mining multi table analysis however conventional mining algorithms consider input table observation classical joins between these tables doesn solve problem mislead results because multiple counting duplicated observations propose three alternatives multi table mining context spatial mining first makes modification classification algorithm order consider those tables second optimization first approach computes operations adapts classification algorithm third organizes unique table complementing joining target table relevant other tables applies standard mining algorithm article presents these three alternatives describes their implementation supervised classification compares their performances