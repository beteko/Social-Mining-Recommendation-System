 Closed set based Discovery of Representative Association Rules Revisited José L Balcázar Cristina Tîrnăucă Departamento de Matemáticas Estadística y Computación Universidad de Cantabria Santander Spain {joseluis balcazar cristina tirnauca} unican es Abstract The output of an association rule miner is often huge in practice This is why several concise lossless representations have been proposed such as the “essential” or “representative” rules We revisit the algorithm given by Kryszkiewicz Int Symp Intelligent Data Analysis 2001 Springer Verlag LNCS 2189 350–359 for mining representative rules We show that its output is some times incomplete due to an oversight in its mathematical validation and we propose an alternative complete generator that works within only slightly larger running times 1 Introduction Association rule mining is among the most popular conceptual tools in the field of Data Mining We are interested in the process of discovering and representing regularities between sets of items in large scale transactional data Syntactically the association rule representation has the form of an implication X → Y however whereas in Logic such an expression is true if and only if Y holds whenever X does an association rule is a partial implication in the sense that it is enough if Y holds most of the times X does To endow association rules with a definite semantics we need to make precise how this intuition of “most of the times” is formalized There are many proposals for this formaliza tion One of the frequently used measures of intensity of this kind of partial implication is its confidence the ratio between the number of transactions in which X and Y are seen together and the number of transactions that contain X In most application cases the search space is additionally restricted to association rules that meet a minimal support criterion thus avoid ing the generation of rules from items that appear very seldom together in the dataset formal definitions of support and confidence are given in Section 2 1 Many association rule miners exists Apriori see Agrawal et al 1996 being one of the most widely discussed and used The major problem shared by all mining algorithms is that in practice even for reasonable support and confidence thresholds the output is often huge Therefore several concise lossless representations of the whole set of association rules have been proposed These representations are based on different notions of “redundancy” In one of these a rule is redundant if it is possible to compute exactly its confidence and support from other information such as the confidences and supports of other informative rules see Closed set based Discovery of Representative Association Rules Revisited Luxenburger 1991 Kryszkiewicz 2002 Hamrouni et al 2008 this is a quite demanding property We settle for a weaker version proposed in several works informally in that version a rule is redundant with respect to another one if its confidence and support are always greater in any dataset To avoid this redundancy exactly one notion has been identified in several sources namely the representative rules precise definitions and references are given below We focus in this paper on the main results of Kryszkiewicz 2001 where a purportedly faster algorithm to construct representative rules is given and show by an example that that algorithm is not guaranteed to always output all representative rules because it is based on a property that does not hold in general namely the characterization of the frequent closed sets that admit a decomposition into representative rules misses some such sets We propose an alternative complete characterization leading us to the proposal of a first alternative algorithm that is guaranteed to output all the representative rules we pre compute for each closed set some parameters that depend on the confidence and support thresholds and then use the above mentioned new characterization to generate all representative rules Compared to the previous potentially incomplete algorithm in Kryszkiewicz 2001 this algorithm guaranteed to be complete has a main drawback in Kryszkiewicz 2001 the internal local parameters only depend on the support threshold but in our algorithm these parameters depend also on confidence Therefore each time a new confidence threshold is introduced by the user the algorithm has to redo all computations Thus we provide a second algorithm composed of two parts the first one is a pre processing phase dependent only on support in which a subdivision of the interval 0 1] is associated to each closed itemset and the second part uses this partition to determine for a given value of the confidence threshold which are those sets that can generate representative rules There are a couple of subtle differences between one of the usual definitions of association rule the one we employ and the one in Kryszkiewicz 2001 First we do allow having rules with empty antecedent clearly all of them have confidence equal to the normalized support of the consequent Moreover we do not require the inequalities to be strict when imposing a given support and confidence threshold This is just a small detail that comes handy when the user is interested in obtaining the set of all representative rules of confidence 1 However we have carefully tuned all our argumentations in such a way that these differences are not relevant for instance we have chosen a counterexample that invalidates Property 9 of Kryszkiewicz 2001 independently of which of the two definitions is used The article is structured as follows In Section 2 we introduce the basic notions and nota tions that will be used throughout the paper and part of the contents of Kryszkiewicz 2001 and we show that the algorithm provided there is not guaranteed to always provide the whole set of representative rules In Section 3 we define new parameters and discuss their usefulness in generating the set of all representative rules providing also efficient algorithms for this task Section 4 contains a comparison of our approach with the one in Kryszkiewicz 2001 on some datasets Concluding remarks and further research topics are presented in Section 5 2 Preliminaries A given set of available items U is assumed subsets of it are called itemsets We will denote itemsets by capital letters from the end of the alphabet and use juxtaposition to denote union as in XY The inclusion sign as in X ⊂ Y denotes proper subset whereas improper J L Balcázar and C Tîrnăucă inclusion is denoted X ⊆ Y For a given dataset D consisting of n transactions each of which is an itemset labeled with a unique transaction identifier we define the support sup X of an itemset X as the ratio between the cardinality of the set of transactions that contain X and the total number of transactions n An itemset X is called frequent if its support is greater than or equal to some user defined threshold τ ∈ 0 1] Given a set X ⊆ U the closure X of X is the maximal set with respect to the set inclusion Y ⊆ U such that X ⊆ Y and sup X = sup Y It is easy to see that X is uniquely defined We say that a set X ⊆ U is closed if X = X Closure operators are characterized by the three properties of monotonicity X ⊆ X idem potency X = X and extensivity X ⊆ Y if X ⊆ Y Intersections of closed sets are closed A minimal generator is a set X for which all proper subsets have closures different from the closure of X that is X is a minimal generator if and only if sup Y > sup X for all Y ⊂ X We denote by Fτ = {X ⊆ U �� sup X ≥ τ} the set of all frequent itemsets Also FC τ = {X ∈ Fτ �� X = X} represents the set of all frequent closed sets and FGτ = {X ∈ Fτ �� ∀Y ⊂ X sup Y > sup X } is the set of all frequent minimal generators Note that FC τ constitutes a concise lossless representation of frequent itemsets since knowing the support of all sets in FC τ is enough to retrieve the support of all sets in Fτ Example 1 Let D be the dataset represented in Table 1 where the universe U of attributes is {a b c d e f} and consider τ = 0 15 Clearly all subsets of U are frequent FC τ = {∅ a b c ab ac ad bc abcde abcdef} and FGτ = {∅ a b c d e f ab ac bc bd cd abc} we abuse the notation and denote sets by the juxtaposition of their constituent elements TAB 1 – Dataset D a b c d e f 1 1 1 1 1 1 1 1 1 1 1 0 1 1 0 0 0 0 1 0 1 0 0 0 0 1 1 0 0 0 1 0 0 1 0 0 2 1 Association Rules and Representative Rules Given X in Fτ two definitions with longer names are introduced in Kryszkiewicz 2001 mxsτ X = max {sup Z | Z ∈ FC τ Z ⊃ X} ∪ {0} mnsτ X = min {sup Y | Y ∈ FGτ Y ⊂ X} ∪ {∞} That is mxsτ X represents the maximum support of all proper frequent closed supersets of X and mnsτ X is the minimum support of minimal generators that are proper subsets of X The extra 0 and ∞ are added in order to make sure that mxsτ X and mnsτ X are defined even for the cases in which X has no proper supersets that are frequent and closed or when it does not have proper subsets that are minimal generators It is easy to check that mxsτ X ≤ sup X ≤ mnsτ X Moreover it can be shown that Closed set based Discovery of Representative Association Rules Revisited Proposition 1 Kryszkiewicz 2001 Let X ∈ Fτ Then X ∈ FC τ iff sup X > mxsτ X and X ∈ FGτ iff sup X < mnsτ X The types of association rules considered in this work are implications of the form X → Y where X Y ⊆ U Y �= ∅ and X ∩ Y = ∅ In Kryszkiewicz 2001 rules with X = ∅ are dis allowed but we do permit them as in practice such rules often play a useful role related to cov erings described below The confidence of X → Y is conf X → Y = sup XY sup X and its support is sup X → Y = sup XY The problem of mining association rules con sists in generating all rules that meet the minimum support and confidence threshold criteria Let ARτ γ = {X → Y �� sup X → Y ≥ τ conf X → Y ≥ γ} Since the whole set of association rules is quite big in real world applications a number of formalizations of the notion of redundancy among association rules have been introduced see Aggarwal and Yu 2001 Balcázar 2010 Cristofor and Simovici 2002 Kryszkiewicz 1998b Luxenburger 1991 Pasquier et al 2005 Phan Luong 2001 Zaki 2004 the survey Kryszkiewicz 2002 and section 6 of Ceglar and Roddick 2006 In one common approach the cover set C X → Y of a rule X → Y is defined by C X → Y = {X � → Y � �� X ⊆ X � and XY ⊇ X �Y �} Such rules X � → Y � are redundant with respect to X → Y in the following sense Proposition 2 Kryszkiewicz 1998b Aggarwal and Yu 2001 Let r X → Y and r� X � → Y � be association rules Then r ∈ C r� implies sup r ≥ sup r� and conf r ≥ conf r� In fact this implication is a full characterization that is if X � → Y � has always at least the same confidence and at least the same support as X → Y then it must belong to the cover set see Balcázar 2010 Avoiding such redundancies leads to the set RRτ γ of representative association rules A rule r in ARτ γ is said to be representative or sometimes essential if it is not contained in the cover set of any other rule in ARτ γ RRτ γ = {r ∈ ARτ γ �� ∀r� ∈ ARτ γ r ∈ C r� ⇒ r = r� } Under different names this notion has been proposed and studied in several sources e g Aggarwal and Yu 2001 Kryszkiewicz 1998b Phan Luong 2001 Proposition 3 Kryszkiewicz 1998a b The following properties hold • RRτ γ = {X → Y ∈ ARτ γ �� ¬∃X � → Y � ∈ ARτ γ X = X � XY ⊂ X �Y � or X ⊃ X � XY = X �Y � } • if X → Z\X with X ⊂ Z is in RRτ γ then Z ∈ FC τ and X ∈ FGτ Therefore any algorithm that aims at the discovery of all representative rules should con sider only rules of the form X → Z\X with X ⊂ Z Z ∈ FC τ and X ∈ FGτ Clearly not all sets in FC τ can be decomposed in such a way and one should look only into those that do Example 2 Consider the dataset in Example 1 The set ad is both frequent and closed but none of the rules a → d d → a or ∅ → ad are representative given the thresholds τ = 0 15 and γ = 0 33 a → d is in the cover set of a → bd d → a is in the cover set of d → ab and ∅ → ad is in the cover set of ∅ → abd Also it is easy to check that at γ = 0 4 one can obtain representative rules exactly out of the following closed sets ab ac ad bc abcde and abcdef J L Balcázar and C Tîrnăucă So if we denote by RI τ γ the set of all frequent closed itemsets from which at least one representative rule can be generated one possible approach to representative rule mining is to synthesize first the set RI τ γ and then for each element Z in RI τ γ to find a non empty subset X such that X → Z\X is representative This is precisely the idea behind Algorithm GenRR in Kryszkiewicz 2001 The problem there is that the characterization of the set RI τ γ given by Proposition 9 of the same paper on page 355 is incorrect possibly leaving out some of the sets that can lead to representative rules Namely it is stated that RI τ γ = {X ∈ FC τ �� sup X > γ mnsτ X ≥ mxsτ X } right to left inclusion indeed holds but equality does not hold in general as one can see from the following counterexample Example 3 Consider the itemset X = abcde in Example 1 and assume τ = 0 15 and γ = 0 4 Let us verify that abcde ∈ RI τ γ\{X ∈ FC τ �� sup X > γ mnsτ X ≥ mxsτ X } Clearly the rule b → acde is in ARτ γ having support 2 6 and confidence 0 5 Moreover by extending the right hand side or moving the item b to the right hand side we get only the rules b → acdef ∅ → abcde and ∅ → abcdef of confidence 1 4 2 6 and 1 6 respectively Hence we can conclude that b → acde ∈ RRτ γ On the other hand mxsτ X = 1 6 and mnsτ X = 2 6 so γ mnsτ X = 0 8 6 is strictly smaller than mxsτ X In this case Algorithm GenRR does not work correctly since it does not list the rule b → acde as being representative An alternative counterexample is given in the proof of Lemma 1 below 3 Bounds that Help Characterize Representative Rules The goal of pruning off sets that do not give representative rules by keeping only RI τ γ cannot be reached using the bounds given as we have seen that this set comprises all X in FC τ with sup X ≥ γ mnsτ X > mxsτ X but may also include other frequent closed sets X that do not satisfy the condition γ mnsτ X > mxsτ X We consider two alternatives 3 1 Closed Sets Instead of Minimal Generators For closed X mnsτ X is almost the same thing as the minimal support among all proper subsets of X or again among all proper closed subsets of X all these notions coincide when X is its own minimal generator otherwise they only differ due to the minimal generators of X Therefore it makes sense to try and exclude the minimal generators of X from consideration This way we get another parameter bmnsτ X = min {sup Y | Y ∈ FC τ Y ⊂ X} ∪ {∞} The value of bmnsτ is never smaller than mnsτ as we shall shortly see Thus there will be more sets that meet the condition γ bmnsτ X > mxsτ X Proposition 4 The following properties hold • bmnsτ X = min {sup Y | Y ∈ FGτ Y ⊂ X} ∪ {∞} • mnsτ X ≤ bmnsτ X • if X ∈ FC τ ∩ FGτ then mnsτ X = bmnsτ X Closed set based Discovery of Representative Association Rules Revisited Proof We omit the proof of the first two claims because they are straightforward So let X be a frequent closed set that is also a minimal generator If X = ∅ then mnsτ X = bmnsτ X = ∞ Otherwise let Y ∈ FGτ be such that Y ⊂ X and mnsτ X = sup Y Clearly Y ∈ FC τ and Y ⊆ X = X Since X ∈ FGτ and Y ⊂ X sup Y > sup X and hence sup Y > sup X and therefore Y ⊂ X We get sup Y ≥ bmnsτ X and mnsτ X ≥ bmnsτ X Combining it with the fact that mnsτ X ≤ bmnsτ X always holds we conclude that mnsτ X = bmnsτ X Unfortunately the new parameter can still leave out some sets in RI τ γ Lemma 1 RI τ γ �⊆ {X ∈ FC τ �� sup X > γ bmnsτ X ≥ mxsτ X } Proof Let U = {a b c} and D be the dataset containing the following 13 transactions t1 = · · · = t8 = abc t9 = ab t10 = t11 = t12 = a t13 = b assume τ = 0 07 and γ = 0 7 One can check that although ab ∈ RI τ γ since a → b ∈ RRτ γ both bmnsτ ab = 10 13 and mnsτ ab = 10 13 but γ mnsτ ab = γ bmnsτ ab = 7 13 < 8 13 = mxsτ ab The next construction shows that by using bmnsτ instead of mnsτ we can even leave out some sets in RI τ γ that would not have been left out otherwise Lemma 2 RI τ γ ∩ {X ∈ FC τ �� sup X > γ mnsτ X ≥ mxsτ X } �⊆ {X ∈ FC τ �� sup X > γ bmnsτ X ≥ mxsτ X } Proof Let U = {a b c d e} and D be a dataset containing 35 transactions t1 = t2 = abcde t3 = t4 = t5 = abcd t6 · · · = t20 = a and t21 = · · · t35 = b Pick τ = 0 05 and γ = 0 75 Note that ab → cd ∈ RRτ γ and therefore abcd ∈ RI τ γ Now mnsτ abcd = 5 35 bmnsτ abcd = 20 35 sup abcd = 5 35 and mxsτ abcd = 2 35 Although γ mnsτ abcd = 3 5 35 = 0 1 belongs to the interval [2 35 5 35 γ bmnsτ abcd = 15 35 does not 3 2 Minimal Generators of Bounded Support In order to give a complete characterization for the set RI τ γ let us first introduce the following notation for a set X in FC τ let mxgsτ γ X be the maximal support of those minimal generators that are included in X and are not more frequent than sup X γ mxgsτ γ X = max {sup Y �� Y ∈ FGτ Y ⊂ X γ sup Y ≤ sup X } ∪ {0} Note that mxgsτ γ X is either 0 or it is greater than or equal to sup X We prove two propositions that explain how we can use this value in order to compute the set RI τ γ and how to find given X ∈ RI τ γ a subset X0 ⊂ X such that X0 → X\X0 ∈ RRτ γ Proposition 5 RI τ γ = {X ∈ FC τ �� γ mxgsτ γ X > mxsτ X } Proof Let X be an arbitrary set in RI τ γ and take X0 in FGτ such that X0 → X\X0 ∈ RRτ γ and X0 ⊂ X We have on one hand conf X0 → X\X0 ≥ γ and on the other hand conf X0 → Z\X0 < γ for all Z ∈ FC τ with Z ⊃ X That is sup X ≥ γ sup X0 > sup Z for all Z ∈ FC τ with Z ⊃ X From the first inequality we deduce that X0 meets all the conditions in order to be considered for the computation of mxgsτ γ X and therefore mxgsτ γ X ≥ sup X0 From the second we get γ sup X0 > mxsτ X We conclude that γ mxgsτ γ X > mxsτ X J L Balcázar and C Tîrnăucă Algorithm 1 RR Generator 1 Input support threshold τ confidence threshold γ 2 Fτ = {X ⊆ U �� sup X ≥ τ} 3 FC τ = {X ∈ Fτ �� X = X} 4 FGτ = {X ∈ Fτ �� ∀Y ⊂ X sup Y > sup X } 5 for all X ∈ FGτ do 6 mnsτ X = min {sup Y �� Y ∈ FGτ Y ⊂ X} ∪ {∞} 7 end for 8 RI τ γ = ∅ 9 for all X ∈ FC τ\{∅} do 10 mxsτ X = max {sup Z �� Z ∈ FC τ Z ⊃ X} ∪ {0} 11 mxgsτ γ X = max {sup Y �� Y ∈ FGτ Y ⊂ X γ sup Y ≤ sup X } ∪ {0} 12 if γ mxgsτ γ X > mxsτ X then 13 add X to RI τ γ 14 end if 15 end for 16 for all X ∈ RI τ γ do 17 c1 = mxsτ X γ 18 c2 = sup X γ 19 Ant = {X0 ∈ FGτ �� X0 ⊂ X c1 < sup X0 ≤ c2 < mnsτ X0 } 20 for all X0 ∈ Ant do 21 output X0 → X\X0 22 end for 23 end for Conversely let X ∈ FC τ be such that γ mxgsτ γ X > mxsτ X Clearly mxgsτ γ X cannot be 0 since mxsτ X ≥ 0 so {Y ∈ FGτ �� Y ⊂ X γ sup Y ≤ sup X } is not empty Take X0 ∈ FGτ to be a set of maximal support that satisfies X0 ⊂ X and γ sup X0 ≤ sup X Therefore mxgsτ γ X = sup X0 Since sup X0 → X\X0 = sup X ≥ τ and conf X0 → X\X0 = sup X sup X0 ≥ γ we deduce that X0 → X\X0 ∈ ARτ γ Note that for any Z ⊃ X conf X0 → Z\X0 = sup Z sup X0 ≤ mxsτ X sup X0 = mxsτ X mxgsτ γ X < γ Moreover for any X �0 ⊂ X0 sup X �0 > sup X0 since X0 ∈ FGτ and γ sup X �0 > sup X due to the choice we have made for X0 This is why conf X �0 → X\X �0 = sup X sup X�0 < γ We conclude that X0 → X\X0 ∈ RRτ γ and X ∈ RI τ γ Proposition 6 Let X ∈ RI τ γ c1 = mxsτ X γ c2 = sup X γ and X0 ⊂ X Then X0 → X\X0 ∈ RRτ γ if and only if c1 < sup X0 ≤ c2 < mnsτ X0 Proof Consider X ∈ RI τ γ and X0 ⊂ X Clearly X0 → X\X0 ∈ RRτ γ if and only if the rule X0 → X\X0 is in ARτ γ and does not belong to the cover set of any other rule in ARτ γ That is equivalent to sup X ≥ τ sup X sup X0 ≥ γ sup X sup X�0 < γ for all X �0 ⊂ X and sup Z sup X0 < γ for all Z ⊃ X that satisfy sup Z ≥ τ Now it is easy to see that Closed set based Discovery of Representative Association Rules Revisited • sup X ≥ τ always holds because X ∈ FC τ • sup X sup X0 ≥ γ ⇔ sup X0 ≤ c2 • ∀X �0 ⊂ X0 sup X sup X�0 < γ ⇔ sup X mnsτ X0 < γ ⇔ c2 < mnsτ X0 • ∀Z ⊃ X � Z ∈ Fτ ⇒ sup Z sup X0 < γ � ⇔ mxsτ X sup X0 < γ ⇔ c1 < sup X0 which concludes the proof Example 4 Considering again Example 1 simple arithmetic suffices to check that Proposi tion 5 identifies exactly the closed sets from which representative rules follow as per Example 2 likewise Proposition 6 can be illustrated with the representative rule b → acde of Example 3 which is obtained from abcde for which indeed 0 4 5 6 > 1 6 as per Proposition 5 using c1 = 2 5 6 and c2 = 5 6 as c1 < 4 6 ≤ c2 < 6 6 The correctness of Algorithm 1 trivially follows from Proposition 5 and Proposition 6 3 3 An Algorithm for Different Confidence Thresholds The disadvantage of Algorithm 1 compared to the one in Kryszkiewicz 2001 is that for a given X in FC τ mxgsτ γ X depends on the confidence threshold and hence it cannot be reused once γ has changed whereas both mxsτ X and mnsτ X can be computed only once for a given value of τ and then used for different confidence values On the other hand this one is guaranteed not to lose representative rules whereas the one in Kryszkiewicz 2001 risks giving incomplete output as in our counterexample above Algorithm 2 RR Generator preprocessing phase 1 Input support threshold τ 2 Fτ = {X ⊆ U �� sup X ≥ τ} 3 FC τ = {X ∈ Fτ �� X = X} 4 FGτ = {X ∈ Fτ �� ∀Y ⊂ X sup Y > sup X } 5 for all X ∈ FGτ do 6 mnsτ X = min {sup Y �� Y ∈ FGτ Y ⊂ X} ∪ {∞} 7 end for 8 for all X ∈ FC τ\{∅} do 9 mxsτ X = max {sup Z �� Z ∈ FC τ Z ⊃ X} ∪ {0} 10 n[X] = |{Y ∈ FGτ �� Y ⊂ X}| 11 let {Y1 Yn[X]} be the set {Y ∈ FGτ �� Y ⊂ X} in descending order of support 12 for all i ∈ {1 n[X]} do 13 yi[X] = sup Yi 14 pi[X] = sup X yi[X] 15 end for 16 p0[X] = 0 17 end for J L Balcázar and C Tîrnăucă Instead of computing mxgsτ γ X for each and every γ one can find the individual points of the interval 0 1] where mxgsτ γ X changes its value Indeed given X ∈ FC τ\{∅} let {Y1 Yn[X]} be the set {Y ∈ FGτ �� Y ⊂ X} in descending order of support It is easy to see that mxgsτ γ X =    sup Y1 if γ ≤ sup X sup Y1 sup Yi+1 if γ ∈ � sup X sup Yi sup X sup Yi+1 � i ∈ {1 n[X]− 1} 0 if γ > sup X sup Yn[X] Now each time a new value of the confidence threshold γ is given one can decide whether a frequent closed set X is in RI τ γ by simply retrieving the interval pi[X] pi+1[X]] with i ∈ {0 n[X] − 1} to which γ belongs recall that in this case mxgsτ γ X = yi+1[X] and then checking whether the inequality γ yi+1[X] > mxsτ X holds Note that if no such i exists that is whenever γ has a value strictly greater than pn[X][X] mxgsτ γ X takes the value 0 which makes γ mxgsτ γ X smaller than or equal to mxsτ X These ideas are implemented in Algorithms 2 and 3 Algorithm 3 RR Generator second phase 1 Input support threshold τ confidence threshold γ 2 RI τ γ = ∅ 3 for all X ∈ FC τ\{∅} do 4 if ∃i ∈ {0 n[X]− 1} such that γ ∈ pi[X] pi+1[X]] then 5 if γ yi+1[X] > mxsτ X then 6 add X to RI τ γ 7 end if 8 end if 9 end for 10 for all X ∈ RI τ γ do 11 c1 = mxsτ X γ 12 c2 = sup X γ 13 Ant = {X0 ∈ FGτ �� X0 ⊂ X c1 < sup X0 ≤ c2 < mnsτ X0 } 14 for all X0 ∈ Ant do 15 output X0 → X\X0 16 end for 17 end for 4 Empirical Comparison We have seen that one can find toy examples of datasets in which the output of the algorithm in Kryszkiewicz 2001 is incomplete We have tested the algorithm on two real world datasets a typical market basket dataset taken from the data mining workbench Clementine 2005 and the training set part of the UCI Adult US census dataset see Asuncion and Newman 2007 We have implemented three different algorithms one for the incomplete heuristic given in Kryszkiewicz 2001 one for the first heuristic proposed by us in which mnsτ is replaced Closed set based Discovery of Representative Association Rules Revisited by bmnsτ also incomplete and one that generates the complete set of representative rules as described by Algorithm 1 In order to get comparable results all of them allow rules with empty antecedent and use the same definition of frequent sets and association rules as given in our Preliminaries The first dataset under study consists of 1000 transactions over 15 attributes 11 of them reflecting the type of product that a customer could have purchased fruitveg freshmeat dairy cannedveg cannedmeat frozenmeal beer wine softdrink fish confectionery and 4 others given by the gender and the home ownership status of the client male female homeowner donotownhome Table 2 shows the number of representative rules obtained for different support and confi dence thresholds the third column as well as the cardinality of the output set when bmnsτ or mnsτ is used the fourth and fifth column respectively We can see that although for higher support thresholds the output of the algorithms is most of the times identical recall that the output of the algorithm in Kryszkiewicz 2001 is always a subset of the whole set of represen tative rules lowering both thresholds shows bigger differences For comparison the rightmost column provides the number of rules in the standard sense of Agrawal et al 1996 TAB 2 – Market Basket Dataset number of rules τ γ RR RR with bmnsτ RR with mnsτ Standard 0 7 41 33 33 67 0 05 0 8 17 16 16 36 0 9 15 15 15 15 0 7 12 10 10 21 0 10 0 8 5 5 5 12 0 9 4 4 4 4 0 7 6 6 6 16 0 15 0 8 2 2 2 2 0 9 0 0 0 0 As an example in the case the thresholds for support and confidence are 0 10 and 0 70 respectively there are a total of 12 representative rules among which two are lost when using mns or bmns listed in bold [c 0 70 s 0 14] male frozenmeal⇒ beer [c 0 72 s 0 15] male frozenmeal⇒ cannedveg [c 0 86 s 0 12] confectionery wine⇒ female [c 0 70 s 0 14] male cannedveg⇒ beer frozenmeal [c 0 82 s 0 14] beer frozenmeal⇒ male cannedveg [c 0 84 s 0 14] beer cannedveg⇒ male frozenmeal [c 0 71 s 0 14] male beer⇒ cannedveg frozenmeal [c 0 81 s 0 14] cannedveg frozenmeal⇒ male beer [c 0 73 s 0 10] male fish⇒ donotownhome [c 0 89 s 0 12] fish fruitveg⇒ donotownhome [c 0 70 s 0 10] donotownhome beer⇒ male [c 0 70 s 0 11] donotownhome frozenmeal⇒ male Dataset ADULT is a transactional version of the training set part of the UCI census dataset Adult US see Asuncion and Newman 2007 it consists of 32561 transactions over 269 items Note that in this case there are significant differences between the output of the algorithm in Kryszkiewicz 2001 and the set of all representative rules Table 3 For example for support and confidence thresholds of 0 05 and 0 8 respectively more than half of the rules are lost We have run the experiments on an Intel Core 2CPU 6300 1 86GHz machine with 2 GB of RAM running under Microsoft Windows XP Professional The running time of all three J L Balcázar and C Tîrnăucă TAB 3 – Adult US census dataset number of rules τ γ RR RR with bmnsτ RR with mnsτ Standard 0 6 872 383 383 3443 0 05 0 7 781 425 425 2926 0 8 851 640 640 2426 0 6 326 124 124 1284 0 10 0 7 274 162 162 1083 0 8 345 270 270 923 algorithms were between 15 and 47 milliseconds in the case of the market basked dataset and between 62 and 1203 milliseconds for the Adult dataset The algorithm that correctly outputs all representative rules is slightly slower than the other two but in our tests the difference was rather irrelevant since the time needed to print the results on screen a device slower than the CPU still dominates the process It must be noted that the quantity of representative rules may decrease at lower confidence or support thresholds This phenomenon has been observed and explained before see Balcázar 2010 and is caused by powerful rules of a given confidence say 0 8 that are filtered out at higher thresholds leaving therefore many other rules as representative but that force all of these out of the representative rules as they become redundant when the confidence threshold gets below 0 8 and lets the powerful rule in 5 Perspectives As future research topics we wish to extend the characterization given in Proposition 5 of all closed itemsets that can be decomposed into representative rules to the stronger notion of redundancy introduced in Balcázar 2010 namely the closure based redundancy Addition ally a puzzling fact that we plan to study further is that in many of the real world datasets we have run our algorithms on our first alternative from Subsection 3 1 also incomplete gives the same quantity of representative rules as the original incomplete algorithm this may indicate that further understanding of the sets of rules obtained by these incomplete algorithms might be useful References Aggarwal C C and P S Yu 2001 A new approach to online generation of association rules IEEE Transactions on Knowledge and Data Engineering 13 4 527–540 Agrawal R H Mannila R Srikant H Toivonen and A I Verkamo 1996 Fast discovery of association rules In Advances in Knowledge Discovery and Data Mining pp 307–328 AAAI MIT Press Asuncion A and D Newman 2007 UCI machine learning repository Balcázar J L 2010 Redundancy deduction schemes and minimum size bases for associa tion rules Logical Methods in Computer Science 6 2 3 1–33 Closed set based Discovery of Representative Association Rules Revisited Ceglar A and J F Roddick 2006 Association mining ACM Comput Surv 38 2 Clementine 2005 Clementine 10 0 desktop user guide Cristofor L and D A Simovici 2002 Generating an informative cover for association rules In Proc of the 2002 IEEE International Conference on Data Mining ICDM pp 597–600 IEEE Computer Society Hamrouni T S Ben Yahia and E Mephu Nguifo 2008 Succinct minimal generators Theoretical foundations and applications Int J Found Comput Sci 19 2 271–296 Kryszkiewicz M 1998a Fast discovery of representative association rules In L Polkowski and A Skowron Eds Proc of the 1st International Conference on Rough Sets and Current Trends in Computing RSCTC Volume 1424 of Lecture Notes in Artificial Intelligence pp 214–221 Springer Verlag Kryszkiewicz M 1998b Representative association rules In X Wu K Ramamohanarao and K B Korb Eds Proc of the 2nd Pacific Asia Conference on Knowledge Discovery and Data Mining PAKDD Volume 1394 of Lecture Notes in Artificial Intelligence pp 198–209 Springer Verlag Kryszkiewicz M 2001 Closed set based discovery of representative association rules In F Hoffmann D J Hand N M Adams D H Fisher and G Guimarães Eds Proc of the 4th International Symposium on Intelligent Data Analysis IDA Volume 2189 of Lecture Notes in Computer Science pp 350–359 Springer Verlag Kryszkiewicz M 2002 Concise representations of association rules In D J Hand N M Adams and R J Bolton Eds Proc of the ESF Exploratory Workshop on Pattern De tection and Discovery Volume 2447 of Lecture Notes in Computer Science pp 92–109 Springer Verlag Luxenburger M 1991 Implications partielles dans un contexte Mathématiques et Sciences Humaines 29 35–55 Pasquier N R Taouil Y Bastide G Stumme and L Lakhal 2005 Generating a condensed representation for association rules J Intell Inf Syst 24 1 29–60 Phan Luong V 2001 The representative basis for association rules In N Cercone T Y Lin and X Wu Eds ICDM pp 639–640 IEEE Computer Society Zaki M J 2004 Mining non redundant association rules Data Min Knowl Discov 9 3 223–248 Résumé La sortie d’un mineur de règles d’association est souvent énorme dans la pratique C’est pourquoi plusieurs représentations concises sans perte ont été proposées telles que les règles “essentielles” ou “représentatives” Nous reviendrons sur l’algorithme donné par Kryszkie wicz Int Symp Intelligent Data Analysis 2001 Springer Verlag LNCS 2189 350–359 pour l’extraction des règles représentatives Nous montrons que sa production est parfois incom plète à cause d’une manque à la preuve mathématique de validité de cet algorithme et nous proposons un générateur de remplacement complet avec presque les mêmes temps d’éxécution 