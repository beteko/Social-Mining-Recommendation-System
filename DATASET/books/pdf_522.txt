Découverte à base ensemble fermé de l'Association Représentant Règles Revisited José L Balcázar, Cristina Tîrnăucă Departamento de Matemáticas, Estadística y Computación Universidad de Cantabria, Santander, Espagne {joseluis.balcazar, cristina.tirnauca}@unican.es~~V~~singular~~3rd Résumé. La sortie d'un mineur de règle d'association est souvent énorme dans la pratique. Voilà pourquoi plusieurs représentations de concises ont été proposées, comme le « essentiel » ou « représentatives » des règles. Nous revisitons l'algorithme donné par Kryszkiewicz (Int. Symp. L'analyse intelligente des données 2001, Springer-Verlag LNCS 2189, 350-359) des règles de représentation minière. Nous montrons que sa sortie est incomplète par- fois, en raison d'une erreur dans la validation mathématique, et nous vous proposons un générateur complet alternatif qui fonctionne dans les temps en cours d'exécution légèrement plus grandes. 1 Introduction Association minière de la règle est parmi les plus populaires des outils conceptuels dans le domaine des mines de données. Nous sommes intéressés par le processus de découverte et de représenter régularités entre les séries d'articles en grandes quantités de données transactionnelles à grande échelle. Syntaxiquement, la représentation de la règle d'association a la forme d'une implication, X → Y; Cependant, alors que dans la logique d'une telle expression est vraie si et seulement si Y détient chaque fois que X fait, une règle d'association est une implication partielle, dans le sens où il suffit que Y détient la plupart du temps X ne. Doter règles d'association avec une sémantique définitive, nous devons nous précise comment cette intuition de « la plupart du temps » est formalisée. Il y a beaucoup de propositions pour cette tion formalisation. L'une des mesures fréquemment utilisées d'intensité de ce genre d'implication partielle est sa confiance: le rapport entre le nombre de transactions dans lesquelles X et Y sont vus ensemble et le nombre de transactions qui contiennent X. Dans la plupart des cas d'application, l'espace de recherche est en outre limité aux règles d'association qui répondent à un critère de soutien minimal, donc ing évitant la génération de règles à partir d'éléments qui apparaissent très rarement ensemble dans l'ensemble de données (définitions formelles de soutien et de confiance sont donnés dans la section 2.1). De nombreux mineurs de règles d'association existe, Apriori (voir Agrawal et al. (1996)) étant l'un des plus discuté et utilisé. Le problème majeur partagé par tous les algorithmes d'extraction est que, dans la pratique, même pour des seuils de soutien raisonnables et confiance, la sortie est souvent énorme. Par conséquent, plusieurs représentations de concises de l'ensemble des règles d'association ont été proposées. Ces représentations sont basées sur différentes notions de « redondance ». Dans l'un de ceux-ci, une règle est redondante s'il est possible de calculer exactement la confiance et le soutien d'autres informations telles que les documents confidentiels et supports d'autres règles d'information (voir Association fermée ensemble basée sur la découverte du représentant Règles Revisited Luxenburger (1991) ; Kryszkiewicz (2002), Hamrouni et al (2008)). c'est un établissement très exigeant. Nous nous installons pour une version plus faible proposée dans plusieurs ouvrages; de manière informelle, dans cette version, une règle est redondante par rapport à un autre si sa confiance et de soutien sont toujours plus, dans un ensemble de données. Pour éviter cette redondance, exactement une notion a été identifiée dans plusieurs sources, à savoir les règles représentatives (définitions précises et des références sont données ci-dessous). Nous nous concentrons dans cet article sur les principaux résultats de Kryszkiewicz (2001), où un algorithme supposément plus rapide pour construire des règles de représentation est donnée, et montrer par un exemple que cet algorithme n'est pas garanti toujours sortie toutes les règles de représentation, car il est basé sur une propriété qui ne tient pas en général; à savoir la caractérisation des ensembles fermés fréquents qui admettent une décomposition en règles représentatives manque certains de ces ensembles. Nous vous proposons une alternative, la caractérisation complète, qui nous conduit à la proposition d'un premier algorithme alternatif qui est garanti à toutes les règles de sortie représentatives: nous précalculer, pour chaque ensemble fermé, certains paramètres qui dépendent des seuils de confiance et de soutien, et ensuite utiliser la nouvelle caractérisation mentionnée ci-dessus pour générer toutes les règles représentatives. Par rapport à l'algorithme précédent, potentiellement incomplètes Kryszkiewicz (2001), cet algorithme, garanti pour être complet, a un inconvénient majeur: en Kryszkiewicz (2001), les paramètres locaux internes ne dépendent que du seuil de soutien, mais dans notre algorithme ces paramètres dépendent aussi de la confiance. Par conséquent, chaque fois qu'un nouveau seuil de confiance est introduit par l'utilisateur, l'algorithme doit refaire tous les calculs. Ainsi, nous fournissons un second algorithme, composé de deux parties: la première est une phase de pré-traitement, dépendant uniquement de support, dans lequel une subdivision de l'intervalle (0, 1] est associé à chaque jeu d'éléments fermé, et la seconde partie utilise cette partition pour déterminer, pour une valeur donnée du seuil de confiance, qui sont les ensembles qui peuvent générer des règles de représentation. Il y a quelques différences subtiles entre l'une des définitions habituelles de la règle d'association (celle que nous d'emploi) et la un en Kryszkiewicz (2001). tout d'abord, nous interdisons d'avoir des règles avec antécédent vide (clairement, tous ont confiance égale à l'appui normalisé du conséquent). de plus, nous ne demandons pas les inégalités d'être stricte en imposant une donnée le soutien et le seuil de confiance. Ceci est juste un petit détail qui est à portée de main lorsque l'utilisateur est intéressé à obtenir l'ensemble des règles représentatives de la confiance 1. Toutefois, nous avons soigneusement réglé tous nos argumentations de telle sorte que ces différences ne sont pas pertinentes; Par exemple, nous avons choisi un contre qui invalide la propriété 9 de Kryszkiewicz (2001) indépendamment de celle des deux définitions est utilisé. L'article est structuré comme suit. Dans la section 2, nous présentons les notions de base et nota- tions qui seront utilisés dans le papier et une partie du contenu de Kryszkiewicz (2001); et nous montrons que l'algorithme fourni il n'y a pas garanti de toujours fournir l'ensemble des règles de représentation. Dans la section 3, nous définissons de nouveaux paramètres et de discuter de leur utilité pour générer l'ensemble des règles de représentation, fournissant également des algorithmes efficaces pour cette tâche. L'article 4 contient une comparaison de notre approche avec celle Kryszkiewicz (2001) sur certains jeux de données. Conclusions et d'autres sujets de recherche sont présentés dans la section 5. 2 Préliminaires Un ensemble donné d'éléments disponibles U SUPPOSANT; des sous-ensembles de celui-ci sont appelés itemsets. Nous noterons par itemsets lettres majuscules de la fin de l'alphabet, et la juxtaposition d'utilisation pour désigner l'union, comme dans XY. Le signe d'inclusion tel que dans X ⊂ Y désigne sous-ensemble, alors impropre J. L. et C. Balcázar inclusion Tîrnăucă est notée X ⊆ Y. Pour une donnée ensemble de données D, comprenant des opérations de n, dont chacun est un jeu d'éléments marqués avec un identificateur de transaction unique, nous définissons le support sup (X) d'un jeu d'éléments X comme étant le rapport entre la cardinalité de l'ensemble de transactions qui contiennent X et le nombre total de transactions n. Un jeu d'éléments X est appelé fréquemment si son support est supérieur ou égal à un seuil τ ∈ (0 défini par l'utilisateur, 1]. Etant donné un ensemble X ⊆ U, la fermeture X de X est l'ensemble maximal (par rapport à l'ensemble inclusion) y ⊆ U tel que X ⊆ y et sup (X) = sup (y). Il est facile de voir que X est définie de manière unique. on dit qu'un ensemble X ⊆ U est fermé si X = X. opérateurs de fermeture sont caractérisé par les trois propriétés de monotonicité X ⊆ X, la puissance idem- X = X, et extensivité, X ⊆ Y si X ⊆ Y. les intersections d'ensembles fermés sont fermés. un générateur minimal est un ensemble X pour lequel tous les sous-ensembles propres ont fermetures différent de la fermeture de X (qui est, X est un générateur minimal si et seulement si sup (Y)> sup (X) pour tous les Y ⊂ X). On note Fτ = {X ⊆ U sup (X) ≥ τ} l'ensemble de tous itemsets fréquents. de plus, le FC τ = {X ∈ Fτ X = X} représente l'ensemble de tous les ensembles fermés fréquents et FGτ = {X ∈ Fτ ∀Y ⊂ X, sup ( Y)> sup (X)} est la ensemble de tous les fréquents générateurs minimaux. Notez que le FC τ constitue une représentation sans perte concise des itemsets fréquents, car connaissant le soutien de tous les ensembles de FC τ est suffisant pour récupérer le soutien de tous les ensembles de Fτ. Exemple 1 Soit D l'ensemble de données représentées dans le tableau 1 où l'univers U d'attributs est {a, b, c, d, e, f} et examiner τ = 0,15. Il est clair que tous les sous-ensembles de U sont fréquentes, FC τ = {∅, a, b, c, ab, ac, ad, bc, abcde, abcdef} et FGτ = {∅, a, b, c, d, e, f , ab, ac, bc, bd, cd, abc} (nous abusons la notation et ensembles désignons par la juxtaposition de leurs éléments constitutifs). LANGUETTE. 1 - Dataset D abcdef 1 1 1 1 1 1 1 1 1 1 1 0 1 1 0 0 0 0 1 0 1 0 0 0 0 1 1 0 0 0 1 0 0 1 0 0 2.1 Règles et règles représentant de l'Association Comme X Fτ, deux définitions, avec des noms plus longs, sont introduits dans Kryszkiewicz (2001): mxsτ (X) = max ({sup (Z) | Z ∈ FC τ, Z ⊃ X} ∪ {0}), mnsτ (X) = min ({sup (Y) | Y ∈ FGτ, Y ⊂ X} ∪ {∞}). C'est, mxsτ (X) représente le soutien maximal de tous surensembles fermés fréquents propres de X et mnsτ (X) est le support minimum de générateurs minimaux qui sont des sous-ensembles appropriés de X. Extra 0 et ∞ sont ajoutés pour sont définis faire en sorte que mxsτ (X) et mnsτ (X), même pour les cas où X n'a ​​pas surensembles appropriés qui sont fréquents et fermés, ou quand il ne sous-ensembles ne pas avoir appropriés que sont générateurs minimaux. Il est facile de vérifier que mxsτ (X) ≤ sup (X) ≤ mnsτ (X). De plus, il peut être démontré que: fermé ensemble fondé sur la découverte de l'Association représentant les règles Revisited Proposition 1 (Kryszkiewicz (2001)) Soit X ∈ Fτ. Alors X ∈ FC τ ssi sup (X)> mxsτ (X), et X ∈ FGτ sup IFF (X) <mnsτ (X). Les types de règles d'association considérées dans ce travail sont les implications de la forme X → Y, où X, Y ⊆ U, Y = ∅ et X ∩ Y = ∅. En Kryszkiewicz (2001), les règles avec X = ∅ sont autorisés dis-, mais nous ne leur permettent que dans la pratique, ces règles jouent souvent un rôle utile lié à erings la recou-, décrit ci-dessous. La confiance de X → Y est conf (X → Y) = sup (XY) / sup (X) et son support est sup (X → Y) = sup (XY). Le problème de l'Association minière règles pour générer des con- siste toutes les règles qui répondent aux critères seuils minimaux de soutien et de confiance. Laissez ARτ, γ = {X → Y sup (X → Y) ≥ τ, CONF (X → Y) ≥ γ}. Depuis l'ensemble des règles d'association est tout à fait grand dans les applications du monde réel, un certain nombre de formalisations de la notion de redondance entre les règles d'association ont été mis en place (voir Aggarwal et Yu (2001); Balcázar (2010); Cristofor et Simovici (2002 ); Kryszkiewicz (1998b), Luxenburger (1991). Pasquier et al (2005), Phan-Luong (2001), Zaki (2004), l'enquête Kryszkiewicz (2002) et l'article 6 de Ceglar et Roddick (2006)) . Dans une approche commune, l'ensemble de couvercle C (X → Y) d'une règle X → Y est défini par C (X → Y) = {X → Y X ⊆ X et XY ⊇ X Y} . De telles règles X → Y sont redondants par rapport à X → Y dans le sens suivant: Proposition 2 (Kryszkiewicz (1998b), Aggarwal et Yu (2001)) Soit r: X → Y et r: X → Y des règles d'association. Ensuite, r ∈ C (r) implique sup (r) ≥ sup (r) et conf (r) ≥ conf (r). En fait, cette implication est une caractérisation complète, qui est, si X → Y a toujours au moins la même confiance et au moins le même support que X → Y il doit appartenir à l'ensemble de la couverture (voir Balcázar (2010) ). Éviter de tels licenciements conduit à l'ensemble RRτ, γ des règles d'association représentatives. Une règle r dans ARτ, γ est dit être représentative, ou parfois indispensable, si elle ne figure pas dans l'ensemble de couverture d'une autre règle dans ARτ, γ. RRτ, γ = {r ∈ ARτ, γ ∈ ∀r ARτ, γ (r ∈ C (r) ⇒ r = r)}. Sous des noms différents, cette notion a été proposé et étudié dans plusieurs sources, par exemple Aggarwal et Yu (2001); Kryszkiewicz (1998b); Phan-Luong (2001). Proposition 3 (Kryszkiewicz (1998a, b)) Les propriétés suivantes sont satisfaites: • RRτ, γ = {X → Y ∈ ARτ, γ ¬∃X → Y ∈ ARτ, γ, (X = X, XY ⊂ X Y) ou (X ⊃ X, XY = X Y)} • si X → Z \ X avec X ⊂ Z est en RRτ, puis γ ∈ Z FC τ et X ∈ FGτ. Par conséquent , Tout algorithme qui vise à la découverte de toutes les règles représentatives devraient con- Sider règles que de la forme X → Z \ X avec X ⊂ Z, Z ∈ FC τ et X ∈ FGτ. De toute évidence, tous les ensembles de FC τ peuvent être décomposées en manière telle, et il faut regarder que dans ceux qui le font. Exemple 2 Considérons l'ensemble de données dans l'exemple 1. L'annonce de jeu est à la fois fréquente et fermé, mais aucune des règles a → d, d → un ou ∅ → annonce représentatifs étant donné les seuils τ = 0,15 et γ = 0,33: a → d est dans l'ensemble de la couverture d'un → bd, d → un est dans l'ensemble de couverture d → ab et ∅ → ad est dans l'ensemble de la couverture de ∅ → abd. En outre, il est facile de vérifier que, à γ = 0,4, on peut obtenir des règles représentatives exactement sur les ensembles fermés suivants: ab, ac, ad, bc, ABCDE, et abcdef. JL Balcázar et C. Tîrnăucă Ainsi, si l'on désigne par RI τ, γ l'ensemble de tous itemsets fermés fréquents dont au moins une règle représentative peut se former, une approche possible de l'exploitation minière de la règle représentative est de synthétiser d'abord l'ensemble RI τ, γ, puis, pour chaque élément Z dans RI τ, γ, pour trouver un sous-ensemble non vide de telle sorte que X X → Z \ X est représentatif. C'est précisément l'idée derrière l'algorithme GenRR dans Kryszkiewicz (2001). Le problème est que la caractérisation de l'ensemble RI τ, γ donné par la proposition 9 du même document (à la page 355) est incorrect, peut-être en laissant quelques-uns des jeux qui peuvent conduire à des règles représentatives. A savoir, il est indiqué que RI T pour, γ = {X ∈ FC τ sup (X)> γ * mnsτ (X) ≥ mxsτ (X)}; l'inclusion de droite à gauche tient en effet, mais l'égalité ne tient pas en général, comme on peut le voir sur la suivante contre-. Exemple 3 Considérons le jeu d'éléments X = abcde dans l'exemple 1, et supposons τ = 0,15 et γ = 0,4. Vérifions que ABCDE ∈ RI τ, γ \ {X ∈ FC τ sup (X)> γ * mnsτ (X) ≥ mxsτ (X)}. De toute évidence, la règle b → acde est en ARτ, γ, ayant support 6/2 et 0,5 confiance. De plus, en étendant la droite ou de déplacer l'élément b à la droite, nous obtenons que les règles b → ACDEF, ∅ → ABCDE et ∅ → abcdef de confiance 1/4, 2/6 et 1/6, respectivement. Par conséquent, nous pouvons conclure que b ∈ → ACDE RRτ, γ. D'autre part, mxsτ (X) = 6/1 et mnsτ (X) = 6/2, de sorte que γ * mnsτ (X) = 0,8 / 6 est strictement inférieure à mxsτ (X). Dans ce cas, l'algorithme GenRR ne fonctionne pas correctement car il ne liste pas la règle b → ACDE comme représentant. Une alternative est donnée en contre-la preuve du lemme 1 ci-dessous. 3 Bounds que l'aide Caractériser règles représentatives L'objectif de la taille de jeux qui ne donnent pas de règles représentatives, en ne gardant que RI τ, γ, ne peut pas être atteint en utilisant les limites données, comme nous l'avons vu que cet ensemble comprend tous les X FC τ avec sup (X) ≥ γ * mnsτ (X)> mxsτ (X), mais peut également inclure d'autres ensembles fermés fréquents X qui ne satisfait pas la condition γ * mnsτ (X)> mxsτ (X). Nous considérons deux alternatives. 3.1 fermés au lieu de générateurs minimal pour X fermé, mnsτ (X) est presque la même chose que le soutien minimal parmi tous les sous-ensembles propres de X, ou encore parmi tous les sous-ensembles fermés appropriés de X; toutes ces notions coïncident lorsque X est son propre générateur minimal, sinon ils ne diffèrent que du fait des générateurs minimaux de X. Par conséquent, il est logique d'essayer et d'exclure les générateurs minimaux de X de la considération. De cette façon, nous obtenons un autre paramètre, bmnsτ (X) = min ({sup (Y) | Y ∈ FC τ, Y ⊂ X} ∪ {∞}). La valeur de bmnsτ est plus petite que jamais mnsτ comme nous le verrons bientôt. Ainsi, il y aura plus de jeux qui répondent à la condition γ * bmnsτ (X)> mxsτ (X). Proposition 4 Les propriétés suivantes. • bmnsτ (X) = min ({sup (Y) | Y ∈ FGτ, Y ⊂ X} ∪ {∞}), • mnsτ (X) ≤ bmnsτ (X), • si X ∈ FC τ ∩ FGτ puis mnsτ ( X) = bmnsτ (X), à base de jeu fermé Découverte de la preuve représentant règles de l'Association revisité. Nous omettons la preuve des deux premières demandes parce qu'ils sont simples. Alors, laissez-X un ensemble fermé fréquent qui est aussi un générateur minimal. Si X = ∅, alors mnsτ (X) = bmnsτ (X) = ∞. Dans le cas contraire, que Y ∈ FGτ est telle que Y ⊂ X et mnsτ (X) = sup (Y). De toute évidence, Y ∈ T pour FC et Y ⊆ X = X. Etant donné que X ∈ FGτ et Y ⊂ X, sup (Y)> sup (X) et donc sup (Y)> sup (X), et donc Y ⊂ X. Nous obtenons sup (Y) ≥ bmnsτ (X) et mnsτ (X) ≥ bmnsτ (X). La combinaison avec le fait que mnsτ (X) ≤ bmnsτ (X) tient toujours, nous concluons que mnsτ (X) = bmnsτ (X). Malheureusement, le nouveau paramètre peut laisser encore quelques ensembles en RI τ, γ. Lemme 1 RI τ, γ ⊆ {X ∈ FC τ sup (X)> γ * bmnsτ (X) ≥ mxsτ (X)}. Preuve. Soit u = {a, b, c} et D le jeu de données contenant les 13 opérations suivantes: t1 = · · · = t8 = abc, t9 = ab, t10 = t11 t12 = = a, t13 = b; supposer τ = 0,07 et γ = 0,7. On peut vérifier que, même si ab ∈ RI τ, γ (depuis a → b ∈ RRτ, γ), les deux bmnsτ (ab) = 10/13 et mnsτ (ab) = 10/13; mais γ * mnsτ (ab) = γ * bmnsτ (ab) = 7/13 <8/13 = mxsτ (ab). Les prochains spectacles de construction qu'en utilisant bmnsτ au lieu de mnsτ on peut même laisser quelques ensembles en RI τ, γ qui n'aurait pas été laissé autrement. Lemme 2 RI τ, γ ∩ {X ∈ FC τ sup (X)> γ * mnsτ (X) ≥ mxsτ (X)} ⊆ {X ∈ FC τ sup (X)> γ * bmnsτ (X ) ≥ mxsτ (X)}. Preuve. Soit u = {a, b, c, d, e} et D un ensemble de données contenant des 35 opérations: t1 = t2 = abcde, t3 = t4 = t5 = abcd, T6 · · · = t20 = a et t21 = · · · t35 = b. Choix τ = 0,05 et γ = 0,75. Notez que ab de cd ∈ RRτ, γ et donc ABCD ∈ RI τ, γ. Maintenant, mnsτ (ABCD) = 5/35, bmnsτ (ABCD) = 20/35, sup (ABCD) = 5/35 et mxsτ (ABCD) = 2/35. Bien que γ * mnsτ (abcd) = 3,5 / 0,1 = 35 appartient à l'intervalle [2/35, 5/35), γ * bmnsτ (abcd) = 15/35 ne fonctionne pas. 3.2 Les générateurs minimaux de Borné support Afin de donner une caractérisation complète pour l'ensemble RI τ, γ, laissez d'abord introduire la notation suivante: pour un ensemble X FC τ, laisser mxgsτ, γ (X) le soutien maximal de ceux générateurs minimaux qui sont inclus dans X et ne sont pas plus fréquentes que sup (X) / γ: mxgsτ, γ (X) = max (sup {(Y) Y ∈ FGτ, Y ⊂ X, γ * sup (Y) ≤ sup (X)} ∪ {0}). Notez que mxgsτ, γ (X) est soit 0, soit elle est supérieure ou égale à sup (X). Nous montrons deux propositions qui expliquent comment nous pouvons utiliser cette valeur pour calculer l'ensemble RI τ, γ et comment trouver, étant donné X ∈ RI τ, γ, un X0 sous-ensemble ⊂ X tel que X0 → X \ X0 ∈ RRτ, γ. Proposition 5 RI T pour, γ = {X ∈ FC τ γ * mxgsτ, γ (X)> mxsτ (X)}. Preuve. Soit X un ensemble arbitraire RI τ, γ et prendre X0 dans FGτ tels que X0 → X \ X0 ∈ RRτ, γ et X0 ⊂ X. Nous avons, d'une part, conf (X0 → X \ X0) ≥ γ, et d'autre part, conf (X0 → Z \ X0) <γ pour tout Z ∈ FC τ avec Z ⊃ X. Autrement dit, sup (X) ≥ γ * sup (X0)> sup (Z) pour tout z ∈ Z avec τ FC ⊃ X. De la première inégalité, on en déduit que X0 remplit toutes les conditions afin de prendre en compte pour le calcul de mxgsτ, γ (X), et par conséquent, mxgsτ, γ (X) ≥ sup (X0). De la seconde, nous obtenons γ * sup (X0)> mxsτ (X). Nous concluons que γ * mxgsτ, γ (X)> mxsτ (X). JL Balcázar et C. Tîrnăucă algorithme 1 RR Générateur 1: Entrée: seuil τ support, seuil de confiance γ 2: Fτ = {X ⊆ U sup (X) ≥ τ} 3: FC τ = {X ∈ X Fτ = X} 4: FGτ = {X ∈ Fτ ∀Y ⊂ X, sup (Y)> sup (X)} 5: pour tout X ∈ FGτ do 6: mnsτ (X) = min ({sup (Y) Y ∈ FGτ, Y ⊂ X} ∪ {∞}) 7: fin de 8: RI τ, γ = ∅ 9: pour tout X ∈ FC τ \ {∅} faire 10: mxsτ (X) = max ({ sup (Z) Z ∈ FC τ, Z ⊃ X} ∪ {0}) 11: mxgsτ, γ (X) = max (sup {(Y) Y ∈ FGτ, Y ⊂ X, γ * sup ( Y) ≤ sup (X)} ∪ {0}) 12: si γ * mxgsτ, γ (X)> mxsτ (X) puis 13: ajouter X RI τ, γ 14: end if 15: fin de 16: pour tout X ∈ RI τ, γ faire 17: c1 = mxsτ (X) / γ 18: c2 = sup (X) / γ 19: Ant = {X0 ∈ FGτ X0 ⊂ X, c1 <sup (X0) ≤ c2 <mnsτ (X0)} 20: pour tout X0 ∈ Ant do 21: X0 de sortie → X \ X0 22: fin de 23: fin de Inversement, soit X ∈ FC τ être tel que γ * mxgsτ, γ (X)> mxsτ (X). De toute évidence, mxgsτ, γ (X) ne peut pas être 0 (puisque mxsτ (X) ≥ 0), de sorte que Y ∈ {FGτ Y ⊂ X, γ * sup (Y) ≤ sup (X)} est non vide. Prendre X0 ∈ FGτ à un ensemble de support maximal qui satisfait X0 ⊂ X et γ * sup (X0) ≤ sup (X). Par conséquent, mxgsτ, γ (X) = sup (X0). Depuis sup (X0 → X \ X0) = sup (X) ≥ τ et conf (X0 → X \ X0) = sup (X) sup (X0) ≥ γ on en déduit que X0 → X \ X0 ∈ ARτ, γ. On notera que pour toute Z ⊃ X, conf (X0 → Z \ X0) = sup (Z) sup (X0) ≤ mxsτ (X) sup (X0) = MXS τ (X) mxgsτ, γ (x) <γ. De plus, pour tout X 0 ⊂ X0, sup (X 0)> sup (X0) (depuis X0 ∈ FGτ) et γ * sup (X 0)> sup (X) (en raison du choix que nous avons fait pour X0). C'est pourquoi CONF (X 0 → X \ X 0) = sup (X) sup (X0) <γ. Nous concluons que X0 → X \ X0 ∈ RRτ, γ et X ∈ RI τ, γ. Proposition 6 Soit X ∈ RI τ, γ, c1 = mxsτ (X) / γ, c2 = sup (X) / γ et X0 ⊂ X. Ensuite X0 → X \ X0 ∈ RRτ, γ si et seulement si c1 <sup (X0) ≤ c2 <mnsτ (X0). Preuve. Considérons X ∈ RI τ, γ et X0 ⊂ X. De toute évidence, X0 → X \ X0 ∈ RRτ, γ si et seulement si la règle X0 → X \ X0 est ARτ, γ et ne pas appartenir à l'ensemble de la couverture de toute autre règle ARτ, γ. Cela équivaut à: sup (X) ≥ τ, sup (X) sup (X0) ≥ γ, sup (X) sup (X0) <γ 0 pour tout X ⊂ X et sup (Z) sup (X0 ) <γ pour tous les Z ⊃ X qui satisfont sup (Z) ≥ τ. Maintenant, il est facile de voir que: fermé ensemble fondé sur la découverte du représentant de règles d'association revisité • sup (X) ≥ τ tient toujours parce que X ∈ FC τ, • sup (X) sup (X0) ≥ γ ⇔ sup (X0 ) ≤ c2, • ∀X 0 ⊂ X0: sup (X) sup (X0) <γ ⇔ sup (X) mnsτ (X0) <γ ⇔ c2 <mnsτ (X0), • ∀z ⊃ X: de Z ∈ Fτ sup (Z) de sup (X0) <γ ⇔ mxsτ (X) sup (X0) <γ ⇔ c1 <sup (X0), qui conclut la preuve. Exemple 4 En considérant à nouveau l'exemple 1, simple suffit arithmétiques pour vérifier que Proposi- tion 5 identifie exactement les fermés à partir de laquelle des règles de représentation suivent comme dans l'exemple 2; De même, la proposition 6 peut être illustré par la règle représentant b → acde de l'exemple 3, qui est obtenu à partir de abcde (pour laquelle en effet 0,4 * 6/5> 6/1 selon la proposition 5) en utilisant c1 = 2,5 / 6 et c2 = 6/5, comme c1 <c2 ≤ 4/6 <6/6. L'exactitude de l'algorithme 1 suit trivialement de la prop 5 et Proposition 6. 3.3 Un algorithme pour différents seuils de confiance à l'inconvénient de l'algorithme 1, par rapport à celui de Kryszkiewicz (2001), est que, pour un X donné dans FC τ, mxgsτ, γ (X) dépend du seuil de confiance, et par conséquent, il ne peut être réutilisé une fois γ a changé, alors que les deux mxsτ (X) et mnsτ (X) peut être calculé qu'une seule fois pour une valeur donnée de τ puis utilisé pour différentes valeurs de confiance . D'autre part, celui-ci est garanti de ne pas perdre des règles de représentation, alors que celui de Kryszkiewicz (2001) risque de donner la production incomplète, comme dans notre contre-dessus. Algorithme 2 RR Generator - la phase de prétraitement 1: Entrée: seuil de support τ 2: Fτ = {X ⊆ U sup (X) ≥ τ} 3: FC τ = {X ∈ Fτ X = X} 4: FGτ = {X ∈ Fτ ∀Y ⊂ X, sup (Y)> sup (X)} 5: pour tout X ∈ FGτ do 6: mnsτ (X) = min ({sup (Y) Y ∈ FGτ, Y ⊂ X} ∪ {∞}) 7: fin de 8: pour tout X ∈ FC τ \ {∅} do 9: mxsτ (X) = max (sup {(Z) Z ∈ FC τ, Z ⊃ X} ∪ {0}) 10: n [X] = | {Y ∈ FGτ Y ⊂ X} | 11: let {Y1,. . . , Yn [X]} l'ensemble {Y ∈ FGτ Y ⊂ X} dans l'ordre décroissant de support 12: pour tout i ∈ {1,. . . , N [X]} faire 13: yi [X] = sup (Yi) 14: pi [X] = sup (X) / yi [X] 15: fin de 16: p0 [X] = 0 17: fin de JL Balcázar et C. Tîrnăucă au lieu de calculer mxgsτ, γ (X) pour chaque γ, on peut trouver les points individuels de l'intervalle (0, 1] où mxgsτ, γ (X) modifie sa valeur. en effet, compte tenu de X ∈ FC τ \ {∅}, soit {Y1,..., Yn [X]} l'ensemble {Y ∈ FGτ Y ⊂ X} dans l'ordre décroissant de soutien. Il est facile de voir que mxgsτ, γ ( X) =    sup (Y1), si γ ≤ sup (X) sup (Y1) sup (Yi + 1), si γ ∈ sup (X) sup (Yi), sup (X) sup (Yi + 1), i ∈ {1,, n [X] -... 1 0}, si γ> sup (X) sup (Yn [X]) maintenant, chaque fois qu'une nouvelle valeur de la. seuil de confiance γ est donnée, on peut déterminer si un ensemble fermé fréquent X est RI τ, γ en récupérant simplement l'intervalle (pi [X], pi + 1 [X]] avec i ∈ {0,..., n [X] - 1} où γ appartient (rappelons que dans ce mxgsτ cas, γ (X) = yi + 1 [X]) et de vérifier ensuite si l'inégalité γ * yi + 1 [X]> mxsτ (X) ho lds. Notez que si aucun i existe (ce qui est, à chaque fois que γ a une valeur strictement supérieure à pn [X] [X]), mxgsτ, γ (X) prend la valeur 0, ce qui rend γ * mxgsτ, γ (X ) inférieure ou égale à mxsτ (X). Ces notions sont mises en oeuvre dans les algorithmes 2 et 3. Algorithme 3 RR Générateur - deuxième phase 1: Entrée: seuil τ support, seuil de confiance y 2: RI τ, γ = ∅ 3 : Pour tout X ∈ FC τ \ {∅} faire 4: si ∃i ∈ {0,. . . , N [X] - 1} tel que γ ∈ (pi [X], pi + 1 [X]] puis 5: si γ * yi + 1 [X]> mxsτ (X) puis 6: Ajouter X RI τ , y 7: end if 8: end if 9: fin de 10: pour tout X ∈ RI τ, γ faire 11: c1 = mxsτ (X) / γ 12: c2 = sup (X) / γ 13: Ant = { X0 ∈ FGτ X0 ⊂ X, c1 <sup (X0) ≤ c2 <mnsτ (X0)} 14: pour tout X0 ∈ Ant do 15: X0 de sortie → X \ X0 16: fin de 17: fin de 4 Comparaison empirique nous avons vu que l'on peut trouver des exemples de jouets de jeux de données dans lequel la sortie de l'algorithme Kryszkiewicz (2001) est incomplète nous avons testé l'algorithme sur deux ensembles de données du monde réel:. un ensemble de données de panier de marché typique, tiré de l'atelier de data mining Clémentine (2005), et la partie de jeu de formation de l'ensemble de données de recensement UCI adultes des États-Unis, voir Asuncion et Newman (2007) Nous avons mis en place trois algorithmes différents: un pour l'heuristique incomplète donnée dans Kryszkiewicz (2001), l'un pour la première heuristique. proposé par nous dans lequel mnsτ est remplacé à base-ensemble fermé Découverte du représentant de l'Association Règles Revisited bmnsτ (également incomplète), et qui génère l'ensemble complet de règles représentatives tel que décrit par l'algorithme 1. Afin d'obtenir des résultats comparables, toutes les règles permettent avec antécédent vide et utilisent la même définition des ensembles fréquents et association règles comme indiqué dans nos Préliminaires. Le premier ensemble de données à l'étude se compose de 1000 transactions de plus de 15 attributs, 11 d'entre eux reflétant le type de produit que le client aurait pu acheter (fruitveg, freshmeat, produits laitiers, cannedveg, cannedmeat, frozenmeal, bière, vin, liqueur douce, poissons, confiserie) et 4 autres données par le sexe et le statut de la propriété du client (homme, femme, propriétaire, donotownhome). Le tableau 2 montre le nombre de règles représentatifs obtenus pour différents supports et confi- seuils ance (troisième colonne), ainsi que la cardinalité de l'ensemble de sortie lorsque bmnsτ ou mnsτ est utilisé (les quatrième et cinquième colonnes, respectivement). On peut constater que, bien que pour un soutien plus élevé des seuils de la sortie des algorithmes est, la plupart du temps, identiques (rappelons que la sortie de l'algorithme Kryszkiewicz (2001) est toujours un sous-ensemble de l'ensemble des règles représen- tant), abaisser les seuils montre plus grandes différences. A titre de comparaison, la colonne de droite indique le nombre de règles au sens de la norme Agrawal et al. (1996). LANGUETTE. 2 - panier de jeu de données (nombre de règles) τ γ RR RR avec bmnsτ RR avec mnsτ standard 0,7 41 33 33 67 0,05 0,8 17 16 16 36 0,9 15 15 15 15 0,7 12 10 10 21 0,10 0,8 5 5 5 12 0,9 4 4 4 4 0,7 6 6 6 16 0,15 0,8 2 2 2 2 0,9 0 0 0 0 a titre d'exemple, dans le cas des seuils pour le soutien et la confiance sont 0,10 et 0,70, respectivement, il y a un total de 12 règles de représentation, parmi lesquels deux sont perdus lors de l'utilisation mns ou bmns (indiqués en caractères gras): [c: 0,70, s: 0,14] bière mâle frozenmeal⇒, [c: 0,72, s: 0,15] mâle frozenmeal⇒ cannedveg, [c: 0,86, s: 0,12] confiserie wine⇒ femelle, [c: 0,70, s: 0,14] mâle frozenmeal bière cannedveg⇒, [c: 0,82, s: 0,14] bière frozenmeal⇒ cannedveg mâle, [c: 0,84, s: 0,14] bière cannedveg⇒ frozenmeal mâle, [c: 0,71, s: 0,14] mâle beer⇒ cannedveg frozenmeal, [c: 0,81, s: 0,14] cannedveg frozenmeal⇒ bière mâle, [c: 0,73, s: 0,10] mâle fish⇒ donotownhome, [c: 0,89, s : 0,12] poisson fruitveg⇒ donotownhome, [c: 0,70, s: 0,10] donotownhome beer⇒ mâle, [c: 0,70, s: 0,11] donotownho moi frozenmeal⇒ mâle Dataset adulte est une version transactionnelle de la partie du jeu de la formation de l'ensemble de données de recensement UCI adultes des États-Unis, voir Asuncion et Newman (2007); il se compose de 32561 transactions sur 269 articles. Notez que dans ce cas, il existe des différences significatives entre la sortie de l'algorithme Kryszkiewicz (2001) et l'ensemble des règles de représentation (tableau 3). Par exemple, des seuils de soutien et de confiance de 0,05 et 0,8, respectivement, plus de la moitié des règles sont perdus. Nous avons mené des expériences sur un processeur Intel Core 2CPU 6300 @ machine à 1.86GHz avec 2 Go de RAM fonctionnant sous Microsoft Windows XP Professionnel. Le temps d'exécution o f trois J. L. et C. Balcázar Tîrnăucă TAB. 3 - Adult ensemble de données de recensement des États-Unis (numéro de règles) τ γ RR RR avec bmnsτ RR avec mnsτ standard 0,6 872 383 383 3443 0,05 0,7 781 425 425 2926 0,8 851 640 640 2426 0,6 326 124 124 1284 0,10 0,7 274 162 162 1083 0,8 345 270 270 923 algorithmes étaient entre 15 et 47 millisecondes dans le cas du marché et ensemble de données baignait entre 62 et 1203 millisecondes pour l'ensemble de données adultes. L'algorithme qui génère correctement toutes les règles de représentation est légèrement plus lent que les deux autres, mais, lors de nos tests, la différence était plutôt hors de propos depuis le temps nécessaire pour imprimer les résultats à l'écran (un dispositif plus lent que le CPU) domine toujours le processus. Il faut noter que la quantité de règles représentatives peut diminuer à la baisse des seuils de confiance ou de soutien. Ce phénomène a été observé et expliqué précédemment, voir Balcázar (2010), et est causé par des règles puissantes d'une confiance donnée, disons 0,8, qui sont filtrés à des seuils plus élevés, ce qui laisse donc beaucoup d'autres règles en tant que représentant, mais que la force tous ceux-ci sur les règles de représentation qu'ils deviennent redondantes lorsque le seuil de confiance passe en dessous de 0,8 et permet la règle puissante. 5 Perspectives comme les sujets de recherche futurs, nous souhaitons étendre la caractérisation donnée dans la proposition 5 de tous les itemsets fermés qui peuvent être décomposées en règles représentatives à la notion de redondance forte introduite dans Balcázar (2010), à savoir la redondance à base de fermeture. Additionnalité allié, un fait déconcertant que nous envisageons d'étudier plus est que, dans la plupart des ensembles de données réelles, nous avons exécuté nos algorithmes, notre première alternative du paragraphe 3.1, aussi incomplète, donne la même quantité de règles représentatives que le algorithme incomplet d'origine; cela peut indiquer que mieux comprendre les ensembles de règles obtenues par ces algorithmes incomplets pourraient être utiles. Références Aggarwal, C. C. et P. S. Yu (2001). Une nouvelle approche de génération en ligne de règles d'association. IEEE Transactions sur les connaissances et l'ingénierie des données 13 (4), 527-540. Agrawal, R., H. Mannila, R. Srikant, H. Toivonen et A. I. Verkamo (1996). découverte rapide des règles d'association. Progrès de la connaissance Découverte et exploration de données, p. 307-328. AAAI / MIT Press. Asuncion, A. et D. Newman (2007). référentiel apprentissage automatique UCI. Balcázar, J. L. (2010). Redondance, les systèmes de déduction, et les bases de taille minimale pour les règles de asso- ciation. Méthodes logiques in Computer Science 6 (2: 3), 1-33. Découverte à base ensemble fermé de l'Association représentant les règles Revisited Ceglar, A. et J. F. Roddick (2006). Association minière. ACM Comput. Surv. 38 (2). Clémentine (2005). Guide de l'utilisateur Clementine 10.0 de bureau. Cristofor, L. et D. A. Simovici (2002). Génération d'une couverture informative des règles d'association. Dans Proc. de la Conférence internationale IEEE 2002 sur les mines de données (CISM), pp. 597-600. IEEE Computer Society. Hamrouni, T., S. Ben Yahia et E. Mephu Nguifo (2008). Succinctes générateurs minimaux: fondements théoriques et applications. Int. J. Trouvé. Comput. Sci. 19 (2), 271-296. Kryszkiewicz, M. (1998a). découverte rapide des règles d'association représentatives. Dans L. Polkowski et A. Skowron (Eds.), Proc. de la 1ère Conférence internationale sur les ensembles bruts et les tendances actuelles en informatique (RSCTC), volume 1424 de notes de cours en intelligence artificielle, pp. 214-221. Springer-Verlag. Kryszkiewicz, M. (1998b). règles d'association représentatives. Dans X. Wu, K. Ramamohanarao et K. B. Korb (Eds.), Proc. de la 2e Conférence Asie-Pacifique sur la découverte de connaissances et d'exploration de données (PAKDD), volume 1394 de Lecture Notes in Intelligence artificielle, pp. 198-209. Springer-Verlag. Kryszkiewicz, M. (2001). ensemble fermé découverte basée sur des règles d'association représentatives. Dans F. Hoffmann, D. J. main, N. M. Adams, D. H. Fisher et G. Guimarães (Eds.), Proc. du 4e Symposium international sur l'analyse intelligente des données (IDA), volume 2189 de Lecture Notes in Computer Science, pp. 350-359. Springer- Verlag. Kryszkiewicz, M. (2002). représentations concises des règles d'association. Dans D. J. main, N. M. Adams, et R. J. Bolton (Eds.), Proc. de l'atelier sur le FSE Exploratoire Motif De- tection et découverte, volume 2447 de Lecture Notes in Computer Science, pp. 92-109. Springer-Verlag. Luxenburger, M. (1991). Dans un Implications partielles Contexte. Mathématiques et Sciences Humaines 29, 35-55. Pasquier, N., R. Taouil, Y. Bastide, G. Stumme et L. Lakhal (2005). Génération d'une représentation condensée des règles d'association. J. Intell. Inf. Syst. 24 (1), 29-60. Phan-Luong, V. (2001). La base représentative des règles d'association. Dans N. Cercone, T. Y. Lin et X. Wu (Eds.), CISM, p. 639-640. IEEE Computer Society. Zaki, M. J. (2004). Exploitation minière règles d'association non redondants. Données Min. Knowl. Décou. 9 (3), 223-248. La sortie d'CV un de mineur d'association rules is in the Énorme Souvent pratique. C'est several Pourquoi sans représentations concises perte were proposées, les rules Que Telles « Essentielles » ou « » REpRésEntants. Nous reviendrons sur l'Kryszkie- par Donné Algorithme wicz (Int. Symp. L'analyse intelligente des données 2001, Springer-Verlag LNCS 2189, 350-359) pour L'extraction des rêgles représentants. Nous montrons sa production Que is incom- plète Parfois, à cause de d'à la Une manque de preuve mathématique de validité this algorithme, et nous proposons un de Générateur complet avec remplacement les Presqu'île temps d'éxécution Mêmes.