indexation virtuelles médiateur traitement xquery clément jamard georges gardarin laboratoire prism université versailles 78035 versailles cedex france prénom prism résumé intégrer traitement requêtes recherche information médiateur problème difficile notamment certaines sources données permettent recherche clefs distance classer résultats suivant pertinence article abordons intégration fonctionnalités principales standard xquery xlive médiateur xquery avons choisi indexer virtuelles documents documents virtuels sélectionnés transformés objets sources opérateur sélection médiateur étendu supporter recherches information documents recherche clefs classement résultat ainsi supportés notre formule classement résultats adaptée format données structurées nombre clefs différents éléments distance entre éléments résultat introduction xquery devenant standard interroger nouveaux besoins apparaissent recherche information buston spécifient prédicats fonctionnalités recherche information intégrer xquery comme recherche élément contenants clefs classement résultats selon pertinence recherche suffixes préfixes premier ensemble fonctionnalités requises xquery défini buxton texquery yahia langage précurseur certaines fonctionnalités citées précédemment comme simple recherche clefs communes présentes plupart données distribuées abord recomposer partitions avant pouvoir effectuer recherche contenu importantes fonctionnalités souvent nécessaires applications faciles implanter système distribué classement résultats recherches conjonctives clefs recherches racines leurs préfixes suffixes difficilement réalisables auparavant recomposer données dispersées indexation virtuelles médiateur nombreux systèmes médiation données basés xquery disponibles comme papakonstantinou xquark basés architecture intégration travers globales supportent ensemble langage xquery notre connaissance aucun entre supporte langage xquery alors plupart applications intégration données orientées recherche information textuelle rappelons objectif essentiel médiateur fédérer sources données autour architecture répondant manque capacité sources plupart natifs relationnels permettent recherche plusieurs clefs documents majorité systèmes capacités différentes google interrogé collection virtuelle documents système efficace effectuer recherche clefs classer résultats suivant pertinence xyleme abiteboul natif permet aussi effectuer recherche efficace clefs systèmes capacités propres intéressantes aucun permet répondre toutes fonctionnalités xquery existe besoin intégration fonctionnalités langage systèmes médiation sorte pouvoir interroger manière uniforme toutes sources hétérogènes certaines capacités difficilement intégrables elles spécifiques système comme classer résultats suivant pertinence chaque système offrir propres fonctions jusqu université versailles avons impliqué développement xquark fusion médiateur source xquark avons extrait projet médiateur léger nommé xlive utilisé comme outil recherche xlive gardarin intègre interroge sources relationnelles xquery large ensemble xquery reconnu incluant expressions requêtes imbriquées chaque source fédérée possède propre adaptateur wrapper capable exécuter ensemble xquery modèle exécution xalgébre algèbre dérivée algèbre relationnelle adaptée données structurées cette algèbre représente documents comme tuples éléments désignés xpath référençant arbres codant tuples appelés xtuple médiateur évalue plans composés opérateurs xalgebre ensembles xtuples recompose résultats données interrogées xlive distribuées plusieurs sources point important intégration fonctionnalités recherche information xlive gestion capacités sources techniques indexations implémentées sources capables permettre recherches clefs documents comme clefs souvent recherchés éléments précis indexation position requise plusieurs techniques indexation proposées systèmes centralisés recherche éléments contenant clefs aperçu techniques disponible gardarin techniques comme index suciu indexes kaushik indexes permettent réduire taille index indexant chemins xpath utiles chemins peuvent déterminés modèles spécifiques index sélectionnant chemins fréquemment demandés réduisant longueur chemins kaushik encore basant charge requêtes index fabric cooper évite référencer nœuds codant chemins nœuds terminaux feuilles jamard gardarin stockant patricia cette approche nécessite extensions garder ordre chemins permettre correspondance partielle éléments notre approche propose unifier capacités sources travers médiateur définit données distribuées plusieurs sources permet interrogation xquery médiateur matérialise éviter réplication données indexe position texte éléments structurant proposons système indexation efficace contenu textuel repose guide applé viewguide véritable résumé structurel dérivé définition notre système adapté localisation clefs localisation données sources xquery bremer gertz propose techniques similaires recherche information xquery aussi indexation adaptée structure arborescente permet résoudre requêtes pattern arbre filtres applicables données système centralisé originalité notre approche indexer virtuelles avoir solution complète opérationnelle efficace comme montre premières mesures suite article organisée comme section présente système indexation proposé section présente traitement requêtes indexées méthode classement résultats suivant pertinence résultats expérimentaux notre système ensuite rapportés conclusion rappelle contributions introduit travaux futurs indexation textuelle principale question savoir comment intégrer méthodes recherche contenu sources distribuées hétérogènes systèmes médiation utilisent souvent cibler recherche sources données pertinentes combiner intérêt recherche information avons décidé utiliser matérialisées contenu indexé médiateur stocké principes avons choisi indexer contenu création maintenir index mises position termes mémorisée niveau médiateur permet répondre efficacement requêtes xquery index détermine indirectement adresse éléments évite importants transferts données entre sources médiateur seules données pertinentes échangées évite également médiateur manipuler travers opérations complexes recherche information ensemble données ainsi gérer index compact efficace notre approche éviter médiateur opérations difficiles identifiants utilisés notre index référencent structures gérées adaptateurs objets sources structures permettent localisation extraction recomposition données efficacement partir sources lorsqu source celle reporter médiateur mettre identifiants index mécanisme trigger polling périodique source mécanisme report dépend adaptateur source indexation virtuelles médiateur position termes retrouver éléments contenant terme contenu textuel indexé façon précise position terme identifiée document chemin élément contenant proposons système identification élément coder cette position façon compacte unique système numérotation élément identifié identifiant document global identifiant élément correspondant chemin menant élément définition identifiant document global identifiant numérique alloué médiateur identifiant document définition identifiant élément identifiant déterminant manière unique élément chemin coder utilisons guide résumant structure définition guide viewguide arbre représentant structure commune documents nœuds correspondent éléments attributs liens entre éléments marqués cardinalité simple multiple chaque chemin distinct documents représenté seule guide collection catalog return critic author return author author genres title collection review review where return review return rating author comments collection comments comment where return comment comment comments review critic critic review author genres title rating author comments comment critic review author genres title rating author comments comment review critic author author genres title rating author comments comment comment définition xquery viewguide instance document requête xquery définition viewguide viewguide quelque similaire dataguide widom diffère points suivants uniquement résumé structurel documents jamard gardarin dérivé définition requête définissant liens annotés cardinalité multiple éléments viewguide permet attribuer identifiant élément chaque élément document chaque élément correspond identifiant numérique unique déterminé parcours préfixe arbre figure présente exemple viewguide élément critic document cette contient élément monovalué englober plusieurs éléments review multivalué création guide impose requête définissant figure décrive complètement structure documents clause return composé façon suivante préfix identifiant correspondant chemin guide suffixe regroupant cardinalités éléments multivalués traversés racine élément concerné identifier chemin correspondant critic review viewguide traverse éléments dernier identifiant utile chemin unique viewguide document exemple figure possède élément review contenant éléments correspond chemin critic review identifiant élément suffixe associé identifiant chemin permet identifier manière unique deuxième élément premier élément review suffixe utilisé éléments multivalués élément monovalué suffixe exemple chemin critic title indiquer position élément identifiant document associé identifiant chemin figure chaque élément critic document élément author seconde review quatrième document identifié couple identifie manière unique élément coder chemins multiples utilisons patterns identifiant éléments permettant spécifier plusieurs éléments multivalués traversés chemin critic review spécifie élément review choisir pattern correspondant premier importe review patterns identifiants utilisés traitement requête définition pattern identifiants ayant suffixe signifiant élément valide index médiateur liste inversée termes importants donnant chacun position virtuelle définition index index termes donnant chaque terme liste identifiants apparaît terme préfixe suffixes préfixe suffixes tables position record1 record2 indexation virtuelles médiateur position terme repérée couple index permet retrouver toutes positions création médiateur insère entrées index mises sources répercutées entrées index paires terme table position table position table référençant préfixe suffixes chaque retrouve ligne préfix ensemble suffixes ordonnés cette organisation entrées illustrée tableau utilisée algorithme traitement requêtes position sources données structure appelée source maintient mapping entre document sources contenant données composant document données considérées comme documents locaux référencés identifiant identifiant associé opération extraction définition identifiant document local identifiant numérique alloué wrapper permettant récupérer données correspondantes source création chaque wrapper source contenant données reçoit requête extraire données wrappers fournissent données médiateur construit résultats suivant définition chacune données renvoyées correspondance objet local dépend wrapper wrapper fichier fichier bases identifiant document bases relationnelles référence requête xquery permettant transformation tables relationnelles partir wrapper capable interroger source renvoyer données correspondantes médiateur recompose alors document suivant définition récupérant données definition source structure mapping entre plusieurs exemple données review comment réparties trois sources document exemple alors quatre correspondant successivement review comment traitement requête algorithme traitement requêtes retrouve entrées index correspondant recherche textuelle liste parties correspondant documents sélectionnés alors extraites recomposer documents détaillons cette partie comment effectue recherche éléments contenant clefs comment étendre cette recherche fonctionnalités xquery introduisons aussi notre système classement résultats suivant pertinence trouver éléments pertinents recherche plusieurs clefs xquery repose paramètres espace recherche liste clefs espace recherche définit ensemble éléments lesquels effectuer recherche typiquement xpath jamard gardarin concentrons recherches conjonctives clefs éléments devant contenir clefs prédicats requêtes forme ftcontains éléments clefs expressions régulières joker wildcard autorisées requête retourner éléments critic ayant élément review contenant termes databases exprime xquery comme collection critic_view critic where review ftcontains databases return algorithm intersect input keyword position variables intersect current_id test_id tmp_res identif search_space filter result result current_id nextelement search_space while hasnextelement search_space intersect test_id nextelement search_space aucun élément document itération élément suivant while test_id current_id current_id test_id trouve prochain élément while test_id current_id test_id nextelement search_space intersecte espace recherche tmp_res intersection test_id current_id search_space intersection valide passe liste suivante intersection invalide passe élément suivant tmp_res tmp_res descendantof result intersect tmp_res intersect current_id test_id current_id nextelement search_space break intersection valide entre toutes listes résultat validé intersect result intersect last_res intersect current_id nextelement search_space algorithme intersection recherche éléments résultat effectue étapes déterminer espace recherche calculer ensemble éléments contenant chacun clefs extraire données sources recomposer résultats espace recherche définit utilisant patterns identifiants élément dérivé expression xpath correspondant prédicat requête xpath définissant espace recherche requête exemple critic review correspond pattern recherche clefs effectue élément review descendants clefs peuvent trouver parmi éléments comments comment author rating retrouver identifiants correspondant descendant élément matrice booléenne indique relation ancêtre descendant entre identifiants élément ancêtre guide cette matrice fournit méthode rapide retrouver relation entre éléments espace recherche critic review ainsi déterminé patterns allant médiateur interroge index calculer ensemble entrées contenu espace recherche chaque ensemble éléments résultat indexation virtuelles médiateur intersection entrées opération intersection entrées détermine ancêtre commun éléments appartient espace recherche réduire nombre opérations intersections intersections calculées éléments respectant conditions suivantes ordre égalité identifiants documents intersection éléments documents différents nulle préfixe correspond descendant espace recherche entrées espace recherche considérées suffixe intersecté correspond intersection calculée figure décrit algorithme intersection calcule chaque intersection valide entre listes identifiants espace recherche première condition vérifiée lignes sélectionnant entrées document seconde vérifiée chaque accès identifiants lignes élément choisi parmi lignes tables position correspondant espace recherche troisième appliquée ligne vérifiant intersection calculée comme entrées ordonnées suffixe tables position aucune intersection oubliée condition ligne sélectionne toujours petit intersection algorithme appliqué tables position tableau espace recherche identifiant seules entrées lignes sélectionnées intersections valides entre record1 record2 record1 record2 toutes autres intersections espace recherche calculées traitement autres patterns supporter fonctionnalités xquery recherche plein texte xquery permet recherches niveau élément chemin depuis racine document identifie cette position aussi relativement autres élément chemin position texte identifient cette position index présenté précédemment permet répondre requêtes position niveau élément autres fonctionnalités comme distance entre ordre classement résultats nécessitent connaître position termes précisément entrées index peuvent complétées ajouter position rapport début texte élément fonctionnalités index élément élément position données tableau index élément index élément position ftcontains information ftcontains distance ftcontains stemming ftcontains ordered ftcontains thesaurus ftcontains information starts ftcontains inform regex ftcontains exact content ftcontains without content ftcontains prédicats xquery calculable index jamard gardarin classement résultats méthode classement associe poids pertinence chaque résultat médiateur classer résultats provenant plusieurs sources regrouper renvoyer ordre classement architecture proposée permet calculer poids chaque résultat avant recomposer données calcul réalisé interrogation index formule classement précise aussi calculable informations contenues index poids résultat somme poids chaque élément résultat contenant plusieurs clefs notre approche basée spécificité chaque résultat cette méthode donne influence éléments proche racine résultat effet proches racine importants éléments profonds arbre résultat cette méthode reste encore assez simple puisqu prend compte position relativement entre éléments contenant plusieurs recherchés voient influence également augmenter pourcentage clefs présent élément rapport ensemble clefs recherchés facteur polynomial ajustant poids élément finalement formule suivante calcule poids élément poids recherché nombre total recherchés prédicat nombre recherchés présents élément distance entre élément racine résultat nombre liens constante permet faire varier influence distance racine facteur polynomial permet augmenter influence éléments contenant recherchés poids total résultat somme poids chaque élément contenant clefs cette formule modulable adapter besoin utilisateur étendue remplacée ainsi médiateur intégrer autres formules reposant informations index formule ajustable suivant application autres systèmes proposent solutions concrètes classer résultats requête recherche clefs xrank propose formule calculée suivant nombre entrant sortant inter intra document élément système utilise comme métrique proximité termes fenêtre minimum contenant termes facteur reste global tenant compte structure résultat distance aussi prise compte comme notre approche éléments éloignés moins importance autres systèmes comme gerhard opérateur imprécision donnant degré similarité entre structure résultat demande requête xirql norbert découpe documents objets recherche objets suivant pertinence contenu retour expériences avons testé performances système trois données données présentées tableau stockées taille données indexation virtuelles médiateur taille composée suivant structure critic avons mesuré temps recherche trois prédicats critic review ftcontains critic ftcontains without content title critic ftcontains données exécution intersection mediator 18501 données evaluation intersection requêtes renvoient documents contenant clefs recherche définie plusieurs parties éléments review review title ensemble nombre clefs varient entre temps exécution requêtes moyenne exécutions pentium 512mo mémoire second tableau tableau donne temps exécution clefs chaque données exécution réalisée indexée opérateur recherche médiateur occupe opération recherche chaque document temps présenté recherche index inclut temps recherche index index source extraction recomposition résultats médiateur opérateur recherche temps inclut recomposition résultats suivant définition application prédicat recherche clefs opérateur sélection comme prévu exécution utilisant index efficace seulement résultats pertinents extraits sources chaque donnée ratio obtenu requêtes sélectionnant ensemble documents 26words words temps évaluation recherche index temps recherche index algorithme intersection listes présenté dernier tableau tableau requête comparé temps exécution total requête tableau précédent recherche index représente moins tests jamard gardarin préliminaires montrent validité approche moins données transférées opération recherche niveau médiateur rapide index premier graphe figure illustre temps algorithme intersection retrouver entrées pertinentes requêtes remarque exécute rapidement sélections faites algorithme intersection espace recherche étant restreint celui second graphe figure présente temps recherche index chaque donnée temps recherche augmente linéairement lorsqu nouveau ajouté recherche finalement requêtes basiques moins clefs système efficace temps recherche index négligeable conclusion article avons présenté intégration xquery médiateur principale difficulté intégrer sources répondant capacités proposons utiliser indexées permettre intégrer fonctionnalités sources médiateur indexe utilisant résumé structurel guide permet coder position éléments xpath indexer contenu opérateur recherche clefs utilise algorithmes basés système identifiant exécution requête xquery système intègre formule classement adaptée structure arborescente résultats reste autres aspects important aborder gestion capacités sources lorsqu source reconnaît partie xquery construites devraient prendre compte cette capacité limiter indexation sources capables distribuant traitement requête sources capables classement résultats semble simple source classement global testé détails notamment comparaison autres formules vraies applications dernier aspect préciser gestion mises jours sources index insertion suppression objets sources références abiteboul cluet ferran rousset xyleme project computer networks yahia botev shanmugasundaram texquery search extension xquery liquid weblogic liquiddata docs11 bremer gertz xquery integrating document retrieval webdb buxton editors xquery xpath requirements working draft xquery requirements index adaptive structural summary graph structured sigmod indexation virtuelles médiateur chung adaptive index sigmod conference cooper sample franklin hjaltason shadmon index semistructured gardarin federating heterogeneous sources iasted conference pages scottsdale norbert großjohann xirql query language information retrieval documents sigir gardarin georges treeguide index enabling efficient query processing bases données avancées montpellier octobre botev shanmugasundaram xrank ranked keyword search documents sigmod conference information integrator content software kaushik shenoy bohannon gudes exploiting local similarity indexing paths graph structured suciu index structures expressions papakonstantinou queries algebra enosys integration platform knowl theobald weikum index based search engine querying relevance ranking widom stanford xquark xquark project source information integration components based xquery xquark summary supporting query mediator difficult problem because sources provide keyword search ranking paper report integration functionalities emerging xquery standard xlive xquery mediator approach index virtual documents views selected virtual documents demand mapped source objects mediator selection operator efficiently extended support search views keyword search result ranking integrated results using relevance formula adapted results based number keywords elements distance searched nodes