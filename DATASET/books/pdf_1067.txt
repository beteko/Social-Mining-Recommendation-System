recherche temps préfixes massifs hiérarchiques réseau techniques stream mining pascal cheung fabrice clérot france télécom avenue pierre marzin 50702 22307 lannion cedex france pascal cheungmonchan fabrice clerot francetelecom résumé cours dernières années nombreuses techniques stream mining proposées analyser données temps article montrons comment avons utilisé techniques stream mining permettant recherche objets massifs hiérarchiques hierarchi heavy hitters données identifier temps réseau préfixes contribution trafic dépasse certaine propor trafic pendant intervalle temps donné introduction progrès techniques récents conséquence augmentation nombre information croissance rapide leurs débits architecture traditionnelle analyse données données préalablement stockées analysées rafraîchies étant inadaptée traitement nouvelle famille techniques dites stream propose inverser radicalement cette architecture mettre oeuvre systèmes reposant capacités stockage minimales mises vitesse objectif article expliquer comment avons utilisé techniques stream mining identifier temps réseau préfixes contribution trafic dépasse certaine proportion trafic pendant intervalle temps donné recherche objets massifs hiérarchiques données notion objet massif hiérarchique données allons considérer forme instant identifiant appartient ensemble marque nombre positif article identifiant correspondra adresse exemple adresse destination paquet transitant point donné réseau semble correspondra ensemble adresses autrement chaque adresse comportera marque correspondra nombre octets transportés paquet recherche préfixes massifs considéré cependant concepts algorithmes allons présenter peuvent naturellement appliquer données forme précédente1 classiquement données définit compte identifiant instant sinon exemple dessus compte adresse représente nombre total octets instant envoyés adresse transité point considéré alors intéresser objets massifs heavy hitters instant identifiants compte supérieur fraction compte total particulier ensemble identifiants étudié organisé façon hiérarchique également intéressant effectuer recherche objets massifs cette hiérarchie2 ainsi exemple dessus regrouper adresses préfixe3 associer préfixe donné somme comptes adresses commençant préfixe finalement rechercher instant donné préfixes compte supérieur fraction donnée compte total inconvénient cette proche préfixe donné objet massif alors préfixes contenus préfixe autrement préfixes ancêtres préfixe considéré seront aussi objets massifs alors parfois souhaitable tenir compte contribution objet massif lorsque recherche objets massifs parmi préfixes courts pourquoi notion objet massif hiérarchique hierarchical heavy hitters intro duite cormode objets massifs hiérarchiques identifiants appartiennent hiérarchie définis façon récursive objets massifs hiérarchiques niveau niveau hiérarchie objets massifs objets massifs hiérarchiques niveau sommets hiérarchie niveau somme comptes identifiants leurs descendants appartiennent objets massifs hiérarchiques niveau inférieur supérieure égale présentation détaillée notion objet massif hiérarchique pourra consulter cormode algorithme recherche objet massif hiérarchique cormode allons présenter brièvement algorithme recherche objet massif hiérarchique introduit cormode servi algorithme recherche avons effectivement œuvre algorithme cormode resse repose utilisation chaque niveau hiérarchie structure données appelée sketch chaque instant fonction partir exemple intéresse articles fréquemment achetés marchand algorithmes présentés article peuvent appliqués formé référence article catalogue nombre exemplaires article achetés transaction donnée appelle hiérarchie ensemble arbre sommets ensembles racine ensemble feuilles éléments enfants chaque sommet forment partition adresse constituée suite préfixe longueur adresse donnée suite premiers cette adresse regroupement adresses préfixe naturel espace adressage organisé réseaux réseaux adresses appartenant réseau réseau donné possèdent toutes préfixe appelé préfixe réseau préfixe réseau étendu détails organisation hiérarchique adresses huitema cheung clérot laquelle obtenir instant estimation compte chaque sommet niveau hiérarchie4 obtenir liste estimée objets massifs rarchiques instant explore récursivement hiérarchie commençant hiérarchie cormode détails liste estimée obtenue coïncide liste exacte lorsque toutes comptes estimés utilisés explo ration hiérarchie coïncident compte exact cormode cette estimation effectuée algorithme random subset introduit gilbert algorithme algorithme monte carlo garantit réels positifs inférieurs utilisant espace mémoire stockage sketch nombre opérations sketch ainsi calcul estimateur compte sommet conséquent algorithme obtient finale nécessite espace mémoire hauteur hiérarchie stockage ensemble sketches nombre opérations ensemble sketches nombre opérations nombre maximum enfants chaque sommet hiérarchie recherche objets massifs hiérarchiques algorithme avons œuvre récemment cormode muthukrishnan proposé autre sketch count sketch comme algorithme algorithme permet obtenir estimation compte sommet instant cependant algorithme avantage garantir utilisant espace mémoire seulement stockage sketch nombre opérations seulement sketch ainsi calcul estimateur compte sommet pourquoi comme suggéré cormode muthukrishnan avons utilisé algorithme place rithme estimer compte chaque sommet obtenons ainsi algorithme recherche objets massifs hiérarchiques nécessite espace mémoire stockage ensemble sketches nombre opérations ensemble sketches nombre opérations nombre maximum enfants chaque sommet hiérarchie recherche objets massifs hiérarchiques réduction substantielle nombre opérations nécessaire chaque jour5 particulièrement appréciable effet souhaite traiter données temps indispensable effectuer cette cadence laquelle reçoit éléments conséquent ayant nettement moins opérations effectuer pourra puissance calcul identique traiter temps données arrivant cadence élevée raison nombre souvent élevé sommets hiérarchie serait général coûteux mémoire tenir compteur sommet hiérarchie obtenir compte exact chaque sommet ainsi niveau hiérarchie adresses constitué ensemble adresses comporte sommets exemple gagne facteur recherche préfixes massifs application réseau algorithme présenté appliqué données réelles provenant routeur cisco installé réseau france télécom raisons pratiques analyse effectuée adresses flots données enregistrés sonde netflow activée routeur sommer feldmann trace présentons analyse corrrespond vingtaine minutes trafic millions paquets volume notre analyse réalisée adresses sources toutes destinations confondues seuil avons représentatif seuils choisis utilisateurs6 hiérarchie utilisée analyse avait hauteur avons tracé négatifs7 positifs8 fonction précision différentes valeurs probabilité échec titre exemple avons représenté figures courbes obtenues probabilité échec avons également étudié quantité mémoire utilisée algorithme décrit fonction paramètres résultats avons obtenus montrent choisit judicieusement paramètres algorithme présenté permet obtenir trace étudiée positifs négatifs négligeable nécessitant quantité mémoire raisonnable pratique exemple prenant obtient positifs négatifs inférieur utilisant environ millions conclusion comme suggéré cormode muthukrishnan avons utilisé algorithme place algorithme rechercher objets massifs hiérarchiques méthode présentée cormode cependant alors cormode muthukrishnan préconisent cette solution données marque négative11 avons délibérément appliqué algorithme données marque obligatoirement positive nulle effet méthodes proposées cormode rechercher objets massifs hiérarchiques données marque obligatoirement positive nulle présentent inconvénients suivants méthodes nécessitent quantité mémoire précision donnée augmente compte total autre effet nombre maximum objets massifs hiérarchiques instant donné majoré cormode prenant seuil obtient centaine objets massifs hiérarchiques convient souvent utilisateurs appelle négatif objet massif hiérarchique détecté algorithme appelle positif préfixe considéré algorithme comme étant objet massif hiérar chique réduisant avantage valeur avons obtenu légère amélioration performances alors quantité mémoire utilisée augmentait considèrablement 10nous présentons courbes manque place cormode exemple données marque négative 12pour notre application cette dépendance gênante permet choisir priori précision algorithme permettra utiliser mieux mémoire disponible effet méthodes choisit précision élevée exigera beaucoup mémoire ainsi adaptée faible trafic risquera manquer mémoire trafic élevé prévu durant période étudiée contrario choisit précision faible exigera mémoire ainsi adaptée trafic élevé cheung clérot méthodes conçues uniquement rechercher objets massifs hiérarchiques données marque obligatoirement positive nulle adaptation données marque négative paraît difficile solution avons œuvre présente inconvénients notre nombre nécessaire mémoire reste constant temps particulier dépend compte total nécessaire estimer finement avance volume trafic observé durée totale pendant laquelle analyse effectuée13 comme mémoire nécessaire méthodes cormode majorant solution avons œuvre nécessite considérer types algorithmes occupent mémoire ordre grandeur lorsque obtient compte total rapidement atteint pratique application avons étudiée conséquent solution avons œuvre pertinente permet mieux exploiter mémoire disponible méthodes proposées cormode autre adaptation solution avons œuvre données marque négative extrêmement simple suffit modifier estimation compte chaque préfixe remplaçant minimisation intervient cette estimation recherche médiane cormode muthukrishnan solution avons œuvre possède grande flexibilité permettra réutiliser facilement programmes écrits lorsque étudierons données marque négative epsilon negatifs fonction precision négatifs fonction précision probabilité échec était fixée chaque valeur précision algorithme présenté exécuté représenté cette figure moyen négatifs ainsi boxplots correspondant 1erquartile médiane quartile utilisé mémoire disponible trafic faible prévu durant période étudiée simplement assurer préalable taille utilisée reste suffisante toutes situations envisageables recherche préfixes massifs epsilon positifs fonction precision positifs fonction précision probabilité échec était fixée chaque valeur précision algorithme présenté exécuté représenté cette figure moyen positifs ainsi boxplots correspondant 1erquartile médiane quartile auteurs remercient guillaume picard commentaires pertinents version préliminaire article références cormode muthukrishnan srivastava finding hierarchical heavy hitters streams international conference large databases cormode muthukrishnan improved stream summary count sketch applications journal algorithms gilbert kotidis muthukrishnan strauss summarize universe dynamic maintenance quantiles huitema routage internet editions eyrolles sommer feldmann netflow information procee dings sigcomm workshop internet measurment press summary years stream mining algorithms proposed perform analysis streams paper recent stream mining algorithms online identification hierarchical heavy hitters traffic those prefixes whose frequencies exceed specified threshold