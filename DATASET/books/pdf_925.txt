construction incrémentale visualisation graphes voisinage fourmis artificielles julien lavergne hanene azzag christiane guinot gilles venturini laboratoire informatique ecole polytechnique université tours avenue portalis 37200 tours france julien lavergne gilles venturini tours antsearch tours webrtic laboratoire informatique université paris avenue baptiste clément 93430 villetaneuse france hanene azzag paris13 paris13 victor 92521 neuilly seine france christiane guinot ceries ceries résumé article décrit nouvel algorithme incrémental nommé antgraph construction graphes voisinage inspire comportement assemblage observé fourmis réelles dernières fixent progres sivement support successivement fourmis fixées créer structure vivante utilisons ainsi approche fourmis artificielles chaque fourmi représente donnée indiquons comment comportement utilisé construire manière incrémentale graphe partir mesure similarité entre données montrons finalement notre algorithme obtient meilleurs résultats comparaison graphe voisins relatifs notamment terme temps calcul introduction article intéressons problème suivant étant donné ensemble données matrice similarité entre données comment permettre expert explorer ensemble données manière visuelle proche guidée contenu considérons expert souhaite avoir globale données également exploiter localement données shneiderman particu passer autre relation voisinage tenant compte similarité notre problème décompose parties établir graphe voisinage entre données partir similarité visualiser graphe permettre utilisateur explorer allons concentrer méthodes construction graphes voisinage hacid zighed structure également appelée construction incrémentale graphes voisinage graphe proximité utilisation graphes retrouve aussi fouille données classiques spatiales apprentissage classification données ester cependant algorithmes construction graphes grande complexité exemple algorithme voisins relatifs inefficaces grands volumes données sommes intéressés article méthode biomimétique construc incrémentale graphe généralisation algorithme anttree proposé azzag thèse auteur introduit algorithme classification supervisée hiérarchique capable traiter importe données principe assemblage observé population fourmis réelles présenté lioni proposons généralisation anttree utilisant graphe comme modèle structure allons chercher construire graphe voisinage représentatif similarité existante entre données complexité inférieure celle observée méthodes classiques voisins relatifs graphes gabriel triangulation delaunay suite notre article organisée comme section présentons principes graphes voisinage quelques modèles référence celui voisins relatifs auquel comparons notre algorithme section détaillons rithme construction ainsi ensemble règles locales comportement fourmis artificielles précisons également cette section méthode visualisation utilisée réaliser affichage graphes voisinage section quant consacrée résultats étude comparative bases données numériques dernière section rassemble conclusions faites cours article présente perspectives graphes voisinage visualisation principes graphes voisinage considérons graphe ensemble noeuds graphe ensemble arêtes contenu graphe appelé graphe voisinage propriété contre respectée existe relation binaire entre points seulement couple points autres termes point donné voisinage ensemble points graphe contenant autres sommets directement connectés notre chaque noeud sommet graphe donnée liens connecter noeuds entre doivent représenter information voisinage données cette information notion distance entre données existe plusieurs méthodes établir graphe triangulation delaunay preparata shamos relier entre elles données vérifient propriété suivante cercle passant trois sommets chaque triangle contient aucune autre donnée graphe gabriel construit selon gabriel sokal données voisines hypersphère rayon passant enfin graphe voisins relatifs obtient propriété énoncée toussaint respectée données voisines intersection sphères centrées respectivement rayon lavergne manière générale méthodes incrémentales nécessitent données soient numériques elles coûteuses temps calcul effet chaque point espace donné construction graphe voisinage nécessite déterminer proximité point autres points complexité algorithmes avère polynomiales attali renseigne triangulation delaunay graphe gabriel complexité représente nombre attributs données heure actuelle voisins relatifs expriment hacid zighed largement utilisés résoudre nombreux problèmes comme indique toussaint récemment extension proposée construire manière incrémentale graphe voisinage hacid zighed cette approche compléter graphe existant phase visualisation graphes forces ressorts existe nombreux algorithmes visualisation graphes battista travaux recherche algorithmes ressorts commencent tutte poursuivent eades dernier utilise analogie suivante expliquer visuali sation dynamique graphes compare arêtes graphe ressorts système ainsi considéré engendre forces entre sommets provoque naturellement placements sommets sommets attirent repoussent notion attraction entre sommets réalise grâce arêtes cherchent atteindre distance cible associée eades ajoute notion forces répulsion sommets condition arrêt initialement proposée système nombre maximum itérations évolution graphe temps plusieurs recherches ensuite consacrées domaine pouvons citer entre autres kamada kawai frick fruchterman reingold différentes propositions amené établissement plusieurs modèles visualisation namique graphes baserons fruchterman reingold offre méthode générique visualisation etant donné graphe voisinage définit notre outil longueur atteindre entre chaque couple noeuds voisins notion similarité existante entre données correspondantes ensuite noeuds placés initialement manière aléatoire forces ressorts agissent jusqu stabilisation graphe offre alors visualisation homogène agréable utilisateur antgraph notre modèle extension algorithme anttree présenté azzag anttree effectue classification supervisée hiérarchique regrouper données importe numérique symbolique textuel forme arbre néralisons ainsi principes construire graphe fourmis comme connaissance départ mesure similarité entre données détaillons dessous règles construction graphe fourmis artificielles considérons ensemble données triées manière aléatoire chaque fourmi représenter donnée regrouper choisissons ensuite aléatoirement fourmi construction incrémentale graphes voisinage etapes construction graphe premier sommet constitue support fourmi suivante déplace cette seule fourmi similaire fourmi déplace compare fourmi fille vérifier similaire avons principe généralisé construction antgraph considérons comme point entrée étape construction graphe comme premier noeud graphe simulons actions chaque fourmi entre graphe noeud déplace noeud noeud jusqu connecte graphe alors passer fourmi suivante lorsque dépla cement fourmi laquelle trouve ensuite voisinage perçu correspond ainsi fourmis connectées intuitivement lorsque arrive graphe suivre chemin similarité maximum indiqué voisinage perçoit connecter établissant plusieurs liens algorithme suivant choix fourmi similaire implique plusieurs décision rapport position fourmi similaire possède fourmis voisines connecte alors directement fourmi similaire possède fourmis voisines déplace fourmi voisine similaire fourmi similaire possède fourmis voisines dernier présente lorsque fourmi similaire possède fourmis voisines raient également similaires figure connecte toutes fourmis voisines suffisamment similaires rapport seuil tolérance opération répétée récursivement toutes fourmis connectées voisines lavergne algorithme ensemble algorithme construction incrémentale entrées noeud graphe sorties graphe voisinage fourmi connectée faire place fourmi similaire alors déplace fourmi voisine similaire sinon fourmi similaire alors connecte possède fourmis voisines alors calcul seuil tolérance interroge fourmis voisines connecte voisines similaires récursivement voisines fourmis condition similarité finsi finsi précisons valeur seuil tolérance calculé manière suivante algorithme incrémental fourmis données ajoutées graphe etude comparative réalisons notre étude bases numériques artificielles réelles partie gauche table notre méthode traiter données moment similarité existe bases données artificielles fournies azzag bases réelles utilisons proviennent guinot repository machine learning blake autres noter chaque fourmi support choisie aléatoirement fourmis ajoutées graphe visualisations intéressons cette section étude comparative visualisations issues voisins relatifs antgraph comme auparavant utilisons algorithme ressorts produire cette visualisation soucis respect contraintes nombre pages pouvons afficher manière exhaustive visualisation toutes bases données précédemment citées table effet présentons premier temps comparaison visualisations quelques bases données entre voisins relatifs antgraph figure second temps intéressons influence seuil tolérance construction graphe antgraph figure construction incrémentale graphes voisinage données classes réelles texec voisins relatifs texec antgraph soybean thyroïd vehicle glass données utilisés notre comparaison entre voisins relatifs antgraph représente nombre attributs nombre données temps exécution secondes méthodes programmées tests réalisés pentium4 768mo mémoire pouvons remarquer figure visualisations obtenues antgraph ressemblance forte visualisations obtenues voisins relatifs distin guons regroupements données retrouvons visuellement classes réelles classes figure présente seuil tolérance qualité construction graphe visualisations correspondantes permettent constater valeur constante influence formation graphes avons évoluer constante présentons trois visualisations valeurs dessous obtenons graphes noeuds pratiquement connectés autres fourmis connectent fourmis similaires beaucoup autres valeur légèrement supérieure visualisons manière esthétique regroupement données classes fourmis connectent leurs voisines similaires enfin valeur proche graphe information fourmis connectent pratiquement seule voire fourmis similaires graphe transforme arbre visualisations probantes obtenons obtiennent valeurs supérieures temps exécution avons représenté partie droite table temps exécution obtenus méthodes uniquement calcul graphe comparaison algorithme voisins relatifs notre algorithme obtient meilleurs temps totalité bases exemple bases antgraph respectivement lavergne 77816 79308 10580 10792 78051 10680 492909 53318 498227 286279 293125 493585 287234 soybean 597013 603053 597724 thyroïd 19339 19658 21384 22072 19454 21553 extrait matrices confusion arêtes entre voisins relatifs antgraph signifie absence présence table indique nombre liens accord désaccord entre graphes construits chacune méthodes rapide pouvons remarquer nombre données important notre rithme rapide rapport algorithme voisins relatifs complexité dernier étant temps exécution devient prohibitif grands ensembles données niveau notre algorithme conserve temps exécution compétitifs présage nouvelles applications cadre grandes bases données représente avantage certain cette baisse complexité nouvelles fourmis arrivent comparent ensemble données présentes graphe suivent chemins grande similarité rencontrent ainsi nombre limité données titre indicatif arbre équilibré suivant branche racine feuilles rencontre noeuds néanmoins performances terme temps calcul renseignent directement qualité graphe construit avons poursuivi expérimentations graphe construit antgraph représentatif similarité entre données titre voisins relatifs construction incrémentale graphes voisinage données voisins relatifs antgraph glass soybean vehicle thyroïd moyenne distances valués voisins relatifs antgraph graphes construits proches voisins graphe reliant toutes données qualité graphes construits rappelons graphe représenter forme matrice binaire correspond existence entre sommets pouvons mesurer matrice confusion accord terme liens entre graphes table pouvons remarquer premier temps ensemble matrices confusion rapport nombre total liens entre sommets voisins relatifs antgraph autre relativement proche exemple graphe voisins relatifs totalise 19658 liens équivalent graphe antgraph 19454 méthodes accord point remarque accord entre liens créés graphes moitié liens voisins relatifs retrouvent antgraph enfin constatons notre algorithme produit entre liens voisins relatifs exemple voisins relatifs contient liens liens antgraph rapport voisins relatifs contient liens liens antgraph rapport constate antgraph construit liens voisins relatifs voisins relatifs difficile rencontrer situation noeud voisin grand nombre autres noeuds concernant antgraph devons alors interroger perti nence liens rapport voisins relatifs avons mesuré premier temps graphe donné similarité moyenne entre voisins second temps avons effectué mesure entre données considérant proches voisins troisième dernier temps mesure faite ensemble données lavergne table donne résultats obtenus constater alors antgraph liens supplémentaires manière aberrante rapport similarité effet similarité moyenne liens antgraph ordre grandeur celle proches voisins reste inférieure similarité moyenne graphe complet conclusion avons proposé article méthode construction graphes voisi inspire modèle construction structures fourmis artificielles graphe construit manière progressive incrémentale partir noeud initial chaque fourmi déplace suivant chemin grande similarité trouver noeud laquelle connecte avons testé notre approche ensemble bases avons montré temps exécution compétitifs rapport algorithme relatifs ailleurs tests qualité graphes montré également notre approche propose graphes représentatifs similarité entre données perspectives cours étude pouvons principalement indiquer pistes suivantes traitement grands volumes données paraît possible gràce temps courts ainsi souhaitons faire tests données visualiser évolution cours temps ensuite défaut notre approche voisins relatifs vient construction graphe découplée algorithme affichage autre graphe important facile calculer grâce complexité faible antgraph devient difficile afficher temps convergence algorithmes forces ressorts devient important allons combiner construction incrémentale graphe version incrémentale algorithme visualisation enfin avons commencé tester opérations interactives permettant parcourir graphe modifier décrochant noeuds ensuite réinjectés graphe cette manière allons rendre interactif outil exploration données remerciements auteurs tiennent remercier hakim hacid djamel zighed implémentation voisins relatifs références attali squelettes graphes voronoï thesis laboratoire images signaux grenoble azzag classification hiérarchique fourmis artificielles applications fouille données textes thesis université tours azzag monmarché slimane venturini guinot anttree model clustering artificial congress evolutionary computation canberra australia blake repository machine learning databases battista eades tamassia tollis graph drawing algorithms visualization graphs upper saddle river prentice construction incrémentale graphes voisinage eades heuristic graph drawing congressus numeranium volume ester kriegel sander spatial mining database approach proceedings symposium spatial databases frick ludwig mehldau adaptive layout algorithm undirected graphs dimacs international graph drawing fruchterman reingold graph drawing force directed placement practice experience volume gabriel sokal statistical approach geographic variation lysis systematic zoology chapter guinot malvy latreille tenenhaus morizot lopez dubertret tschachler recherche classification visage humaine saine méthode classification hiérarchique ascendante viièmes rencontres société francophone classification hacid zighed effective method locally neighborhood graphs kamada kawai algorithm general undirected graphs information processing letters volume lioni sauwens theraulaz deneubourg dynamics chain formation oecophylla longinoda journal insect behavior preparata shamos computational geometry introduction springer verlag shneiderman taxonomy information visualizations proceedings symposium visual languages washington computer society toussaint relative neighborhood graphs finite planar pattern recognition chapter toussaint insolved problems proximity graphs dearholt harrary memoranda computer cognitive science computing research laboratory mexico state university cruces tutte graph proceedings london mathematical society volume tutte summary paper present incremental algorithm building neighborhood graphs between inspired assembling behavior observed where progressively become attached existing support successively other attached artificial approach represents build graph depends similarity between compared results those obtained relative neightborhood algorithm numerical databases either ficial method competitive especially respect execution times lavergne comparaison voisins relatifs gauche antgraph droite bases construction incrémentale graphes voisinage extrait visualisations laquelle avons évoluer constante intervenant calcul seuil tolérance