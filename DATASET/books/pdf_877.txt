suppression itemsets essentiels classification basée règles association luong université provence laboratoire informatique fondamentale marseille joliot curie 13453 marseille france phanluong résumé classification basée règles association itemsets essentiels suppression itemsets affecte précision classifieur construction travail montre parmi itemsets intéresser seulement petites tailles encore étudie généralisation propriété importante itemsets montre parmi itemsets petites tailles signi ficatifs classification itemsets essentiels définis expériences menées grands données montrent optimisation suppression itemsets correcte efficace introduction etant donné ensemble objets ensemble étiquettes classes problème classification chercher fonction attribuer chaque objet étiquette classe telle fonction appelée classifieur constructions classifieurs basées données exemples entraînement existe plusieurs méthodes sification telles arbre décision quinlan méthode naïve bayes méthodes basées règles clark niblett cohen papier présente approche construction classifieurs basée règles classe associations utilisant structure arbre fixes extraction itemsets fréquents règles association agrawal approches telles harmony karypis optimisations règles association essentiellement construites bastide présent travail montre parmi itemsets intéresser seulement petites tailles ensuite montre parmi derniers existe encore significatifs classification essentiels résultats expérimentations grands coenen montrent optimisation suppression itemsets correcte efficace suppression itemsets essentiels classification préliminaires données triplet ensembles finis vides élément appelé élément appelé objet transaction représenté identifiant relation binaire entre paire signifie valeur attribuée objet itemset ensemble itemset itemset items taille longueur itemset connexion galois ganter wille paire fonctions ensemble objets commun items fonction duale fonction monotone alors données connexion galois opérateurs fermetures galois fonctions suivantes dénote composition fonctions fonctions monotones itemset alors appelée fermeture effet extension idempotence itemset fermé appelé itemset générateur minimal bastide implique support dénote cardinalité clair alors minsup seuil support fréquent minsup itemset respectivement fermé fréquent fréquent aussi itemset respectivement fermé règle association expression forme itemsets disjoints alors dénotent respective partie gauche partie droite support confiance classification considère ensemble éléments appelés étiquettes classes règle classe association expression forme objet couvert items satisfait objet classifié correctement satisfait effectivement classe étiquette support nombre objets classifiés correctement confiance représente fréquence applications correctes exemple tableau représente données entraînement lequel support confiance autre exemple ordre partiel appelé ordre précédence défini comme soient précède luong itemsets données entraînement travaux contributions existe plusieurs méthodes calculer itemsets fréquents agrawal srikant bayardo méthodes peuvent classées catégories première catégorie apriori agrawal srikant variantes calculent itemsets fréquents niveau itemsets candidats générés partir itemsets fréquents seconde catégo consiste méthodes développent growth algorithme utilise arbres préfixes stockage compact données mémoire trale chaque étape calcule itemset préfixe fréquent données restreint rapport préfixe récursivement applique données restreint méthodes adaptées calcul itemsets fermés fréquents pasquier bastide stumme luong trouver intéressant comprenant récents algorithmes calcul itemsets fermés yahia problème classification largement étudié karypis algorithmes classiques quinlan cameron jones cohen calculent chaque règle utilisant heuristiques basées analyse statistique contraste algorithmes basés extraction règles classe associations comme cherchent ensemble règles confiances élevées construites itemsets fréquents adapte apriori extraire règles triées ordre précé dence avant sélectionnées classifieur règle sélectionnée classifie correctement moins objets entraînement objets couverts règle écartés processus sélection ordre précédence classifieur préfère règles formées itemsets adapte growth extraire ordre précédence considère corrélation entre partie gauche règle étiquette classe ailleurs permet chaque objet couvert sieurs règles propose schéma classification multiples règles harmony karypis utilise stratégie growth extraire défaut items données restreint triés ordre croissant coefficients corrélation entre préfixe correspondant items items données restreints prometteurs exclus espace recherche exclusions classifieur préfère règles formées itemsets suppression itemsets essentiels classification différence pendant extraction règles harmony maintient chaque objet liste règles confiance élevée classifient correctement objet processus extraction harmony regroupe règles sélectionnées leurs étiquettes classes ordre décroissant confiances supports classifier objet harmony calcule chaque groupe classifieur somme confiances premières règles confiance élevée couvrent classe somme grande sélectionnée prédire classe contribution contribution travail consiste étude relation entre supports itemsets incluent généralisation propriété importante itemsets notion itemset essentiel application notion itemset essentiel optimiser construction classifieurs basée approche explore itemsets toutes tailles limite itemsets petites tailles conséquent exploiter règles supports meilleures confiances résultats expérimentaux grands données catégoriels montrent moyenne approche efficace comparaison approches importantes timisation itemsets essentiels correcte efficace itemsets essentiels itemsets facile itemset alors itemset alors cette propriété permet définir relation équivalence règlex avecx étant itemsets représente classe équivalence règles rapport support confiance représentatives intéressantes nombre réduit parties gauches réduites elles peuvent appliquées large nombre objets rapport règles itemsets proposition soient telles alors preuve effet maintenant commex déduit application proposition résulte corollaire soient itemsets alors toute étiquette classe luong après corollaire classification construire classifieurs seulement itemsets fermeture itemsets itemsets intéressants classifieurs priété suivante utile suppression itemsets luong proposition soient itemsets alors preuve alors clairement condition ainsi bastide montré conditions proposition facile conséquence directe proposition suivante alors déduire alors super ensemble construction classifieurs intéressant commencer itemsets petites tailles quand ajoute nouvel itemset courant résultat itemset alors intéressant continuer recherche résultat suite étudions généralisation cette propriété pousser encore optimisation itemsets itemsets essentiels proposition alors preuve supposons alors alors items moins items moins corollaire alors proposition alors preuve après corollaire comme remplaçant expression droite égalité avons après proposition cette étape proposition directe conséquence proposition effet lorsque comme corollaire alors parmi itemsets existe différents entre niveaux supports étiquettes classes itemsets peuvent considérés comme chose construites portent informations similaires support confiance itemsets définis comme suppression itemsets essentiels classification définition soient itemsets respectivement semble étiquettes classes telles respectivement définir dénote cardinalité écart degré liberté risque erreur itemsets satisfaisant définition construction classifieur intéresser seulement itemsets comme taille petite oublier itemsets comme itemsets comme appelés itemsets essentiels élaguer itemsets comme espérer propriété similaire celle spécifiée proposition commençant itemsets petites tailles ajout nouvel itemset courant résultat comparaison itemset courant définition satisfaite alors arrêter recherche itemset courant précisément alors attend cette conjecture avoir trois arguments importants abord différence entre importante surtout quand considère itemsets petites tailles ensuite corollaire dernièrement après définition avons prouvé formellement cette conjecture cependant appliquerons méthode construction classifieurs basée structure arbre préfixes extraction itemsets luong extraction classifieurs extraction règles classe association approche utilise technique énumération ensembles rymon arbre préfixes extraction commençant arbre préfixes successivement objets données mettre chaque objet liste items étiquette classe itemsets énumérés ordre lexicographique stockés étiquette arbre fonction build leurs supports ainsi occurrences leurs étiquettes classes lecture données approche adopter calcul itemsets fréquents niveau comme apriori fonction levelbuild exemple spécifique calcul contraste apriori approche génère candidats calcul supports pendant construction arbre approche commencer itemsets passer itemsets itemsets construire arbre itemsets taille maximale données function levelbuild build énumérer itemsets taille maximale pruneinfrq minsup élaguer itemsets fréquents approche applique contrainte support itemsets seulement cepen quand sélectionne règles classifieur seules règles confiance support maximaux rapport chaque objet entraînement retenues exemple figure représente résultat arbre objets noeud associée paire élément étiquette classe nombre occurrences arbre préfixes objets suppression itemsets essentiels classification réduction arbre préfixes avons section formées itemsets suffisantes classifieurs corollaire avons aussi défini notion itemset essentiel pensé itemsets comporteront comme itemsets corollaire auront propriété spécifiée proposition suppression itemsets itemsets essentiels étapes première étape applique arbre préfixes fonction treereduction noeud support prédécesseur inéquation définition prédécesseur satisfaite alors arbre racine coupé noeud restant réduit liste enlevant paires telles valeur maximale fonction redcls paramètres treereduction suivants noeud arbre precls représentent respectivement support prédécesseur liste étiquettes classes associées prédécesseur leurs nombres occurrences tableau valeurs essentiels function treereduction precls frère treated evaluation expression definition using precls prune treereduction precls treated redcls treereduction treereduction precls treereduction treereduction precls construction classifieurs deuxième étape réduction appliquée pendant construction classifieurs après réduction utilisant treereduction données nouveau chaque objet fonction match cherche arbre noeuds correspondants classifient correctement objet noeuds liste temporaire nommée initialisée chaque objet ordre précédence règles correspondantes quand arbre entièrement visité règles formées noeuds rangées fonction addrule classifieur après leurs étiquettes classes cependant soient règle cours considération règle cours comparée étiquette classe alors rejetée méthode classifier objet schéma harmony chaque étiquette classe chercher règles couvrent objet somme confiances règles calculée objet prédit classe somme maximale luong function buildclassifier object training dataset empty match build class label addrule return résultats expérimentaux approche proposée appelée méthode simple implémentée linux version expérimentée ordinateur portable processeur mobile pentium mémoire comparerons résultats expérimentation harmony approche intéressante laquelle semble similaire tableau rappelle caractéristiques données coenen résultats expérimentation précisions harmony autres méthodes rapportés karypis utilisant schéma cross validation comparaisons précision harmony rapport karypis database objects items class harmony adult 48482 chess 28056 connect 67557 letrecog 20000 mushroom nursery 12960 pageblocks pendigits 10992 waveform moyenne maintenant présentons résultats expérimentations menées travail bleau programme exécutable harmony fourni gracieusement auteurs karypis paramètres configurés après description auteurs minsup items ordonnés après ordre coefficients corrélation ordre lequel harmony atteint meilleure performance particulier connect seuls items supports 20000 considérés mêmes considérations appliquées configuration paramètres extraction itemsets fréquents commence directement itemsets itemsets considérés satisfont suppression itemsets essentiels classification élagage itemsets fréquents effectué seulement itemsets minsup étapes suivantes développées itemsets fréquents élagage effectué itemsets support tests effectués risque erreurs tableau utilise notations suivantes temps exécution total secondes exécutions cross validation données construire classifieurs tester précision moyenne prédiction pourcentage longueur maximale itemsets considérés pendant construction arbre rules nombre moyen règles classifieurs notons expérimentations objets toujours disque ailleurs limite longueur itemsets construction arbre préfixes limite longueur objets données harmony comparé versions harmony élagage élagage essentiels essentiels rules rules adult chess 11738 10727 connect 19497 19363 letrecog mushroom nursery pageblocks pendigits waveform total 10416 discussions conclusion résultats obtenus tests menés travail tableaux confirment résul rapportés karypis tableau remarque adult connect tableau montre précision harmony meilleure celle rapportée auteurs cependant letrecog waveform inverse comparaisons entre harmony temps exécution données objets courts général particulier connect environ harmony explique toujours données disque nombre règles classifieur grand celui harmony cependant données objets longs harmony général beaucoup exemple luong waveform harmony environ raison harmony considérer itemsets toute taille waveform plupart itemsets tailles tandis considère itemsets taille maximale précision classification approches comparables données chess nursery waveform précis expliquer sélection confiances supports maximaux parmi celles ayant petits supports similaire harmony plusieurs points résultats expérimentaux approches différents général meilleur temps exécution précision classification temps exécution total environ quatre court prédiction environ précise celle harmony moyenne quand implémente suppression itemsets essentiels moyenne nombre diminue environ temps exécution amélioré environ précision baisse cependant rapport harmony cette précision encore grande résultats valident utilisation construites itemsets petites tailles possibilité sélection confiances supports maximaux parmi celles ayant petits supports ailleurs montrent notion itemset essentiel applicable utile perspective penser cette notion développée apprentissage contexte existence bruits références agrawal imielinski swami mining association rules between items large databases sigmod conference proceedings agrawal srikant algorithms mining association rules proceedings international conference large databases bastide taouil pasquier stumme lakhal mining frequent patterns counting inferences sigmod explorations bayardo efficiently mining patterns databases sigmod conference proceedings clark niblett induction algorithm machine learning coenen implementations algorithms frans software foil_prm_cpar foilprmcpar puter science department university liverpool cohen effective induction pattern classification scene analysis wiley ganter wille formal concept analysis mathematical foundations springer mining frequent patterns without candidate generation sigmod international conference sigmod swami widom clustering association rules suppression itemsets essentiels classification accurate efficient classification based multiple class association rules comparison prediction accuracy complexity training thirty three classification algorithms machine learning integrating classification association mining effective based algorithm mining association rules sigmod pasquier bastide taouil lakhal discovering frequent closed itemsets association rules springer verlag closet efficient algorithm mining frequent itemsets workshop research issues mining knowledge discovery luong closed frequent itemsets dawak quinlan programs machine learning morgan kaufmann quinlan cameron jones midterm report rymon search through systematic enumeration international conference principles knowledge representation reasoning stumme taouil bastide pasquier lakhal computing iceberg concept lattices titanic knowledge engineering karypis harmony efficiently mining rules classifica yahia hamrouni nguifo frequent closed itemset based algorithmes thorough structural analytical survey sigkdd explorations classification based predictive association rules francisco generating redundant association rules sigmod parthasarathy ogihara algorithms discovery association rules summary classification based class association rules itemsets minimal generators essential built classifiers itemsets pruned without affecting accuracy classifiers studies generalization property itemsets shows among small itemsets there still exist those which significant built classifiers pruned those itemsets defined based apply pruning method building classifiers based class association rules using prefix structure mining frequent itemsets experiences large datasets pruning method actually efficient sound