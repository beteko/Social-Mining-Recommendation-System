C Documents and Settings Yacine Bureau EGC2013_CameraReady EGC_2013 dviRé écriture de requêtes dans un système d’intégration sémantique Cheikh Niang Béatrice Bouchou Moussa Lo Yacine Sam Université François Rabelais Tours Laboratoire d’Informatique 3 place Jean Jaurès 41000 Blois — {prénom nom} univ tours fr Université Gaston Berger Laboratoire d’Analyse Numérique et d’Informatique Route de Ngalléle BP 234 Saint louis Sénégal — moussa lo ugb edu sn Résumé Nous décrivons la deuxième phase de réalisation d’un système d’in tégration qui minimise l’intervention humaine habituellement nécessaire Après la phase de construction semi automatique du schéma ontologie global décrite dans de précédents articles nous présentons ici le processus de ré écriture de requêtes globales en des requêtes adressées aux sources 1 Introduction L’intégration de données vise à combiner des données issues de sources différentes afin de permettre leur exploitation à travers une interface d’interrogation appelée schéma global Le travail que nous présentons ici est une des phases de réalisation d’un système d’inté gration de type médiation approche non matérialisée sémantique Ce dernier est un triplet J = 〈G S M〉 Lenzerini 2002 où dans notre proposition le schéma global G et les schémas locaux S sont décrits par des ontologies Nous construisons le schéma global semi automatiquement à partir des schémas sources ce qui permet de définir naturellement un map ping GAV Pour autant comme montré dans Niang et al 2011 notre construction incrémen tale de G induit que l’ajout et le retrait de sources ont un coût de mise à jour de G très limité Nous montrons ici qu’en plus cela n’a aucun effet sur le mapping que nous définissons car ce mapping n’est calculé qu’au moment où une requête doit être évaluée en fonction de l’état courant de G et uniquement pour ce qui concerne la requête Notre contribution vise une intégration dynamique au sein de communautés web Une source peut rejoindre le système intégré le temps d’échanger ses données ou de contribuer à une tâche particulière et peut se retirer à tout moment Les collaborations qui se multiplient dans de nombreux domaines suscitent la constitution de solides ontologies de référence publi quement accessibles C’est dans ce cadre que nous avons mis au point dans Niang et al 2011 notre construction du schéma global en exploitant une ontologie de référence Ce schéma glo bal est une TBox spécifiée en DL LiteA une logique de description LD Calvanese et al 2007 connue pour traiter des requêtes dans un système d’intégration avec une complexité LOGSPACE en la taille des données interrogées Nous exploitons dans cet article cette LD pour la ré écriture d’une requête q exprimée dans les termes de G en des sous requêtes ciblant des sources susceptibles d’y répondre Ré écriture de requêtes dans un système d’intégration sémantique 2 Processus de ré écriture de requêtes Notre proposition dans Niang et al 2011 pour la construction semi automatique d’une ontologie globale pouvant servir de support d’intégration dans un système de médiation syn thétisée dans la figure 1 est scindée en deux phases D’abord une ontologie intermédiaire appelée Accord notée A dans la figure 1 est générée pour chaque source Elle décrit la par tie de l’ontologie locale concernée par le processus d’intégration Cette phase s’appuie sur des techniques d’appariement d’ontologies ontologie source OL et ontologie de référence OM Ensuite chaque Accord est automatiquement et incrémentalement concilié dans l’onto logie globale OG La conciliation est faite en liant sémantiquement les concepts locaux via une taxonomie calculée à partir de l’ontologie de référence OM Les sources restent ainsi in dépendantes les unes vis à vis des autres tout en étant liées sémantiquement dans l’ontologie globale FIG 1 – Processus de construction de l’ontologie globale Notre proposition a été d’abord construite dans le cadre du projet SIC Sénégal ayant pour but de permettre à plusieurs partenaires travaillant sur le bassin du fleuve Sénégal de partager et intégrer leurs données entre autres agricoles Dans l’exemple donné dans le tableau 1 1 l’ontologie globale G est représentée sous forme d’une TBox Tg telle que Tg = 〈{Tai} Tm〉 où i {Tai} est l’ensemble des TBox des accordsA si construits à partir des ontologies locales des sources Si et ii Tm est calculée à partir de l’ontologie de référence pour concilier les différents Tai dans Tg Ce tableau 1 montre un extrait de Tg conciliant Ta1 et Ta2 des deux accords As1 et As2 Les expressions de Ta1 et Ta2 expriment le fait que les sources S1 et S2 à partir desquelles ont été respectivement construits As1 et As2 détiennent des informations sur 1 des quantités de production de variétés de culture ici tomate oignon et sorgho et 2 des statistiques agricoles concernant des tomates et du riz paddy lesquels ont un attribut prix Les expressions de Tm située en bas du tableau concilient Ta1 et Ta2 par le fait que par exemple oignon de Ta1 et tomate de Ta2 sont des légumes sorgho de Ta1 et riz de Ta2 sont des céréales les céréales et les légumes sont des produits végétaux mais sont disjoints 1 Faute d’espace nous n’allons pas introduire ni la syntaxe ni la sémantique de la LD utilisée i e DL LiteA Le lecteur peut se référer à Calvanese et al 2006 ou Niang et al 2011 pour cela C Niang et al Ta1 A1 Ta2 A2 ∃ concerne � Produit ∃ porteSur � Statistique_agricole ∃ concerne− � Varietes_culture ∃ porteSur− � Tomate Tomate � Varietes_culture ∃ porteSur− � Riz_paddy Oignon � Varietes_culture Tomate � δ prix Sorgho � Varietes_culture Riz_paddy � δ prix Varietes_culture � δ production ρ prix � xsd string Legume � Produit_vegetal Legume� ¬ Cereale Tomate� Legume Oignon� Legume Tomate � ¬ Oignon Cereale � Produit_vegetal Riz � Cereale Sorgho� Cereale Sorgho � ¬ Riz Riz_paddy� Riz TAB 1 – Extrait d’une TBox globale Tg conciliant les Accords de deux sources Considérons dans ce qui suit i l’ontologie globale G dont Tg est celle montrée dans le tableau 1 ii les deux sources S1 et S2 dont les accords As1 et As2 sont ceux conciliés par Tg et iii la requête conjonctive suivante exprimée dans les termes de G q x a b ← Legume x prix x a production x b Cette requête demande le prix et la production de légumes Nous décrivons dans la suite com ment nous pouvons y répondre en reportant l’interrogation sur les sources S1 et S2 2 1 Définition de règles servant au calcul des mappings En partant uniquement des informations présentes dans Ta1 et Ta2 des Accords A s1 et As2 tableau 1 ni S1 ni S2 ne peuvent répondre à q ne serait ce que parce que le prédicat Legume de q n’est défini dans aucun de leur vocabulaire Cependant si on considère Tm taxonomie située dans la partie basse du tableau 1 et reliant les concepts des Tai montrant dans notre exemple que les oignons et les tomates sont des légumes il devient envisageable que S1 et S2 puissent permettre de construire une réponse pour q La première étape de notre processus de ré écriture est d’utiliser les relations sémantiques définies dans Tg = 〈{Tai} Tm〉 afin de ramener les atomes d’une requête q exprimée sur Tg vers les sources qu’ils impliquent Si est représentée par Tai Pour ce faire nous définissons un ensemble de règles sémantiques qui permettent par un raisonnement par chainage avant de déduire de Tg les expressions de mapping correspondant aux atomes de la requête Ces expressions sont de la forme G v ⊇ Si Φ w où G v et Si Φ w sont respectivement la tête et le corps du mapping La tête représente un atome dans lequel G est un prédicat pouvant être un concept attribut rôle atomique de Tg et v un tuple de variables Dans le corps Φ w est une requête conjonctive d’arité égale au nombre de variables de v sur la source Si Appliquées en chainage avant les règles fournies en haut de la prochaine page permettent de calculer un ensemble Mg d’expressions de mapping pour chaque atome g de q A chaque fois l’atome g est utilisé comme déclencheur du raisonnement et Tg comme base de faits initiale Le résultat est un ensemble d’expressionsMg de la forme g v ⊇ Si Φ w Les règles 1 à 3 correspondent au cas où l’atome est un concept atomique A x Dans 1 concept A Tai est vrai si A apparaît en position de concept dans une expression de Tai Ré écriture de requêtes dans un système d’intégration sémantique A x concept A Tai → A x ⊇ Si A x 1 A x A1 � A ∈ Tg → A1 x 2 A x A1 � A ∈ Tg A1 x ⊇ Si Φ x → A x ⊇ Si Φ x 3 U x y A � δ U ∈ Tai → U x y ⊇ Si U x y A x 4 U x y U1 � U ∈ Tg → U1 x y 5 U x y U1 � U ∈ Tai U1 x y ⊇ Si Φ x → U x y ⊇ Si Φ x 6 U x y A1 � A ∈ Tai U x y ⊇ Si U x y A x → U x y ⊇ Si U x y A1 x 7 P x _ ∃P � A ∈ Tai → P x _ ⊇ Si P x _ A x 8 P _ y ∃P− � A ∈ Tai → P _ y ⊇ Si P _ y A y 9 P x y P1 � P ∈ Tg → P1 x y 10 P x y P1 � P ∈ Tai P1 x y ⊇ Si Φ x y → P x y ⊇ Si Φ x y 11 P x _ A1 � A ∈ Tai P x _ ⊇ Si P x _ A x → P x _ ⊇ Si P _ A1 x 12 P _ y A1 � A ∈ Tai P _ y ⊇ Si P _ y A y → P _ y ⊇ Si P _ y A1 y 13 Dans ce cas Si peut renseigner surA ce qu’indique l’expression de mapping en conclusion de la règle Ainsi toutes les sources contenant ce concept seront considérées par le processus de ré écriture 2 et 3 permettent de rechercher des sous concepts qui seraient dans les sources Grâce à elles en partant de l’atome Legume x on peut arriver à Tomate x de S2 et Oignon x et Tomate x de S1 Les règles 4 à 7 peuvent se comprendre comme les trois premières mais s’appliquent à un attribut atomique U x y Elles servent à rechercher d’éventuels sous attributs au sein d’une même source La règle 7 permet dans une même source d’interroger l’attribut d’un concept sur ses sous concepts Les règles 8 à 13 concernent un rôle atomique P x y les 2 premières fonctionnant comme 1 pour le concept ou 4 pour l’attribut elles s’appliquent s’il y a dans une Tai une expression impliquant ce rôle 10 et 11 permettent de rechercher des sous rôles dans une même source quand 12 et 13 servent à interroger des rôles sur des sous concepts dans une même source Nous donnons ci après les mappings obtenus en appliquant les règles 1 à 13 pour chaque atome de la requête q MLegume m1 Legume x ⊇ S1 Tomate x m3 Legume x ⊇ S1 Oignon x m2 Legume x ⊇ S2 Tomate x Mprix m1 prix x a ⊇ S2 prix x a Tomate x m2 prix x a ⊇ S2 prix x a Riz_paddy x Mproduction m1 production x b ⊇ S1 production x b Varietes_culture x m2 production x b ⊇ S1 production x b Oignon x m3 production x b ⊇ S1 production x b Tomate x Les mappings deMprix ne ramènent qu’à S2 qui est capable de fournir le prix d’instances de tomate et de riz tandis que les mappings de Mproduction indiquent que la source S1 est capable d’apporter des réponses sur la production de variétés de cultures d’oignons et de tomates Les réponses qui peuvent être obtenues à partir de S1 et S2 sont partielles puisque S1 ne peut fournir que la production de tomate ou d’oignon et S2 que le prix de tomate ou de riz C’est en combinant les différents mappings que l’on aura une réponse globale pour q c’est l’objet de la prochaine sous section A x concept A Tai → A x ⊇ Si A x 1 A x A1 � A ∈ Tg → A1 x 2 A x A1 � A ∈ Tg A1 x ⊇ Si Φ x → A x ⊇ Si Φ x 3 U x y A � δ U ∈ Tai → U x y ⊇ Si U x y A x 4 U x y U1 � U ∈ Tg → U1 x y 5 U x y U1 � U ∈ Tai U1 x y ⊇ Si Φ x → U x y ⊇ Si Φ x 6 U x y A1 � A ∈ Tai U x y ⊇ Si U x y A x → U x y ⊇ Si U x y A1 x 7 P x _ ∃P � A ∈ Tai → P x _ ⊇ Si P x _ A x 8 P _ y ∃P− � A ∈ Tai → P _ y ⊇ Si P _ y A y 9 P x y P1 � P ∈ Tg → P1 x y 10 P x y P1 � P ∈ Tai P1 x y ⊇ Si Φ x y → P x y ⊇ Si Φ x y 11 P x _ A1 � A ∈ Tai P x _ ⊇ Si P x _ A x → P x _ ⊇ Si P _ A1 x 12 P _ y A1 � A ∈ Tai P _ y ⊇ Si P _ y A y → P _ y ⊇ Si P _ y A1 y 13 C Niang et al 2 2 Dépliage de requêtes globales et validation des ré écritures obtenues Le dépliage d’une requête q x ← g1 z1 gn zn par rapport à un ensemble de map pings GAV gi xi ⊇ qi xi yi est la requête u obtenue en remplaçant dans q chaque atome gi zi par qi ψi xi yi où ψi est une fonction qui associe xi à zi et yi à de nouvelles va riables Chaque dépliage u sert à calculer une partie du résultat que le système intégré peut fournir pour q L’union de ces parties constitue l’ensemble des réponses à q L’ensemble des dépliages u de q est obtenu en calculant le produit cartésien R = Mg1 × × Mgn Chaque requête qr de ce produit est une ré écriture candidate En considérant les mappings obtenus précédemment pour les atomes de la requête q résumés dans le tableau 2 certaines des 18 ré écritures candidates de q sont les suivantes Legume x Prix x a Production x b S1 Tomate x S2 prix x a Tomate x S1 production x b Varietes_culture x S1 Oignon x S2 prix x a Riz_paddy x S1 production x b Tomate x S2 Tomate x S1 production x b Oignon x TAB 2 – Résumé des sources pouvant répondre pour chaque atome de la requête q qr1 x a b ← S1 Tomate x S2 prix x a Tomate x S1 production x b Varietes_culture x qr2 x a b ← S1 Tomate x S2 prix x a Tomate x S1 production x b Tomate x qr13 x a b ← S2 Tomate x S2 prix x a Tomate x S1 production x b Varietes_culture x qr14 x a b ← S2 Tomate x S2 prix x a Tomate x S1 production x b Tomate x qr15 x a b ← S2 Tomate x S2 prix x a Tomate x S1 production x b Oignon x Une ré écriture candidate ne constitue pas forcément une ré écriture valide de q A titre d’exemple qr15 qui demande pour S1 la production de tomates et pour S2 le prix d’oignons n’est pas valide Les tomates et les oignons sont certes des légumes mais l’expression Tomate � ¬ Oignon déclarée dans la TBox Tg indique que les tomates et les oignons sont disjoints Pour vérifier la consistance des dépliages nous utilisons l’algorithme Consistent de Calva nese et al 2007 qui construit des requêtes booléennes qunsat à partir des inclusions négatives présentes dans Tg qui représentent des contraintes d’intégrité servant à assurer la consistance des réponses apportées par le système d’intégration Considérons ci après les requêtes qunsat obtenues à partir de Tg du tableau 1 et qui concernent les atomes de q qunsat1 ← Tomate x Oignon x – car Tomate � ¬ Oignon est dans Tg qunsat2 ← Tomate x Riz_paddy x – inféré de Legume� ¬ Cereale qunsat3 ← Oignon x Riz_paddy x – idem Afin de vérifier la consistance d’une ré écriture candidate qr nous remplaçons d’abord dans qr les requêtes sur les sources par les requêtes correspondantes sur le schéma global Dans notre contexte il suffit de retirer toute mention des sources Soit q′r le résultat de cette étape il faut ensuite appliquer l’algorithme Consistent en évaluant les requêtes qunsat sur le corps de q′r considéré comme une instance canonique Si le résultat de l’évaluation d’une des requêtes qunsat est true alors la ré écriture qr est invalide A titre d’exemple soit la requête q′r15 suivante obtenue à partir de qr15 q′r15 x y z ←Tomate x prix x y Tomate x production x z Oignon x Ré écriture de requêtes dans un système d’intégration sémantique En évaluant qunsat1 sur {Tomate a prix a b production a c Oignon a } on obtient true donc qr15 est invalide En appliquant ce processus sur toutes les ré écritures candidates de q nous obtenons les ré écritures valides suivantes qr1 x a b ← S1 Tomate x S2 prix x a Tomate x S1 production x b Varietes_culture x qr2 x a b ← S1 Tomate x S2 prix x a Tomate x S1 production x b Tomate x qr13 x a b ← S2 Tomate x S2 prix x a Tomate x S1 production x b Varietes_culture x qr14 x a b ← S2 Tomate x S2 prix x a Tomate x S1 production x b Tomate x Ces requêtes peuvent être simplifiées en unifiant les atomes équivalents d’une même re quête impliquant la même source algorithme de test d’inclusion de requêtes de Millstein et al 2003 Après simplification les requêtes qr2 et qr14 étant équivalentes à la requête qr1 peuvent être supprimées La ré écriture de q se réduit au final aux deux requêtes qr1 et qr13 simplifiées qr2 x a b ← S1 Tomate x production x b S2 Tomate x prix x a qr13 x a b ← S2 Tomate x prix x a S1 Varietes_culture x production x b 3 Conclusion Dans cet article nous avons décrit le processus de ré écriture de requêtes exprimées dans les termes d’une ontologie globale en des sous requêtes ciblant les sources L’originalité de cette ré écriture est qu’elle repose sur un calcul dynamique des mappings dont la complexité est au pire en O n × k × l 2 où k est le nombre de Tai impliqués par l’atome g l est la taille moyenne des Tai et n est le nombre d’atomes dans la requête Ceci est possible grâce aux caractéristiques du schéma global servant de support d’interrogation construit semi automatiquement pour lequel l’ajout et le retrait d’une source ont un effet limité sur le schéma Références Calvanese D G D Giacomo D Lembo M Lenzerini et R Rosati 2007 Tractable Rea soning and Efficient Query Answering in Description Logics The L Lite Family J Autom Reasoning 39 3 385–429 Calvanese D D Lembo M Lenzerini A Poggi et R Rosati 2006 Linking data to onto logies The description logic dl litea In In Proc of OWLED 2006 Lenzerini M 2002 Data integration A theoretical perspective In PODS pp 233–246 Millstein T D A Y Halevy et M Friedman 2003 Query containment for data integration systems J Comput Syst Sci 66 1 20–39 Niang C B Bouchou M Lo et Y Sam 2011 Automatic building of an appropriate global ontology In ADBIS pp 429–443 Summary We present in this article the second realization phase of our data integration system mini mizing human intervention After the proposition in a previous work of an approach allowing the construction of a global ontology GO we focus here on the process allowing to rewrite queries specified over the GO to queries targeting local ontologies present in the system 