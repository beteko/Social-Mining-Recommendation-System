53-RNTI-E33 Machine Learning basée sur la classification des applications Android à travers le texte Caractéristiques Mohamed Guendouz *, Amine Abdelmalek * Reda Mohamed Hamou * * GeCode Laboratoire, Université Moulay Tahar de Saïda. Saida, Algérie @ email adresse, http: //www.une-page.html 1 Introduction Ce document traite avec le problème des applications mobiles Android en utilisant la classification et l'apprentissage des méthodes d'extraction de texte machine. Notre approche consiste à appliquer des méthodes d'apprentissage de la machine sur les caractéristiques de texte qui sont extraits de la description de l'application sur Google Play Store. Notre approche proposée consiste en deux phases principales. D'abord, nous recueillons des informations sur les applications de la boutique Google Play en utilisant un robot web. Ensuite, nous extrayons quelques informations texte à partir de ces données. Dans notre cas, pour chaque application, nous avons extrait sa description et sa catégorie. En second lieu, nous formons différents classificateurs, cette étape consiste à pré-traitement du texte qui inclut la suppression des URL et des chiffres, des tokens, et le calcul TF * IDF au texte de transfert à un vecteur numérique qui peut être utilisé comme entrée pour les classificateurs. Enfin, pour évaluer les performances de notre sys- tème, nous avons mené diverses expériences sur trois ensembles de données réelles en utilisant différents paramètres d'évaluation. La figure 1 illustre l'architecture de notre cadre de classification des applications. Enfin, nous évaluons notre approche sur trois ensembles de données réelles, a obtenu des résultats montre que l'utilisation des fonctionnalités de texte dans la classification des applications Android peuvent se comporte bien. FIGUE. 1 - Architecture du cadre proposé - 429 - Machine Learning basée sur la classification des applications Android à travers le texte Caractéristiques 2 résultats expérimentaux Comme il n'y a pas de jeu de données standard ou de référence pour ce type d'études, nous avons dû créer notre propre ensemble de données. Nous avons recueilli des métadonnées des applications gratuites Android du magasin Google Play, cette tâche a été fait automatiquement en utilisant un robot web développé spécialement pour cela. Un total de 7893 applications Android ont été collectées classées dans 4534 Apps et 3305 Jeux. Nous avons conçu notre jeu de données dans trois autres ensemble de données qui sont: ensemble de données générales qui contient toutes les applications classées en deux catégories: App et du jeu. Apps ensemble de données qui ne contient que des applications classées dans neuf catégories: COMMUNICATION, EDUCATION, ENTERTAINMENT, MÉDIAS ET VIDÉO, Médical, PHOTOGRAPHIE, SOCIAUX, OUTILS, TEMPS. Jeux datast qui ne contient que des jeux classés en six catégories: ARCADE, Éducatif, PUZZLE, RACING, SIMULATION, SPORTS. 2.1 Evaluation Metrics Afin d'évaluer la performance et la précision de notre approche, nous choisissons un bon ber nom- de mesures d'évaluation bien acceptées pour les classificateurs, y compris de précision, rappel, F-mesure, TPR (taux réel positif), TFP (taux de faux positifs ). Dans les expériences que nous utilisons la validation croisée dix fois pour évaluer chaque classificateur. 2.2 Résultats et analyse dans le présent paragraphe, nous analysons les résultats obtenus à partir d'expériences, nous avons d'abord évaluer Fiers classi- sur le premier ensemble de données qui contient toutes les applications catégorisées que dans deux catégories: applications et jeux, cela signifie une classification de classe binaire, nous évaluons la performance de différentes sifiers clas- comme: Naive Bayse, SVM, forêt d'arbres décisionnels. Le résultat montre que l'algorithme Random Forest meilleurs résultats que tous les autres, le rithmes rithmes meilleur résultat de F-mesure est 0,971 obtenus à partir de l'algorithme aléatoire Forêt avec 150 arbres, cela signifie qu'un grand nombre d'échantillons (97,1% environ) ont été correctement classés par notre système. Nous notons également que l'algorithme de SVM effectue des bons résultats avec une valeur de F-mesure égale à 0,963 et une valeur faible du taux FP égale à 0,042, cela est dû à la précision de la classification de l'algorithme SVM dans la classification de classe binaire. Nous avons réalisé une seconde expérience sur deux autres ensembles de données réelles, le premier contient uniquement les applications Android de type App classées dans neuf catégories qui signifie neuf classes, le deuxième jeu de données ne contient que les applications Android de type jeu classées en six catégories qui signifie six cl ânes donc le problème n'est plus une classification de classe binaire. Ces résultats montrent qu'il ya une diminution de la précision des classificateurs en particulier l'algorithme Naive Bayes et cela est dû au nombre de classes dans chaque jeu de données et aussi parce que les termes (texte) utilisés pour décrire ces applications ne sont pas différents, par exemple le terme « jeu "est utilisé pour décrit les jeux qui appartiennent à différentes catégories de jeu comme puzzle, simulation et plus, cette distribution des termes plus plusieurs classes rapport résultats de la classification incorrecte. Bien que, l'algorithme Random Forest se comporte bien et mieux que tous les autres algorithmes et donne une bonne précision de la classification. - 430 -