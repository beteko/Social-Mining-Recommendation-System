articles assemblage pdfIncFDs nouvel algorithme inférence incrémentale dépendances fonctionnelles Ghada Gasmi Département Sciences Informatique Faculté sciences Tunis Campus universitaire Tunis Tunisie ghada gasmi gmail Résumé inférence dépendances fonctionnelles probléma tiques étudiées bases données objet plusieurs travaux proposé algorithmes inférer efficacement dépen dances fonctionnelles utiliser différents domaines administra bases données ingénierie optimisation requêtes Toutefois application réelles bases données évolutives relations fréquemment augmentées diminuées tuples conséquent adapter cadre dynamique solution consiste appliquer rithmes disponibles littérature inférer dépendances fonction nelles après chaque Cette solution étant coûteuse proposons article inférer dépendances fonctionnelles manière incré mentale effet introduisons nouvel algorithme appelé INCFDS évaluons performances rapport approche classique inférence dépendances fonctionnelles partir relation dynamique Introduction dépendances fonctionnelles largement étudiées cadre bases données relationnelles origine étude motivée elles peuvent utilisées exprimer contraintes vérifiées schéma relation indépendam instance particulière schéma Abiteboul étude motivée autre problématique effet conception systèmes information bases données connaissance dépen dances fonctionnelles était supposée connue Toutefois durant données problème autres termes quelles partir ensembles données ckées dépendances effectivement vérifiées problème connu comme celui inférence dépendances fonctionnelles objet nombreux travaux Lopes Novelli Cicchetti Flach Savnik Huhtala Mannila Raiha parce réponse apportée étude détaillée portant algorithmes présentée Lopes Novelli algorithme INCFDS question précédente capitale plusieurs domaines application abord pratique nombreuses bases données normalisées plusieurs raisons originellement erreurs commises évolutions schéma trisées cours temps avoir choix organisation privilégiant timisation requêtes faits différents administrateur bases données besoin outils permettre effectuer organisation logique bases contrôler satisfaction dépendances fonctionnelles Ensuite ingénierie bases données appuie connaissance dépendances fonctionnelles valides partir schéma logique reconstituer schéma conceptuel Motivations applications réelles bases données évolutives relations quemment augmentées nouveaux tuples diminuées tuples conséquent adapter cadre dynamique solution consiste appliquer algorithmes disponibles littérature après chaque inférer dépendances tionnelles Toutefois cette solution pourrait désavantageuse notamment lorsque taille fréquence augmentent Ainsi cadre dynamique problème inférence dépendances fonctionnelles autres termes comment inférer dépendances fonctionnelles moindre article apportons élément réponse cette question effet basons quelques résultats théorie hypergraphes proposer algorithme incrémental appelé INCFDS permettant inférer dépendances fonctionnelles partir celles antérieurement inférées dépendances fonctionnelles vérifiées avant relation outre présentons résultats étude empirique bases benchmark montrer apporte notre algorithme rapport algorithmes classiques inférence dépendances fonctionnelles suite papier organisée comme section présente notions liées théorie bases données théorie hypergraphes section donne algorithmes dédiés inférence dépendances fonctionnelles section introduit algorithme incrémental dénommé INCFDS proposons inférer dépendances fonctionnelles section analyse quelques résultats expérimen tations avons menées bases benchmark évaluer performances algorithme INCFDS conclusion perspectives objet section terminent papier Préliminaires Cette section présente éléments nécessaires compréhension suite papier Gasmi données relationnelle proposons survol ensemble notions utilisées théorie bases données relationnelles détails lecteur pourra référer divers ouvrages traitant notions George Abiteboul ensemble attributs chaque attribut ensemble toutes valeurs possibles nomme domaine tuple appli cation relation ensemble tuples relation schéma tuple restriction Exemple Considérons exemple relation illustrée tableau souci conci attributs IdHot NumCh TypeCh CatHot seront renommés reste article respectivement IDHot NumCh TypeCh CatHot Relation exemple dépendance fonctionnelle expression satisfaite relation seulement triviale standard minimale dépend aucun ensemble propre ensemble toutes satisfaites relation ensemble dérive satisfaite toute relation satisfaisant toutes alors notons collection ensembles attributs déterminant ensemble notation signifie trois règles suivantes nommées axiomes Armstrong Armstrong forment système inférence juste complet soient schéma relationnel alors pseudo réflexivité alors augmentation alors transitivité fermeture notée ensemble toutes peuvent inférées partir axiomes Armstrong algorithme INCFDS ensemble couverture ensemble couverture canonique comporte attribut minimale désignons MINFr couverture canonique Théorie hypergraphes rappelons quelques définitions propriétés relatives hyper graphes Berge Définition Hypergraphe hypergraphe couple ensemble ments famille ensembles éléments appelés sommets tandis éléments appelés hyperarêtes hypergraphe hypergraphe partiel hypergraphe contient premières perarêtes hypergraphe simple seulement chaque couple ensemble hyperarêtes minimales ensemble hyperarêtes maximales Soient hypergraphes union hypergraphes produit cartésien hypergraphes Définition Transversal hypergraphe ensemble appelé transversal seule intersection toutes hyperarêtes transversal minimal seulement transversal collection transversaux minimaux notée appelée hypergraphe transversal hypergraphe transversal hypergraphe simple Propriété Berge Soient hypergraphes simples Propriété Berge Soient hypergraphe hypergraphe partiel Alors avons inférence première étude détaillée problème inférence présentée Mannila Raiha formulée façon suivante Étant donnée relation trouver couverture ensemble satisfaites trouver couverture ensemble section Comme couvertures peuvent tailles diverses recherche précisément petite couverture effet plupart algorithmes proposés littérature extraient couverture canonique MINFr reste papier hypergraphe identifié uniquement ensemble hyperarêtes Gasmi différentes applications inférence telles analyse bases rétro conception optimisation requêtes cette problématique objet plusieurs travaux recherche peuvent classés catégories première catégorie appelée algorithmes orientée tuples Lopes Mannila Raiha Flach Savnik regroupe algorithmes analysant tuples relation extraire ensuite effet cette catégorie algorithmes formalise information découverte partir couple tuples introduisant notions ensembles accord section parties gauches minimales verture canonique ensuite extraites partir ensembles accord accéder relation principale algorithmes cette catégorie accès calcul ensembles accord façon équivalente ensembles désaccord calcul dépendances accéder données calcul dépendances fonctionnelles alors obtenu partir ensembles accord emprun quelques résultats théorie hypergraphes seconde catégorie dénommée algorithmes orientée attributs Novelli Cicchetti Huhtala regroupe algorithmes génèrent ensemble candidates vérifient validité relation algorithmes orientés attributs souci réduire espace recherche nombre vérifier effet établissent règles élagage ensemble parties façon théorique algorithmique conséquent différences existent entre algorithmes résident caractérisation aussi propriétés induites permettant élagage efficace Inférence incrémentale dépendances fonctionnelles Problématique application réelles bases données évolutives relations quemment augmentées nouveaux tuples diminuées tuples adapter cette dynamicité solution intuitive consisterait appliquer algorithmes disponibles littérature inférer dépendances fonctionnelles vérifiées nouvelle après chaque Néanmoins cette solution pourrait inefficace notamment lorsque taille relation fréquence augmentent conséquent telles relations problème inférence dépendances fonctionnelles autres termes Comment inférer vérifiées relation moindre Cependant voyons problème inférence dépendances fonctionnelles rifiées relation après chaque ramené problème mainte nance dépendances fonctionnelles Ainsi contrairement approche classique inférence contexte général algorithmes rapprocher classe algorithmes ascendants bottom partent données générer hypothèses générales Cette catégorie algorithmes rapprocher classe algorithmes descendants utilisent approche générer tester suite papier opération restreinte opération ajout tuple algorithme INCFDS entrée relation proposons baser rieures vérifiées relation avant déterminer nouvel ensemble vérifiées relation après autres termes pensons approche incrémentale inférence pourrait avantageuse relation fréquemment Présentation algorithme INCFDS cadre notre travail avons restreint ajout tuple puisqu constitue opération fréquemment utilisée effet adoptons principe approches orientés tuples section proposer nouvel algorithme appelé INCFDS permettant inférer manière incrémentale pseudo INCFDS illustré algorithme Données relation nouveau tuple dépendances fonctionnelles vérifiées MINFr Résultat dépendances fonctionnelles vérifiées MINFr début1 Calcul ensembles accord induits Détermination ensembles maximaux Inférence nouvelles dépendances fonctionnelles4 Algorithme Présentation algorithme IncFDs Calcul ensembles accord induits tuple abord commençons présenter quelques définitions nécessaires préhension cette section Définition Ensemble accord couple tuples relation ensemble accord ensemble tributs partageant valeur tuples considérés Formellement ensemble accord défini comme Soient tuples ensemble attributs tuples accord seulement ensemble accord défini façon vante notons Définition Ensembles accord induits tuple Soient relation tuple ensembles accord induits tuple rapport relation définis comme Définition Classe équivalence tuple classe équivalence tuple rapport ensemble définie comme Gasmi effet classes équivalence tuple servent déterminer ensembles accord induits manière efficace Ainsi calculé partir tuples relation calculé partir classes équivalence exemple classes équivalence tuple rapport attributs relation illustrée table calcul ensembles accord induits constitue étape algorithme INCFDS effet suite ajout tuple certaines satisfaites peuvent relation question alors Comment déterminer ensembles maintenir satisfaites relation violée suite ajout tuple signifie existe moins tuple partage valeur valeur diffé rente justement cette information véhiculée ensemble accord induit conséquent toutes partie droite incluse ensembles accord induits candidates modifiées désignons CANDIDFr semble maintenir Détermination ensembles maximaux Comme avons précédemment satisfaite partie droite incluse aucun ensemble accord induit tuple violée suite ajout déterminer moindre candidates modifiées CANDIDFr suffit conserver grands ensembles accord induits ensembles maximaux notés MaxAg Inférence nouvelles dépendances fonctionnelles Fondements théoriques montré Kantola compléments ensembles maximaux servent calcul parties gauches effet suffit remarquer ensemble attributs détermine inclus aucun semble maximal collection ensembles maximaux contenant notés MaxAg exprimé façon équivalente disant ensemble avoir intersection compléments ensembles maximaux CMaxAg résultat formalisé utilisant quelques résultats théorie hypergraphes effet parties gauches ayant partie droite autre transversaux minimaux hypergraphe simple formé compléments ensembles maximaux Cependant notre approche disposons ensembles maximaux induits nouveau tuple niveau question suivante Comment déterminer algorithme INCFDS nouvelles parties gauches CANDIDFr sachant avons MaxAg tenter répondre cette question sommes basés résultats théorie hypergraphes écrire proposition caractériser formellement maintenir Proposition Soient CMaxAg collection compléments ensembles maximaux induits tuple attribut collec ensembles attributs calculés suite considération respective dépendances fonctionnelles satisfaites données MINFr Sachant MINFr Preuve prouvons appliquant notre approche obtenons mêmes générées approche classique trivial collection compléments ensembles maximaux attribut calculés partir donnée CMaxAg CMaxAg savons aussi cette collection forme hypergraphe simple Alors désignons hypergraphes partiels donnés respecti vement MaxAg MaxAg MaxAg désignons leurs transversaux minimaux respectifs avons MINFr MINFr trivial puisque avons considéré aucun complément Cependant général avons après propriété section conséquent Ainsi avons MINFr stade avons montré utilisant seulement CMaxAg pouvons inférer nouvelles dépendances fonctionnelles suite ajout tuple tageux parce complexité calcul CMaxAg sachant alors celle CMaxAg oeuvre maintenir ayant comme partie droite attribut partir compléments CMaxAg proposons fonction récursive prend entrée CMaxAg CMaxAg construit arbre recherche chaque noeud partie gauche candidate nouvelle fonction commence initialiser premier niveau arbre parties gauches CMaxAg passer niveau arbre considérons complément CMaxAg peuvent présenter noeud question transversal complément considérer alors ignorons complément passons complément Gasmi noeud question transversal complément considérer alors générer noeuds chacun union sachant complément noter noeud retenu après avoir vérifié malité rapport feuilles arbre Exemple Supposons disposons relation composée premiers tuples relation table ajoutons tuple figure illustre principe détermination nouvelles ayant comme partie droite attribut satisfaites premiers tuples relation partie droite tribut ailleurs compléments ensembles accord maximaux induits tuple CMaxAg initialisons premier niveau arbre parties gauches anciennes terminent Alors avons transversaux minimaux hypergraphe conséquent seront violées suite ajout tuple Néanmoins transversal minimal Ainsi considérons seulement complément Alors obtenons comme étant nouvelles parties gauches déterminent parties gauches nouvelles déterminant attribut Évaluations expérimentales évaluer performances approche incrémentale proposée rapport proche classique inférence avons implémenté algorithme INCFDS FASTFDS Centrino Windows Vista ailleurs avons série tests bases benchmark quemment utilisées évaluer algorithmes fouille données caractéristiques bases présentées table courbes figure montrent évolution temps requis inférence suite variation nombre tuples considérer lecture courbes figure pouvons constater algorithme INCFDS Flare Nursery 12960 Mushrooms Credit Caractéristiques bases benchmark 16384 65536 262144 Nombre tuples Credit IncFDs FastFDs 16384 65536 262144 Nombre tuples Mushrooms IncFDs FastFDs 10000 Nombre tuples Flare IncFDs FastFds 16384 65536 262144 10000 12000 14000 Nombre tuples Nursery IncFDs FastFDs Temps infrérence variation nombre tuples considérer Gasmi nombre tuples considérer augmente temps inférence mente effet expliqué étape calcul ensembles accord induits nouveau tuple insérer devient coûteuse temps inférence certains diminuer nombre maintenir effet certaines vérifiées relation avant peuvent suite ajout nouveau tuple conséquent nombre maintenir augmente temps exécution algorithme INCFDS augmente Ainsi diminution temps inférence rapportée certains nombre faible maintenir nombre tuples considérer augmente utilisation algorithme INCFDS avantageuse expliqué algorithme FASTFDS calcule ensembles accord vérifiés comparant toutes paires tuples relation tandis INCFDS calcule ensembles accord induits nouveau tuple algorithme FASTFDS ensembles accord préalablement calculé générer toutes vérifiées relation contre algorithme INCFDS regénère violées suite ajout nouveau tuple Conclusion article avons proposé nouvel algorithme appelé INCFDS permettant déterminer vérifiées relation suite ajout nouveau tuple Cette propo sition basée quelques résultats théorie hypergraphes permis définir nouvelle catégorisation résultats expérimentations menées bases benchmark montré cadre relations dynamiques notre approche incrémentale apporte appréciable rapport approche classique inférence Comme perspectives prolongement travail semble intéressant étudier autres opérations mises telles suppression modification tuples ailleurs serait intéressant étudier possibilité paralléliser algorithme INCFDS améliorer performances Références Abiteboul Vianu Foundations Databases Addison Wesley Armstrong Dependency structures relationships Congress Berge Graphs Hypergraphs North Holland Mathematical Library American Elsevier édition Flach Savnik Database Dependency Discovery machine learning proach Communications volume algorithme INCFDS Huhtala Kärkkäinen Porkka Toivonen efficient algorithm discovering functional approximate dependencies Computer Journal Kantola Mannila Raiha Siirtola Discovering functional inclu dependencies relational databases International Journal Intelligent Systems Lopes Novelli inférence dépendances fonctionnelles Ingénierie Systèmes Information Lopes Petit Lakhal Efficient discovery functional dependencies armstrong relations Proceedings International Conference Extending Database Technology Konstanz Germany Mannila Raiha Dependency inference Proceedings International Conference Large Bases Brighton England George Guided Relational Databases Beyond London Springer Verlag Novelli Cicchetti January efficient algorithm mining functio embedded dependencies Proceedings International Conference Database Theory London United Kingdom Giannella Robertson FASTFDS heuristic driven depth first algorithm mining functional dependencies relation instances Proceedings Third International Conference Warehousing Knowledge Discovery DaWaK Munich Germany September Hamilton FdMine Discovering functional dependencies database using equivalences Proceedings International Conference Mining Maebashi Japan Volume Summary discovery functional dependencies relational databases important mining domain Motivated application domains different approaches posed extract functional dependencies existing relations Nevertheless proposed approaches suppose database static recompute functional dependencies database updated avoid recomputation propose paper novel incremental approach allowing determine updated functional dependencies after insertion tuple Results experiments carried benchmark databases showed compared classical approach functional dependencies extraction proach brings important profits computation