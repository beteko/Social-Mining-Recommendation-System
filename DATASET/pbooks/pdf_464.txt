Extraction séquences fréquentes intervalles incertitude Zakour Sofian Maabout Mohamed Mosbah Sistiaga LaBRI Université Bordeaux FRANCE maabout labri mosbah labri 2MoRO Solutions Bidart FRANCE sistiaga 2moro zakour 2moro Résumé extraction séquences granularité temporelle moins importante selon besoins utilisateurs contraintes maine application proposons algorithme extraction séquences fréquentes intervalles partir séquences estampilles temporelles crètes intégrons relaxation contraintes temporelles introduisant définition séquences temporelles intervalles intervalles flètent incertitude occurrences précises évènements forma lisons nouveau concept exhibant certaines propriétés menons quelques expériences comparer qualitativement résultats autre proposition assez proche nôtre Introduction extraction séquences fréquentes introduite Agrawal Srikant comme extension algorithme Priori Agrawal Srikant calcule ensembles fréquents chronologie occurrence événements moins importante selon nature connaissances extraire effet parfois néces saire relaxer contraintes chronologie extraire informations utiles article proposons fusionner évènements consécutifs proches temporelle ensemble évènements simultanés estampille temporelle discrète exprimée intervalle temporel intervalle représente incertitude tants exacts occurrences évènements regroupés regroupement contraint taille fenêtre glissante fixée utilisateur travail réalisé cadre projet industriel anticiper opérations maintenance équipements nautiques exemple considérons historique utilisation avions désigne désigne opération maintenance ensemble séquences fixant support minimal taille fenêtre glissante égale notre approche retourne séquence traduit faits suivants Lorsque effectué importe ordre entre unités temps après intervalle suite réparation effectuée inter Extraction séquences fréquentes intervalles incertitude valle après Ainsi regroupements événements imprécision chronologie leurs occurrences techniques proposées littérature décrivons quelques Section permettent extraire informations exemple mêmes séquences contrainte support équivalente algorithme présenté Srikant Agrawal extrait séquence suivante Cette séquence représente série évènements fréquents celle retournée notre approche donne aucune information temporelle interprétée comme effectué suivi effectués importe ordre intervalle derniers mêmes suivis tâche manque information temporelle concernant enchainements évènements cette séquence difficilement ploitable expert cherche anticiper applications futures réparations sachant grâce cette anticipation importantes économies peuvent réalisées réduisant temps immobilisation avions section suivante présente succinct insistons surtout différence notre approche celles exploitent intervalles temporels Ensuite donnons définitions formelles propriétés séquences cherche extraire Section décrit processus extraction modification algorithme PrefixSpan terminons expérimentation permettant comparer notre approche technique littérature occurrence Hirate Yamana conclusion quelques perspectives Plusieurs travaux porté regroupement évènements extraction séquences fréquentes intervalles permettent regroupement certains évène ments utilisant notion fenêtre glissante regroupement phase traitement données lesquelles algorithme extraction suite exécuté Cependant éléments regroupés associés estampille temporelle discrète petite estampilles évènements groupe choix arbitraire nullement considérations simplification constitue perte infor mation faisant nombre séquences obtenues grand nombre séquences initiales séquence donner plusieurs regroupements différents alors problème interprétation support séquence Aussi algorithme Constraints LevelWise présenté Masseglia applique regrou pement évènements travers application fenêtre glissante intègre contraintes distance sépare transactions successives Cependant motifs extraits sentent estampillage temporel réduit possibilités exploitation Partant données initialement estampillées intervalles autres travaux proposés extraire séquences fréquentes important noter toutes approches citées dessous considèrent intervalle estampille associé évènement comme représentant durée laquelle évènement distingue notre approche considère intervalle comme incertitude moment exact duquel évènement Giannotti extraient séquences algorithme Priori identifient premier temps séquences fréquentes indépendamment Zakour estampilles suite séquence extraite intersectent intervalles temporels estampilles occurrences obtenir nouvelle suite intervalles sociés Guyet Quiniou représentent estampilles temporelles séquence forme hyper évènements séquence similarité entre séquences exprimée fonction volume intersection leurs hypercubes respectifs Grâce cette similarité auteurs regroupent séquences représentant groupe séquence extrait groupe question assez dense utilisent théorie intervalles Allen identifie treize tions entre intervalles algorithme extraction PrefixSpam appliqué séquences estampille temporelle intervalles résultat approches consiste ensemble relations fréquentes entre évènements séquences estampilles associées transactions cependant travail Yamana comme approche présentons considère séquences estampilles temporelles discrètes entrée extrait séquences fréquentes intervalles auteurs utilisent fonction paliers apparente fenêtre glissante Ainsi évènements proches temporellement peuvent retrouver groupes différents application paliers ailleurs distingue essentiellement techniques adoptées algorithmes première apparente priori utilisée exemple Srikant Agrawal Giannotti Rabatel seconde utilise stratégie diviser régner réductions progressives espace recherche sélection ensemble séquences fréquentes construction séquences longueur partir séquence longueur exemple Hirate Yamana Fournier Viger Guyet Quiniou Cette dernière avère moins coûteuse parcours données temps calcul cette raison algorithme proposons inscrit cette deuxième catégorie inspiré PrefixSpan utilisé Notations définitions premier temps définissons séquences temporelles estampilles discrètes telles elles énoncées plusieurs travaux traitant partir séquences porelles Hirate Yamana Fournier Viger ensemble évènements transaction ensemble nements simultanés séquence temporelle séquence transactions ordonnées chronologiquement chaque transaction associée estampille temporelle quence temporelle notée transaction estampille temporelle séquences temporellesD collection séquences chacune identifiée identifiant unique id_sequence support séquence séquences supportD respond pourcentage séquences contiennent fréquente seulement support supérieur seuil minimal minsupp utilisateur définissons maintenant séquences temporelles intervalles rappelons séquences associent transactions intervalles représentant incertitude Extraction séquences fréquentes intervalles incertitude occurrences évènements transaction exemple transaction contenant évènement Intuitivement relate suivant produit moment ponctuel entre instants Définition Séquence temporelle intervalles semble évènements séquence temporelle intervalles longueur saction estampille temporelle forme intervalle telle estampilles transactions séquence relatives occurrence premier évènement temps_occurrence séquence temporelle intervalles cohérente transactions succes sives Exemple exprime suivant produit occurrence ponctuelle intervalle produisent simulta nément unité temporelle après évènementA unités tempo relles après cohérente puisque borne supérieure second intervalle inférieure borne supérieur premier intervalle Concernant séquences temporelles estampilles discrètes transactions associées instant temporel ponctuel pendant lequel évènements aucune incertitude moment leurs occurrence chaque séquence porelle estampille discrète transformée largeur intervalles nulle incertitude nulle notée adapter délais temporels séquences besoins spécifiques extraction formulation contraintes temporelles considérées contraintes permettent fixer seuil maximal incertitude réguler espacements entres transactions successives séquence fixer longueur minimale maximale longueur satisfait contraintes temporelles mingap maxgap min_whole_interval max_whole_interval fenêtre glissante seulement régule distances temporelles minimale maximale entre transactions cessives mingap maxgap Whole_interval régule longueur minimale maximale séquence min_whole_interval max_whole_interval Fenêtre glissante permet regrouper évènements transactions successives transaction associant intervalle temporel largeur certitude maximale Zakour Exemple contraintes tempo relles mingap maxgap respectivement égales satisfait mingap puisque contre satisfait maxgap puisque toutes transac tions successivesmaxgap satisfaite taille fenêtre égale respecte taille fenêtre puisque autre fenêtre égale contrainte respectée intervalles séquence contraintes régulent effet paramètre temporel gèrent distance minimale respectivement maximale entre transactions successives corré lation relation occurrences entre elles significative transactions proches mingap respectivement éloignées maxgap soient reliées taille fenêtre regroupement évènements régit incertitude leurs occurrences contrainte whole_interval régule longueur séquence corrélation toutes transactions séquence significative définissons opérateur regrouper transactions succes sives séquence partir position joint transactions succèdent appliquant fenêtre taille espacement temporel maximal entre première dernière transaction groupe résultat séquence transac tions contiennent ensemble évènements joints estampille temporelle union intervalles transactions regroupées Définition Soient entier taille fenêtre définit opérateur Exemple taille fenêtrews alors évènements premières respecti vement dernières transactions regroupés intervalles leurs respec tivement associés fusionnés fusions autorisées fenêtre respectivement Notons effet lorsque regroupement commence deuxième position intervalles deuxième troisième transactions peuvent fusionnés puisque union large rapport taille fenêtre Finalement définissons maintenant opérateur longueur taille fenêtrews fournit ensemble opérateur applique fenêtre séquence faisant glisser envisage toutes possibilités fusion transactions successives Extraction séquences fréquentes intervalles incertitude Intuitivement glisser fenêtre regroupement fournit ensemble toutes séquences condensées combinaison regroupement transactions proches peuvent représenter séquence départ ensemble résultats applications séquence valeurs Définition taille fenêtre Alors définit comme Exemple séquence fenêtre Alors séquence incluse résultat contre induite précé dente stade pouvons définir relation inclusion entre séquences temporelles intervalles Intuitivement séquence temporelle intervalles contient autre séquence intervalles évènements chaque transaction contenus plusieurs transaction intervalle transaction implique celui transaction ordre transactions cependant respecté Définition Soient taille fenêtre contient notée ldnIp Exemple Soient puisque implique Cepen puisque Propriété Soientws taille fenêtre séquence temporelle estampilles discrètes contient seulement existe inclusion classique entre séquences Agrawal Srikant Après avoir défini opérateur inclusion pouvons redéfinir notion support séquence temporelle intervalles séquences temporelles estampilles discrètes considérons support séquences nombre séquences contiennent moins Définition support défini suppD besoins simplification suppD Zakour Extraction Cette section décrit procédé extraction séquences temporelles intervalles quentes partir séquences temporelles estampilles discrètes algorithme posons appelé séquences temporelles intervalles PrefixSpan utilise fenêtre glissante regrouper progressivement évènements proches respectant taille fenêtre ramener transaction regroupement permet unifier occurrences évènements distincts associe intervalle temporel ensemble instants occurrences initiaux chacun Notre algorithme applique approche pattern growth utilise méthode recherche verticale séquences basée projection premier temps ensemble séquences évènements fréquents extrait minsupp Ensuite extraction conti récursivement construction séquences partir séquence chaque itération applique étapes nouvelle projection séquences associée chaque étant identifiée espace recherche associé récursion repré sente ainsi espace contient éventuelles continuations séquence construite itération seconde étape consiste identifier ensemble partir associer chaque évènement fréquent intervalle représente estampille temporelle Chaque identifiée concaténée séquence extraite itération précédente construire nouvelle séquence nouvelle itération exécutée procédé arrêté conditions suivantes satisfaite Lorsque jection étape lorsqu aucune identifiée étape comme Hirate Yamana applique principe projection présenté dessus Cependant distingue considération fenêtre glissante niveaux sélection évènements fréquents projection espace recherche sélection évènements fréquents application fenêtre glissante inter vient associant occurrences décalées évènement occurrences doivent appartenir fenêtre Cette modification permet calculer fréquence nement appliquant relaxation temporelle contrôlée taille fenêtre Exemple séquence support projection espace recherche évènements fréquents relevés effet séquence permet espace recherche évènement fréquent occurrences varient unités temporelles rapport occurrences Concernant projection espaces recherche évènement fréquent application fenêtre permet prendre considération aspect glissant définissons projection façon prenne considération exploration arrière évènements Cette exploration restreinte taille fenêtre telle projection considère désordre local taille fenêtre évènements proches éviter extraction multiple séquence longueur partir motif longueur retour rétroactif considère évènements traités extraire fréquents longueur partir définissons ainsi projection séquence comme Extraction séquences fréquentes intervalles incertitude Définition Soient ensemble évènements triés séquence porelle Supposons existe avons alors préfixe rapport séquence précède wprefixe suffixe rapport séquence consi dérée comme continuation wsuffixe telle séquences temporelles séquence fréquente projection définie wsuffix Exemple exemple précédent considère évènement fréquent quence extraite devient projection définie notre approche permet considérer éléments autour dernier évènement fournit recherche suivant espace évène fréquent puisque apparait séquences estampilles proches relativement taille fenêtre permet construire motif représenté séquence extraction motif évènement compte retour arrière extraire séquence Cette section présenté STI_PS algorithme extraction fréquentes utilisant méthode pattern growth algorithme extrait séquences partir séquences réduisant chaque itération taille intervalles temporels instaurés application fenêtre glissante niveaux algorithme identification évène ments fréquents projection Expérimentation Cette section présente comparaison séquences extraites algorithme celles obtenues algorithme présenté Hirate Yamana algorithmes basés prefixSpan distinguent utilisent méthodes Zakour différentes regrouper transactions effet fonction apparente fenêtre glissante alors notre algorithme utilise fenêtre glissante comparaison chaque valeur fenêtre glissante notre algorithme fonction pallier donnons dessous exemple expliquant fonctionnement renvoyons lecteur Hirate Yamana Exemple Considérons séquences support minimal minsupp nêtre glissante fonction paliers intervalles associés seront forme algorithme extrait abord séquences fréquentes suivantesA estampille toutes séquences corres intervalle considérant séquence projection fournit quences suivantes partir ensemble motif identifié considéré comme fréquent apparaît intervalle associé applique donne projection apparaît séquences alors Ainsi seule extraite considérée comme fréquente algorithmes développés utilisant version prefixSpan présentée Fournier Viger implémentés machine Windows Intel comparons séquences extraites méthodes utilisant données synthétiques séquences contiennent évènements différents caractérisent écart moyen entre transactions unités temporelles longueur moyenne sactions séquences extraction contraintes mingap respectivement maxgap min_whole_interval max_whole_interval fixées quences utilisée contient séquences avons délibérément choisi données petite taille fondons notre étude temps exécution plutôt résultats obtenus précisément nombres séquences extraites article notre objectif valider notre approche vérifiant résultats extraits téressants cadre application ciblons effet notre approche tolérante chronologie évènements naturel attendre extraie informations Figure illustre résultats obtenus faisant varier férents paramètres chaque combinaison valeurs paramètres avons mesuré nombre séquences extraites méthodes chaque algorithme avons calculé séquences maximales partir résultats obtenus figures illustrent variations tailles résultats différentes valeurs regroupement Elles montrent nombre séquences extraites STI_PS beaucoup important obtenus expliqué application contraintes temporelles souples effet fenêtre glissante regroupe transactions proche proche permet avoir toutes combinaisons possibles groupement aussi extraire séquences longues Aussi retour arrière projection permet prendre compte évènements certains voient support augmenter tableau illustre philippe fournier viger index Extraction séquences fréquentes intervalles incertitude Comparaison nombre séquences extraites faisant varier support taille largeur palier fonction détail nombres séquences extraites méthodes valeur regrou pement variable support Notons lorsque méthodes fournissent séquences longueurs correspondance figure tableau séquences maximales extraites notre approche moins nombreuses celles obtenues figure illustré exemple Cependant lorsque séquences STI_PS longues celles retournées maximales nombreuses nombre majoritairement représenté motifs longueurs supérieures quences maximales extraites Notons enfin nombre séquences maximales extraites notre approche reste comparable celles Exemple reprend exemple vérifier longues séquences males extrait Celle extraite STI_PS considère séquence extraite traduit apparaît intervalle après séquence obtenue STI_PS exprime entre autres apparaît intervalle après contient séquence maximale extraite notre approche inclut toutes séquences maximales extraites tolérant incertitude Zakour maximaux PrefixSpan maximaux Nombre séquences extraites fonction variation taille support Conclusion article présente algorithme extraction séquences appliquant fenêtre glissante permet relaxation contraintes temporelles fenêtre regroupe évènements transactions voisines proche proche permettant considérer sieurs combinaisons données extraction algorithme appliqué séquences estampilles discrètes extrait séquences fréquentes estampilles porelles intervalles estampille intervalle représente incertitude temporelle moment occurrence évènements transaction ampleur cette incertitude régulée taille fenêtre glissante Comparée solution proposée Hirate notre approche permet extraire grand nombre séquences certaines séquences obtenons longues celles extraites futurs travaux porteront premier temps optimisation extraction maximaux effet efficace abord extraire motifs ensuite retenir maximaux deuxième temps comptons valider notre approche cadre application réelle pronostiquer occurrence pannes systèmes complexes partir données utilisation biais séquences obtenons Références Agrawal Srikant algorithms mining association rules large bases Proceedings conference Agrawal Srikant Mining sequential patterns Proceeding confe rence Computer Society Press Allen Maintaining knowledge about temporal intervals Communications Extraction séquences fréquentes intervalles incertitude Jiang efficient algorithm mining interval based patterns large database Proceedings international conference Information knowledge management Proceedings conference Fournier Viger Nkambou Nguifo knowledge discovery framework learning models interactions intelligent tutoring systems Proceeding Mexican International Conference Artificial Intelligence Giannotti Nanni Pedreschi Pinelli Mining sequences temporal annotations Proceedings symposium Applied computing Guyet Quiniou Mining temporal patterns quantitative intervals Proceedings International Workshop Mining Complex Computer Society Guyet Quiniou Extracting temporal patterns interval based sequences Proceedings IJCAI conference Hirate Yamana Generalized sequential pattern mining intervals Journal Computers Masseglia Poncelet Teisseire Efficient mining sequential patterns constraints Reducing combinations Expert Mortazavi Pinto Dayal Prefixspan Mining sequential patterns prefix projected growth Proceedings conference Raschia Mouaddib Saint Benatallah sequence summarization scale chronology dependent applications Proceedings conference Rabatel Bringay Poncelet Sensor mining anomaly detection railway Proceedings Industrial Conference Advances Mining Srikant Agrawal Mining sequential patterns Generalizations performance improvements Proceedings conference Mining nonambiguous temporal patterns interval based events Trans Knowl Summary Sequential patterns mining several domains granularity important regarding application domain paper propose frequent interval sequences extraction technique discrete temporal sequences using sliding window approach order relax constraints extracted sequences offer interesting overview original allowing temporal leeway extraction process formalize extraction under classical support constraints conduct experiments synthetic validating proposal