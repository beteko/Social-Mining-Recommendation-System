Spectral Centroïd données massives Brieuc Conan Alain Lydia Boudjeloud Assala Alexandre Blansché Université Lorraine Saulcy 57045 CEDEX brieuc conan lorraine alain lorraine lydia boudjeloud assala lorraine alexandre blansche lorraine lorraine Résumé intéressons classification supervisée séries nologiques faire utilisons algorithme Spectral Centroïd variante Means Spectral Centroïd utilise mesure similarité entre séries chronologiques invariante translation change échelle algorithme coûteux temps calcul phase affectation nécessite tester toutes translations possibles identifier meilleure phase représentation calcul nouveau barycentre nécessite extraction petite valeur propre matrice propo travail trois optimisations identification meilleure translation réalisée efficacement utilisant transformée discrète Chaque matrice calculée incrémentalement calcul nouveau barycentre effectuer moindre grâce méthode puissance itérée trois optimisations fournissent exactement classi fication Introduction travail intéressons classification supervisée séries chrono logiques issues analyse media sociaux faire émerger différents types partages information travail inscrit cadre objet principal étude diffusion information réseaux socionumériques Twitter Pendant tweets citant article presse liste prédéfinie médias collectés Plusieurs types séries temporelles peuvent définis exemple associer série temporelle chacune collectées encore chacun hashtags apparaissant collecte série temporelle alors ensemble informations horodatage tweets citant article comportant hashtag étude séries chronologiques présente problématiques sémantique concerne choix dissimilarité comparer séries autre technique concerne temps calcul classification séries point sémantique dissimilarité choisie permettre mettre évidence comportements similaires échelles différentes effet volume tweets engendré quotidien national évidemment différent celui journal presse locale autre permettre certaine lattitude façon distinguer Spectral Centroïd données massives Hashtags comportements similaires étude formes partages indépendamment moment derniers voudrait exemple différentes séries chronologiques figure retrouvent classe effet elles comportement dates différentes Ainsi hashtag iphone6plus septembre comportement similaire applewatch applelive keynote iphone6 utilisé moment début septembre premier temps avions étudié impact échelle logarithmique classification séries Charpentier Flachaire Conan celle grande tendance minimiser série avons besoin dissimilarité invariante changement échelle translation existe nombreux travaux comparaison séries temporelles pourra exemple référer Aghabozorgi étude comparative approche classique distance Dynamic Warping adapte données grande dimension exemple Keogh Pazzani Keogh Ratanamahatana Cependant cette distance préserve forcément forme activités derniers pouvant moins étirés compressés temps autres travaux proposent dissimilarité indépendante translation temps effets échelles conserve aspect général périodes activités gorithme Spectral Centroïd proposé Leskovec thodes algorithme means souffre écueils phase fectation nécessite tester toutes translations possibles entre séries temporelles identifier meilleure phase représentation calcul nouveau barycentre nécessite abord construction matrice extraction petite valeur propre cette matrice étapes révèlent coûteuses temps calcul pallier problème auteurs proposent approche multi niveaux algorithme pliqué succession séries représentant information résolutions différentes présentons trois améliorations algorithme dernier Conan étant utilisé identique approche multi niveaux cette dernière bénéficie automatique améliorations proposées travail Aussi comparons algorithme présenter trois optimisations Spectral Centroïd première amélioration porte phase affectation identification meilleure translation réalisée efficacement espace fréquentiel utilisant transformées Fourier Cette approche permet réduire complexité algorithmique recherche améliorations suivantes portent phase représentation première permet célérer calcul matrices nécessaires obtention barycentres grâce approche incrémentale seconde ramène extraction petite valeur propre problème équivalent extraction grande valeur propre dernier problème classique algèbre linéaire possède algorithmes résolution performances éprouvées exemple méthode puissance itérée trois optimisations fournissent exactement résultat classification celui réduisant fortement temps calcul suite article présentons algorithme Spectral Centroïd section trois optimisations proposons réduire temps calculs section résultats expérimentaux exposés section concluons section algorithme Spectral Centroïd Dissimilarité invariante décalage changement échelle considère séries chronologiques valeurs positives indicées intervalle indice petit série indice grand nombre valeurs norme définit classiquement grâce produit scalaire considère opérateur décalage temporel paramètre paramètre appartient intervalle notéO série décalée indice valeurs produit scalaire décalage écrit Comme indiqué introduction dissimilarité utilisée algorithme invariante décalage temporel changement échelle concentre forme séries chronologiques minimisation paramètre permet neutraliser effets échelle entre séries auraient comportement ordres grandeur différents Voici expression dissimilarité Spectral Centroïd données massives permet obtenir expression suivante valeur permettant calcul obtenue lation dérivée remplaçant cette expression obtient Comme pratique normes peuvent précalculées calcul nécessite évaluation unique produit scalaire résultat apparait version longue papier Leskovec démonstration propriété symétrie évidente expression obtenue Spectral Centroïd algorithme Spectral Centroïd variante Means utilise similarité définie section précédente algorithme optimise critère inertie suivant nombre total classes classe numéro barycentre séries chronologiques traiter manière identique Means exécute itérativement étapes affectation production nouvelle partition représentation calcul nouveaux barycentres phase affectation utilise dissimilarité complexité étape affectation nombre séries chronologiques nombre classes longueur moyenne séries chronologiques effet évaluation complexité considère phase représentation calcule barycentre classe minimisant inertie suivante argmin argmin Leskovec auteurs indiquent problème minimisation équivalent extraction petite valeur propre matrice somme apparaissant expression droite effectue diagonalisation complète matrice extraire cette valeur propre complexité algorithmique terme calcul matrices somme terme extraction toutes valeurs propres toutes matrices considère complexité donnée calcul matrices supérieur celui diagonalisation Conan Améliorations proposées Affectation calcul efficace grâce transformée Fourier calcul dissimilarité nécessite calculer toute valeurs trouver minimisant proposons accélérer calcul menant calcul espace fréquentiel grâce transformées Fourier remarque abord minimiser revient maximiser produit scalaire vecteur contenant mêmes valeurs complété zéros droite longueur égale définit vecteur complété zéros gauche longueur opérateur calcule transformée Fourier discrète vecteur trans formation inverse notée remarquant fonction fonction corréla croisée transformée Fourier corrélation croisée exprime forme simple produit entre spectres espace fréquentiel valeurs données transformation suivante application conjugaison complexe associe évaluation toutes valeurs nécessite trois transformées Fourier transformée inverse produit vecteurs complexes espace fréquentiel produit spectre conjugué spectre complexité algorithmique calcul transformée Fourier rapide longueur moyenne séries complexité algorithmique phase affectation présent calcul complet produits scalaires notre implémentation transformées Fourier séries données ainsi celles barycentres calculées Grâce calculs évaluation dissi milarité nécessite seulement calcul transformée inverse autres transformées nécessaires Cette optimisation change complexité rique permet gagner moins facteur temps calcul phase affec tation Représentation Calcul barycentres Calcul valeurs propres méthode puissance itérée Comme indiqué section précédente calcul barycentre nécessite extraction petite valeur propre matrice calcul réaliser diagonalisation complète matrice utilisant algorithme extrait juste méthode puissance inverse nécessitant calcul inverse matrice cette approche coûteuse impose résolution système chaque itération cependant remarquer problème extraction simplement extraction grande valeur propre matrice précisément Spectral Centroïd données massives argmin argmax argmax µtMkµ µtMkµ quotient Rayleigh associé matrice Cette fonction propriété suivante Maximiser revient extraire vecteur propre associé grande valeur propre réalisé efficacement méthode puissance itérée Björck remarquer valeurs positives barycentre choisi valeurs positives effet contient valeurs négatives vecteur valeurs absolues mènera nécessairement valeur pratique propre toutes valeurs signe négatif suffit prendre opposé vecteur terme réécrire manière suivante terme corres projection vecteur vecteur unitaire opérateur projection grande valeur propre égale suivantes nulles cardinal classe argument constate valeurs propres comprises intervalle Toutes valeurs propres positives surtout grandes valeurs propres distinctes favorise conver gence méthode puissance itérée Cette méthode nécessite chaque itération multiplication matrice vecteur nombre itérations relativement réduit calcul exact barycentres efficacement Calcul matrices approche incrémentale remarquer calcul matrices manière incrémentale effet matrice somme contributions chaque individu classe contribution matrice remarquer matrices mêmes dimensions séries mêmes longueurs sommation effectue ajoutant bonne position matrice matrice calcul complet toutes matrices nécessite sommes individu cours itération individu change classes mettre matrice classe départ matrice classe arrivée manière suivante retranche contribution individu matrice départ ajoute cette contribution matrice arrivée spécifique autre nécessite effectuer cette double ration individu reste classe meilleure translation Conan alors matrice retrancher ancienne contribution ajouter contribution translatée matrice calcul incrémental révèle efficace nombre modifications changement classes translation différente reste faible nombre difications calcul incrémental nécessite sommes matrices soustraction addition alors calcul complet nécessite sommes espèrer incrémental révèle rapide calcul complet remarquer critère détermine approche incrémentale utilisée simple mettre oeuvre faiblesse critère tient prend compte longueur séries critère utilisé travail Enfin calcul incrémental impose mémoire beaucoup important proposer estimation suivante matrices symétriques seuls triangulaires inférieures matrice mémoriser longueur matrice égale double longueur grande série cause translations séries longueur maximum taille maximum traitée travail chaque matrice occuper jusqu 400Mo dizaine classes mémoire calcul incrémental atteindre important Résultats expérimentaux Notre millier séries temporelles correspondant hashtags cités étude discrétisation échelle journée place Chaque valeur série contient nombre tweets ayant référence hashtag pendant journée entière Après cette discrétisation séries moyenne points série courte comptant points tweets répartis jours série longue façon faciliter comparatifs limitant biais utiliserons essai comme données partir desquelles construirons autres comptant séries séries longues assurons ainsi avoir séries similaires forme ensemble tests faire augmentons nombre séries répliquant séries données initial obtenons ainsi données grand données initial augmentons longueur séries concaténant chacune séries précédentes bruitons chacune séries obtenues chaque point série modifié amplitude tirage uniforme valeur initiale obtenons ainsi nouveau données contrôlons taille longueur séries appliquons comme Leskovec régularisation chaque série grâce noyau gaussien écart effet données Twitter naturellement bruitées nécessitent lissage avant exécuter algorithme Spectral Centroïd données massives Nombre séries optimisé optimisé Temps exécution seconde normalisé fonction nombre séries Analyse résultats cherchons analyser impact trois optimisations temps calcul paramètre lissage gaussien rappelle chaque point séries respond journée choix validé visuellement nombre classes partition toutes expériences nombre maximum itérations arrêter avant inertie normalisé prend valeur inférieure algorithme optimisé algorithme trois optimisations exécutés données initialisations aléatoires temps chine ensemble exécutions reporté secondes suite travail expériences menées serveur contenant coeurs exécution mémoire algorithmes réimplémentés diagonalisation matrices utilise bibliothèque Abeles calcul transformées Fourier utilise bibliothèque JTransforms Wendykier Etude effet taille données cette première expérience étudions effet taille données temps exécution algorithme différentes optimisations données utilisés respectivement séries chronologiques longueur séries comprise entre moyenne Comme indiqué précédemment critère arrêt double nombre maximum itérations algorithme stoppé inertie normalisé Conan inférieur nombre itérations algorithme varie exécution autre temps calcul dépendants nombre itérations travail souhaitons analyser impact durée calcul trois optimisations primant effet nombre itérations réalisé algorithme résoudre problème avons appliqué temps calcul reportés travail normalisation consi dérant chaque exécution réalise itérations valeur correspondant moyenne nombre itérations toutes expérimentations algorithme optimisations complexité linéaire nombre séries chronologiques traiter expérimentations représentées figure rentes cette complexité théorique complexités étant linéaires facteur accéléra estimé séries affectation calcul barycentres durée nonopti durée nonopti durée nonopti durée nonopti Temps exécution seconde normalisé version optimisée facteur accélé ration rapport version optimisée table fournit durées normalisées totales intermédaires secondes rithme optimisé facteurs accélération dernier rapport version optimi recalculer durées associées version optimisée phase précalcul transformées Fourier séries données reportée négligeable devant autres quantités obtient facilement retranchant temps total somme temps intermédiaires affectation calcul barycentres constate phase affectation partie coûteuse algorithme optimisé données grand représente temps total utilisation transformée Fourier fournit facteur accélération cette phase affectation temps calcul matrices extraction grandes valeurs propres algorithme optimisé marginaux comparés phase affectation grand données calcul représente temps total calcul centres facteur accélération phase calcul matrices croît nombre séries passant explique grande efficacité calcul incrémental quand nombre séries augmente Enfin noter facteurs accéléra importants obtenus grâce utilisation méthode puissance itérée grands données cette accélération retrouve facteur accélération global effet calcul global dominé nombre séries Etude effet longueur séries cette expérience souhaite étudier effet longueur séries temps exécution taille données fixée considère données Spectral Centroïd données massives Longueurs séries version optimisée version optimisée barycentre matrice affectation Temps exécution minute normalisé fonction longueur séries durées intermédiaires affectation calcul matrices barycentres empilées obtenus appliquant facteurs multiplicatifs suivants premier données facteur multiplicatif unité séries longueur moyenne données suivants longueurs moyennes longueurs maximales phase affectation complexité nombre séries barycentres étant intégré notation longueur séries phase calcul matrices complexité quadratique phase calcul barycentres grâce méthode puissance itérée semble avoir aussi complexité quadratique nombre itérations méthode relativement constant indépendant taille matrices données considérés rappelle algorithmes extraction ensemble valeurs propres matrice complexité cubique explique facteurs accélération importants méthode puissance itérée modélisant relation entre temps calcul total longueur séries modèle linéaire paramètres temps valeur estimée paramètre complexité quadratique longueur séries figure tableau donnent quelques éléments chiffrés comportement pratique algorithme temps observés importants expériences portant longueurs séries durées toutes exprimées minutes figure permet seulement comparaison algorithme optimisé rapport version optimisée Conan longueurs affectation calcul barycentres durée nonopti durée nonopti durée nonopti durée nonopti Temps exécution minute normalisé version optimisée facteur accéléra rapport version optimisée permet aussi visualiser chacune phases affectation calcul matrices calcul barycentres temps total temps exécution version optimisée longueurs reportés figure grands devant version optimisée peuvent recalculés grâce facteurs accélération fournis tableau Contrairement expériences portant nombre séries phase présentation calcul barycentres négligeable rapport phase affectation domine maintenant cette dernière constate calcul matrices calcul barycentres temps proportionnels données séries groupées classes coefficient proche Enfin optimisations efficaces longueur séries augmente séries éléments facteur accélération séries presque éléments supérieur Conclusions avons proposé ensemble optimisations permet améliorer complexité algorithme fournissant résultats identiques expériences suggèrent complexité cubique taille séries obtient présent complexité quadratique dizaine classes longueurs séries égales version optimisée presque rapide conforter premiers résultats semble souhaitable mener autres riences nouveaux données notamment issus autres domaines réseaux socionumériques Remerciement travail réalisé cadre Spectral Centroïd données massives Références Abeles Efficient matrix library Aghabozorgi Shirkhorshidi series clustering decade review Björck Numerical Methods Matrix Computations Springer International Publi shing Charpentier Flachaire transform kernel density estimation income distribution paper Université Québec Montréal halshs 01115988 Conan Boudjeloud Blansche Compagno Mercier Représentation données temporelles modèle échelle logarithmique Proceed 13ème atelier Fouille Données Complexes Extraction Gestion Connaissances Reims Janvier Keogh Pazzani Scaling dynamic warping datamining appli cations Proceedings Sixth SIGKDD International Conference Knowledge Discovery Mining Keogh Ratanamahatana Exact indexing dynamic warping Knowledge Information Systems Digital signal processing Artech House communication electronic defense library Artech House Wendykier Jtransforms sites google piotrwendykier software Leskovec Patterns temporal variation online media Proceedings fourth international conference search mining Summary introduce Spectral Centroïd algorithm variant Means cluster large series Spectral Centroïd dissimilarity between series which invariant garding translation scaling algorithm relatively expensive computation Indeed during assignment phase requires testing possible translations identify solution During representation phase calculation barycenter requires extraction smallest eigenvalue matrix propose improve these points measure subsequently impact these improvements various experi ments