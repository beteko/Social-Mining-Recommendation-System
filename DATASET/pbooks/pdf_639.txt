articl assemblag pdfdécouvert itemset fréquent ferm architectur multicœur benjamin négrevergn alexandr termi françois méhaut takeak passerel 38402 saint martin franc benjamin negrevergn francois mehaut alexandr termi liglab national institut informatic hitotsubash chiyod tokyo japan résum papi proposon algorithm parallel découvert itemset fréquent ferm algorithm reconnu comm algorithm séquentiel efficac tâch présen auss interfac parallel simpl puiss notion tupl spac répartit dynam travail grâc étud expérimental détaill montron algorithm suffis géner calcul efficac fréquent ferm creus dens amélior ains introduct découvert motif fréquent domain majeur fouill origin domain trouvent traval agrawal srik découvert itemset fréquent découvert itemset fréquent consist transact list item seuil support minimal minsup découvr itemset apparaissent minsup simpl domain découvert motif fréquent compar recherch séquenc arbre graph fréquent retrouv appliqu particuli analys vent organis commercial relat simpliqu amélior algorithm signif découvert motif fréquent réalis itemset fréquent adapt motif complex ticuli fermetur pasqui méthod géner candidat workshop goethal confront algorithm cherch itemset fréquent détermin meilleur solut gagn 2004b combin amélior niveau issu théor énumer optimis niveau optimis répartit découvert itemset fréquent ferm multicœur temp calcul mémoir utilis algorithm séquentiel présent meilleur perform algorithm séquentiel présent capabl ploit potentiel parallel processeur modern concep processeur ordin radical chang limit physiqu teint augment fréquenc horlog perform contr moor toujour valabl impliqu nombr transistor grav doubl permettr augment perform chercheur constructeur propos solut mettr plusieur cœur calcul compos physiqu exploit mieux cesseur multicœur imper concevoir algorithm parallel lesquel choix algorithm algorithm séquentiel nécessair mieux adapt object articl présent algorithm parallel extract itemset fréquent ferm capabl exploit efficac processeur multicœur ordin actuel retrouv bureau major chercheur analyst expérient focalis machin processeur multicœur présenton nouvel interfac parallélis notion tupl spac interfac expos primit implémenteur algorithm utilis intern model efficac distribu calcul présenton ensuit algorithm utilis interfac parallélis articl suiv défin briev blem extract itemset fréquent ferm présenton extract parallel motif fréquent multicœur décrivon méthod tupl spac algorithm parallel présent étud expérimental détaill compar concluon dresson quelqu perpect traval futur princip extract itemset fréquent ferm introduison principal notat utilis articl défin extract itemset fréquent ferm présenton ensuit posit ensembl item transactionnel ensembl chaqu inclus appel transact ensembl appel itemset itemset transact conten appel occurrent tidlist ensembl occurrent tidlist appel support encor fréquenc égal support seuil minimal support minsup itemset fréquent support minsup ensembl itemset fréquent négrevergn pair itemset équivalent tidlist tidlist relat partition itemset class équivalent itemset inclus chaqu class équivalent appel itemset ferm ensembl itemset fréquent ferm intéress transactionnel seuil support minimal minsup extrair itemset fréquent ferm traval anné extract parallel motif fréquent cluster agrawal shaf traval concentrent capac augment taill trait amélior perform faison mention focalis extract parallel motif fréquent architectur multicœur problémat sensibl algorithm exist littératur extract itemset fréquent ferm propos lucches strateg parallel niqu travail blumof leiserson lorsqu thread travail autr derni travail premi thread rédui ains déséquilibr charg solut contient optimis amélior utilis cach création conditionnel appel projec tion articl techniqu cour utilis extract itemset fréquent parallel expliquon model parallélis avon adopt présenton algorithm faut plac inviton lecteur intéress réfer articl 2004a expliqu algorithm séquentiel model distribu calcul algorithm récurs appel structur arbre rithm présent qualit intéress parallélis nœud niveau calcul mani indépend besoin synchronis plex extract motif fréquent général particuli iter récurs temp calcul variabl distribu tiqu travail engendr déséquilibr charg comm montr lucches comm autr traval proposon approch répart dynam travail notr interfac model lind propos gelernt model thread communiquent espac mémoir appel tupl spac ajout retir tupl primit notr interfac parallélis simpl tupl tupl primit assurent répartit dynam travail tupl travail thread récup primit iter géner découvert itemset fréquent ferm multicœur travail distribu inser tupl tupl spac model distribu calcul depend mani organis tupl tupl spac capac passag échel programm utilis tupl spac dépendront gestion tupl spac notr implément tupl spac stoqu tupl banc travail nombr thread utilis travail assign chaqu thread limit content moment appel primit chaqu thread ajout consomm tupl propr lorsqu thread tupl spac tupl autr form travail direct ger tupl spac transparent algorithm oper synchronis nécessair architectur tupl spac général content thread calculent tupl engendr amélior utilis cach parallélis tupl contient parametr appel récurs parallélis arbre appel récurs chaqu appel récurs remplac oper dépos tupl spac tupl parametr appel programm principal initialis tupl spac tupl conten parametr correspond racin arbre appel récurs démarr thread trait chaqu thread boucl récuper tupl procédur effectu appel fonction trait parametr correspond limit nombr tupl surcoût gestion profondeur arbre recherch appel récurs trait direct cré tupl expérient comparon mt_closed lucches autr approch parallel extract itemset fréquent ferm implément notr implément implément partag implément original entier réécrit utilis tupl spac tupl spac écrit posix thread implément mt_closed implément original auteur titr référent avon égal compar temp calcul implément séquentiel expérient intel processeur cœur utilis fourn workshop disponibl workshop goethal avon fectu manqu plac reporton résultat dens accident creus t10i4d100k résultat présent figur term temp calcul speedup pouvon remarqu dens mt_closed présent meilleur temp exécu expliqu mt_closed utilis négrevergn nombr thread accident temp sequentiel closed execu nombr thread accident speedup closed speedup résultat accident dens nombr thread t40i10d100k temp sequentiel closed execu nombr thread t40i10d100k speedup closed speedup résultat t10i4d100k creux représent bitmap transact efficac dens amélior encor efficac mt_closed utilis instruct processeur fair calcul bitmap expérient lucches amen speedup contr présent auss capac passag échel mt_closed revanch creus minimum ordre rapid mt_closed algorithm mt_closed itemset fréquent ferm comm linéair fonction nombr itemset fréquent ferm temp exécu faibl notr strateg parallélis profit avantag term complex théoriqu mt_closed exploit perform processeur multicœur conclus perspect avon présent articl interfac simpl parallélis algorithm algorithm utilis interfac parallélis algorithm intérêt méthod parallélis présenton général appliqu autr algorithm extract motif fréquent découvert itemset fréquent ferm multicœur expérient référent domain montr notr algorithm résultat auss creus dens amélior ains prévoyon intéress machin mult processeur multicœur pass échel cœur machin apparaissent particuli satur mémoir cœur référent agrawal shaf parallel mining associ rul tran knowl agrawal srik algorithm mining associ rul proceeding conferent blumof leiserson scheduling multithreaded comput stealing gelernt multipl tupl spac lind goethal repository websit helsink mining frequent pattern candidat gener sigmod proceeding international conferent manag lucches orlando perego parallel mining frequent closed pattern harnessing modern comput architectur pasqui bastid taouil lakhal efficient mining associ rul closed itemset lattic inform uchid arimur 2004a efficient algorithm enumerating closed pattern transact databas discovery scienc kiyom arimur 2004b efficient mining algorithm frequent closed maximal itemset parthasarathy ogihar parallel algorithm discovery associ rul knowl discov summary pap parallel algorithm discovering closed frequent based algorithm recognized efficient serial algorithm simpl powerfull parallelism interfac based concept tupl spac efficient dynamic sharing detailed experimental study algorithm generic comput efficiently closed frequent itemset spars dens databas improving stat