Traitement données consommation électrique Système Gestion Données Talel Abdessalem Chiky Georges Hébrail Louis Vitti Paris Laboratoire Département Informatique Réseaux Barrault 75634 Paris Cedex Email prenom Département ICAME Avenue Général Gaulle 92140 Clamart Email georges hebrail Résumé développement compteurs communicants consomma tions énergie électrique pourront terme télérelevées fournisseurs électricité temps pouvant aller jusqu seconde générera informations continu rythme rapide quantité importante Systèmes Gestion Données aujourd disponibles forme prototypes vocation faciliter gestion Cette munication décrit étude expérimentale analyser avantages limites utilisation prototypes STREAM TelegraphCQ gestion données consommation électrique Introduction envisagé déployer France prochaines années compteurs commu nicants grand nombre clients compagnies électricité image réalisé Italie société nouveaux compteurs reliés tèmes Information fournisseurs électricité permettront relever distance consommations électricité effectuer opérations facturation agréga contrôle approche standard traitement données utiliser Systèmes Gestion Bases Données assurent stockage permettent consulter requêtes Cette approche trouve limites lorsque données importants débit nombre nouvelles approches développées domaine bases données traiter façon performante données mémoriser ensemble informations Systèmes Gestion Données encore Stream Management anglais Plusieurs prototypes développés dernières années répondre besoins systèmes traiter temps plusieurs données requêtes dites continues travail présenté décrit expérimentation prototypes domaine public Traitement données consommation électrique STREAM Arasu TelegraphCQ Chandrasekaran réali sation fonctions traitement données consommation électrique disponibles forme partir compteurs communicants communication organisée comme section présente général particulier systèmes STREAM TelegraphCQ section présente notre expérimenta synthèse celle exposée section Enfin concluons section donnons perspectives recherche Systèmes Gestion Données Systèmes Gestion Bases Données logiciels permettant définir structures données stocker données structures modifier données consulter requêtes utilisés relationnels données structurées forme tables aussi appelées relations langage standard spécifier requêtes bases données relationnelles Systèmes Gestion Données préfigurent prochaines générations effet devant volumétrie cesse importante données produites systèmes mesure systèmes informatiques certaines applications cessitent lever hypothèse toutes données produites stockées données avant consultées requêtes structure données celle collection données entrants traités pondre requêtes utilisateurs elles mêmes définies produire sortants titre exemple entrants données correspondent mesures consommation électricité différents points réseau électrique requête utilisateur consister restitution consommations moyennes maximales chaque département trois dernières heures travaux recherche menés Etats thème données divisent principalement grandes directions Babcock Golab conception systèmes gestion données conception algorithmes fouille données mining pouvant fonctionner données mémoriser ensemble informations apparaissant intéressons uniquement gestion données permettent formuler requêtes dites continues évaluent mesure différents lesquels elles portent alimentés requêtes aient nécessitent stockage ensemble techniques trage utilisées fenêtre définit intervalle temporel exprimé terme durée exemple dernières minutes forme logique exprimé nombre tuples exemple derniers éléments fenêtres peuvent délimitées bornes fixes glissantes temps figure présente architecture abstraite extraite Golab moniteur entrée réguler débit arrivée données amené supprimer quelques tuples surcharge système données stockées temporai rement buffers working storage permettre traitement requêtes fenêtrées résumés éventuellement constitués summary storage lorsque capacité stockage permet gérer entrants résultat requêtes alors Abdessalem proché stockage statique static storage assure mémorisation données struc provenance ainsi données présentes façon permanente Lorsque requêtes utilisateurs définies celles stockées système query repository traitées processeur requêtes query processor dernier charge définir optimisé exécution ensemble requêtes mutualisant ressources entre plusieurs requêtes produire résultats requêtes directement forme forme données stockées temporairement output buffer mises périodiquement noter plans exécution requêtes doivent figés peuvent remis question ajout nouvelles requêtes variations contenu débit Architecture globale applications motivé développement portaient supervision réseaux informatiques nombreuses autres applications développées tement sites tickets communications fixes mobiles données capteurs trafic routier météorologie exemple aussi données boursières sieurs systèmes prototypes développés certains vocation généraliste STREAM Arasu TelegraphCQ Chandrasekaran Borealis Abadi Aurora Medusa Zdonik alors autres destinés particulier application Gigascope Cranor Hancock Cortes NiagaraCQ STREAM STREAM STanford stREam Management système prototype gestion données généraliste développé Université Stanford Arasu système permet appliquer grand nombre requêtes déclaratives continues statiques tables dynamiques données langage déclaratif Continuous Query Language Arasu dérivé implémenté pouvoir traiter requêtes continues STREAM considère structures données Traitement données consommation électrique ensemble éléments tuple appartenant estampille temporelle timestamp tuple croissant façon monotone Relation relation ensemble tuples dépend temps chaque instant relation susceptible avoir nouveau contenu language spécifie opérations sélection agrégation jointure fenêtrage ainsi trois opérateurs transformant relations Istream envoie forme nouveaux tuples apparus période Dstream envoie forme tuples supprimés période Rstream envoie forme tuples appartenant période supporte fenêtres glissantes décliner groupes fenêtre basée temps Range fenêtre basée nombre tuples fenêtre partitionnée Partition similaire Group utilisateur saisit requêtes grâce interface graphique utilisant fichier exécution requête système composé opérateurs buffers garder temporairement données encore traitées résumés certaines données donner réponses approximatives surcharge système TelegraphCQ TelegraphCQ Système Gestion Données réalisé Université keley Chandrasekaran système construit comme extension relationnel PostGreSQL supporter requêtes continues données format données défini comme toute table PostGreSQL langage finition données PostGreSQL clause CREATE STREAM avant utilisé requêtes continues chaque source affecté traducteur wrapper transforme données format compatible types données GreSQL TelegraphCQ exécution PostGreSQL utilisateur pouvant aussi lancer serveur PostGreSQL normal requêtes continues peuvent inclure clause fenêtrage fenêtre définie intervalle temps timestamp chaque uplet étant assigné wrapper celui possède attribut déclaré comme timestamp sémantique fenêtrage évolué cours différentes versions TelegraphCQ version cente définit clause fenêtrage RANGE interval SLIDE interval START heure début RANGE définit taille fenêtre terme intervalle temps SLIDE définit intervalle après lequel fenêtre recalculée spécifié inter valle temps START définit instant heure auquel première fenêtre commence format standard interrogés requêtes peuvent archivés données PostgreSQL demande utilisateur clause ARCHIVED contraire supprimés système lorsque requêtes conserver espaces temporaires exécution Abdessalem Expérimentation traitement consommations électriques avons installé systèmes STREAM TelegraphCQ version avons testés données composé index consommations relevés secondes pendant jours relevés correspondent trois compteurs électriques trouvant villes différentes Spécification traitements analyse consommations électriques utile fournisseur électricité comme client dernier pourra servir exemple détecter causes consommation excessive anormale compteur communicant capable transmettre toutes secondes enregis trement tuple données contenant numéro compteur heure relevé index consommation autres informations annexes différence entre index tants différents représente consommation électricité energie entre instants tuples provenant plusieurs compteurs forment données consommation notre expérimentation données avons utilisé composé tuples structure simplifiée suivante Flux_index annee compteur index Flux_index identifiant données relevé spécifiée trois attributs année heure trois autres attributs heure minute seconde attribut compteur désigne identifiant compteur index désigne relevé index compteur analyse consommations appuie requêtes continues Parmi requêtes possibles avons choisi trois requêtes semblent assez représentatives application Consommation dernières minutes minute minute compteur ville Consommation historique minute minute compteur partir Alarme dépassement consommation heure heure rapport consomma normale dépendant température avons essayé implanter requêtes TelegraphCQ STREAM sections suivantes présentent résultat travail Elles précisent chaque requêtes implantées expliquent comment cette implantation faire Implantation Stream spécificités STREAM supporte expressions requêtes imbriquées Cependant offre possibilité associer expression requête comme servir expression requête complexe Traitement données consommation électrique Consommation dernières minutes minute minute compteur ville suite infinie tuples associent relevés index dates prélèvements année heure minute seconde calcul conso mation durée donnée notre exemple minute faire calculant différence entre valeurs minimales index observées pendant périodes minutes successives implantation requête faire STREAM suivant étapes suivantes Min_index calcul minimum index compteur minute SELECT annee compteur index minindex Flux_index GROUP annee compteur Conso_Minute_60 calcul consommation dernière minute chaque heure entre exemple entre SELECT annee annee_deb mois_deb jour_deb h_deb m_deb compteur minindex minindex_deb annee annee_fin mois_fin jour_fin h_fin m_fin minindex minindex_fin minindex minindex conso Min_index Min_index WHERE annee annee compteur compteur Conso_Minute_01_59 Calcul consommation minute minute entre première minute minute chaque heure exemple entre minute minute SELECT identique Conso_Minute_60 Min_index Min_index WHERE annee annee compteur compteur Flux_Conso Union consomations calculées requêtes précédentes unique ISTREAM Conso_Minute_60 UNION Conso_Minute_01_59 Conso_par_CptV Calcul consommation dernières minutes minute compteur faisons jointure TableVille table correspondance compteur ville afficher ville chaque compteur avons fenêtre secondes tuple arrive normalement toutes secondes Abdessalem SELECT annee_deb mois_deb jour_deb h_deb m_deb Flux_Conso compteur Tableville ville minindex_deb annee_fin mois_fin jour_fin h_fin m_fin minindex_fin conso Flux_Conso range seconds Tableville WHERE Flux_Conso compteur Tableville compteur Calcul somme consommations ville SELECT annee_deb mois_deb jour_deb h_deb m_deb ville conso Conso_par_CptV GROUP annee_deb mois_deb jour_deb h_deb m_deb ville Consommation historique minute minute compteur partir point départ appliquons mêmes requêtes préliminaires précédemment clauses fenêtrage dernière requête Conso_par_CptV filtrons garder dates heures dépassant point départ exemple point départ 07h56 SELECT annee_deb mois_deb jour_deb h_deb m_deb Fluxconso compteur Tableville ville minindex_deb annee_fin mois_fin jour_fin h_fin m_fin minindex_fin conso Flux_Conso Tableville WHERE Fluxconso compteur Tableville compteur annee_fin mois_fin jour_fin h_fin m_fin Alarme dépassement consommation heure heure minuit heure rante Cette requête donne alarme quand consommation dépasse consom mation normale période minuit heure courante partir requête traitée STREAM manque opérateurs dates autre STREAM timestamps entier naturel effet réaliser cette requête aurait fallu traiter plusieurs passage journée autre exemple passage autre exemple passage année autre Implantation TelegraphCQ avons avons assigné wrapper manière suivante CREATE STREAM compteur varchar index INTEGER tcqtime TIMESTAMP TIMESTAMPCOLUMN ARCHIVED ALTER STREAM WRAPPER csvwrapper csvwrapper wrapper fourni package installation TelegraphCQ permet manipuler fichiers valeurs séparées virgules fichier données contient timestamps compteur intervalle entre Traitement données consommation électrique mesures index envoyées secondes compteur désigne identifiant compteur index désigne relevé index compteur tcqtime tuples format Grâce fonctionnalités offertes PostGreSQL TelegraphCQ manipule dates format standard Consommation dernières minutes minute minute compteur ville résoudre cette requête avons calculé minimum index chaque avons ensuite effectué autojointure résultat obtenu décalage minute Grâce opérateurs gestion format standard avons calculer lement consommation entre instants décalés minute requêtes imbriquées supportées problème détourné grâce construction permet utilisation requêtes intermédiaires nommées duire résultat final autojointures permises TelegraphCQ avons contraints créer identiques joindre avons premier minflux1 calcule minimum index minute fenêtre minutes deuxième minflux2 identique fenêtre minutes faire différence entre décalage minute obtenir consommation minute pendant dernières minutes CREATE STREAM minflux1 compteur varchar minindex INTEGER tcqtime TIMESTAMP TIMESTAMPCOLUMN UNARCHIVED CREATE STREAM minflux2 identique minflux1 minflux1 SELECT compteur index DATE_TRUNC minute tcqtime RANGE minutes SLIDE minute START GROUP compteur DATE_TRUNC minute tcqtime minflux2 SELECT définition minflux1 RANGE minutes SELECT compteur minindex tcqtime minindex minindex minindex tcqtime minflux1 RANGE minute SLIDE minute START minflux2 RANGE minutes SLIDE minute START WHERE compteur compteur tcqtime tcqtime interval minute afficher consommations ville transformons dernière requête appelons fluxconso minflux1 minflux2 calculés nêtres minute Ensuite réalisons jointure entre table Tableville fluxconso fenêtré minutes Consommation historique minute minute compteur partir point départ réalisation cette requête facilitée clause START permettant filtrer tuples partir point départ Abdessalem Alarme dépassement consommation heure heure minuit heure rante consommation normale fournie table consoNormale chaque heure température disposons temperature donne température relevée chaque heure pendant jours affecté deuxième wrapper csvwrapper2 approcher conditions réelles construisons consommation normale fluxconsonormale dépend température implantation requête faite suivant étapes suivantes calculons consommations cumulées heures heure heure lectionnons celles fluxconsoParHeure construit suivant démarche consommation minute minute prenant fenêtre heure wtime donne timestamp dernier tuple fenêtre cours fluxconsoJour SELECT compteur consommation DATE_TRUNC tcqtime wtime fluxconsoParHeure RANGE hours SLIDE START GROUP compteur DATE_TRUNC tcqtime consoCumul1224 SELECT compteur consoCumul tcqtime fluxconsoJour WHERE EXTRACT EXTRACT tcqtime EXTRACT tcqtime calculons consommations normales cumulées heures heure heure sélectionnons celles utilisons approche gradient température calcul consommation normale fluxconsonormale SELECT Conso temperature ConsoFdeT tcqtime temperature RANGE SLIDE START ConsoNormale WHERE EXTRACT tcqtime ConsoNormale HeureJournee fluxconsoNormaleJour raisonnement fluxconsojour consoNormaleCumul1224 raisonnement consoCumul1224 comparons consommation journalière consommation normale SELECT compteur consocumul Conso consocumul ConsoNormale tcqtime consoCumul1224 RANGE hours SLIDE START consoNormaleCumul1224 RANGE hours SLIDE START WHERE tcqtime tcqtime consocumul consocumul Traitement données consommation électrique Synthèse expérimentations Adéquation langages implantations requêtes section remarquons logique résolution requêtes assez éloignée logique bases données requêtes manipulent données persistentes sélectionnées selon leurs valeurs contenu plusieurs relations données volatiles contenu borné complexe sélection données traitement spécifier mécanisme fenêtres temporelles réservoir tuples constituer lequel appliquera requête spécifier critères sélection traitement faire réservoir Sachant réservoir tuple évoluer temps nouveaux tuples entrent autres sortent conséquent requête calculée résultat série insertions suppressions tuples remarquons également langages proposés avons testés assez limités certaines requêtes complexes elles devraient oblige contourner manque expressivité langages solutions assez lourdes titre exemple STREAM TelegraphCQ traitent données estampillées adaptés traitement données estampillées intervalle temps explique partie complexité solutions proposées résoudre requêtes aurait intéressant titre exemple avoir possibilité obtenir première dernière valeur expression fenêtre donnée aurait permis calculer directement énergie entre instants passer requêtes intermédiaires Malgré limites remarquons raisonnements formulations requêtes TelegraphCQ intuitives STREAM grâce gestion fenêtres timestamp utilisé format Performances équipe STREAM intéressée améliorer performances système bonne utilisation ressources STREAM propose mécanismes permettant partage requêtes entre partage entre requêtes développeurs planté interface graphique visualiser plans exécution requêtes ainsi utilisation système grâce jauges disponibles différents composants requête utilisateur surveiller système optimiser exécution requêtes dynamiquement manipulant tailles buffers mieux adapter conditions système Cependant STREAM offert public demeure prototype utile effectuer démonstrations possibilités adapté besoin nôtre répondre manière complète robuste effet avons confrontés arrêts intempestifs serveur plusieurs reprises exécution requêtes TelegraphCQ système robuste terme charge complexité requêtes ceptées possible ajouter requêtes autres requêtes cours cution avons implanté toutes requêtes présentées article moindre souci Néanmoins sommes intéressés cadre cette étude Abdessalem fonctionnel envisageons prochaines expérimentations augmenter nombre compteurs électriques notre données tester charge TelegraphCQ Divers données consommation électrique arrivent constamment requête continue connait priori extrémité contrairement table fenêtres nécessaires opérations telle agrégation plémentées testés Toutefois était impossible utiliser fonction opérateur fenêtrage exécution requête STREAM raison inconnue aurait permis améliorer performances gardant données avons besoin pendant période donnée TelegraphCQ possède syntaxe claire simplicité utilisation formulation quêtes meilleure STREAM fonctionnalités fournies PostgreSQL telle gestion formats méthodes associées TelegraphCQ offre possibilité réutiliser résultats requêtes forme stocker fichier résultat spécifiant format sortie Quant STREAM distingue interface graphique permettant connecter serveur envoyer requêtes visualiser requêtes exemple possible STREAM opérations agrégation fenêtrage requête effectuent façon incrémentale garder mémoire recalculer résultat agrégation autre caractéristique STREAM pouvoir spécifier nêtres logiques exprimées nombre tuples fenêtres peuvent utiles certaines applications Conclusion perspectives avons montré Systèmes Gestion Données mettent traiter données consommation électrique arrivant rythme continu rapide après expérimentations apparaît TelegraphCQ mieux adapté besoins STREAM effet offre simplicité utilisation syntaxe claire fonctionna lités intéressantes analyser résultats équipe Berkeley travaillant projet toujours active domaine alors équipe STREAM suspendu travaux depuis janvier Cependant comparaison entre principalement fonctionnelle compte performances temps exécution consommation ressources objectif prochaines expérimentations perspectives breuses équipes implémenté proposer architecture distribuée système première proposition faite équipe Aurora propose système Boréalis Abadi Boréalis distribue traitement données plusieurs sites Aurora raisons répartition charge tolérance pannes terons prochains travaux système mérite libre téléchargement surveillerons aussi éventuelles versions futures TelegraphCQ Traitement données consommation électrique Références Abadi Ahmad Balazinska Cetintemel Cherniack Hwang Lindner Maskey Rasin Ryvkina Tatbul Zdonik Design Borealis Stream Processing Engine Biennial Conference Innovative Systems Research Asilomar January Arasu Widom Continuous Query Language Semantic dations Query Execution Technical Report Arasu Babcock Cieslewicz Datar Motwani Srivastava Widom STREAM Stanford Stream Management System chapter Babcock Datar Motwani Widom Models issues stream systems Symposium Principles Database Systems pages SIGACT SIGMOD Sirish Chandrasekaran Cooper Deshpande Michael Franklin Joseph lerstein Sailesh Krishnamurthy Samuel Madden Vijayshankar Raman Reiss Mehul TelegraphCQ Continuous Dataflow Processing certain World DeWitt NiagaraCQ Scalable Continuous Query System Internet Databases SIGMOD Conference Cortes Fisher Pregibon Rogers Hancock Language Extracting Signatures Streams Proceedings Association Computing Machinery Sixth International Conference Knowledge Discovery Mining pages Cranor Johnson Spatscheck Shkapenyuk Gigascope Stream Network Applications SIGMOD Conference Golab stream management issues survey Technical report University Waterloo Waterloo Canada April Zdonik Michael Stonebraker Mitch Cherniack Cetintemel Magdalena Balazinska Balakrishnan Aurora Medusa Projects Bulletin Technical Committe Engineering Computer Society March Invited Summary development Automatic Metering management possible electric power suppliers acquire their customers their electric power consumption every second generate arriving multiple continuous rapid varying streams Stream Management Systems currently available prototypes facilitating management streams paper describes experimental study which analyzes advantages limitations using DSMSs STREAM TelegraphCQ management electric power consumption