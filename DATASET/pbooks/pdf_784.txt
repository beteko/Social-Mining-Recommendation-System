actes_non_num 351rotes nouvelle approche incrémentale extraction motifs séquentiels fréquents streams lionel émile alban pascal université antilles guyane martinique france lionel vinceslas symphor martinique alban mancheron infos eerie scientifique georges besse 30035 nîmes cedex france pascal poncelet résumé extraction motifs séquentiels fréquents streams enjeu important traité communauté chercheurs fouille données encore bases données nombreuses contraintes supplémentaires considérer intrinsèque streams article proposons nouvel algorithme passe spams construction incrémentale granularité transaction automate appelé permettant extraction motifs séquentiels streams infor mation stream apprise volée mesure insertion nouvelles transactions traitement priori résultats périmentaux obtenus montrent pertinence structure utilisée ainsi efficience notre algorithme appliqué différents données introduction concerné nombreux domaines application traitement données médicales marketing sécurité analyse financière extraction motifs quentiels fréquents domaine recherche actif intéresse communauté chercheurs fouille données initialement premiers travaux présentés traitent bases données statiques proposent méthodes dites exactes traction motifs séquentiels citer titre exemple algorithmes spade prefixspan respectivement proposés srikant agrawal ayres récemment dernières années nouvelles applications émergentes telles analyse traffic réseaux fouille données clickstream encore détection fraudes intrusions induisent nouvelles problématiques impactent méthodes fouilles 1clickstream requêtes utilisateurs sites sequential patterns automaton mining streams effet applications supposent prise compte nouveau données connus intitulé streams traitement stream satisfaire nouvelles contraintes données générées rapidement façon continue voire illimitée peuvent complètement stockées mémoire autoriser unique passage données doivent traitées rapidement possible ainsi premières méthodes extraction motifs séquentiels adaptées montré garofalakis méthodes approchées étaient adaptées contexte streams toutefois méthodes doivent trouver compromis satisfaisant entre temps réponses consommation mémoire qualité résultats précision rappel heure actuelle existe travaux abordé problématique extraction motifs streams répartissent catégories première concerne méthodes traitement données effectue batchs transactions citer travaux marascu masseglia respectivement algoritmes approxmap effec tuent clustering stream plusieurs batchs selon similarité entre motifs procèdent compression séquences similaires selon méthode alignement multiple réduire consommation mémoire méthodes présentent convénient effectuer traitement ligne stream peuvent exécuter après obtention groupe données elles requièrent tailles critiques suffisantes batchs complètement réaliste compte contraintes inhérentes streams seconde catégorie concerne méthodes opèrent directement transactions chang proposé algorithme eiseq structure arbre effectuant traitement ligne données transaction parcourue seule passe motifs longs traiter moins algorithme performant phase génération motifs exemple motif motifs créer cette difficulté présenté algorithme graseq développant approche partir structure graphe orienté pondéré permettant limiter phase génération motifs toutefois cette approche suppose traitement transactions effectuer regroupement article proposons nouvel algorithme passe spams sequential pattern automaton mining streams construction incrémentale transaction structure automate sequential pattern automaton permet extraction motifs séquentiels streams nécessite effectuer traitement visant opérer regroupement sactions automate seuls parcourus états transitions doivent insertion nouvelles transactions stream évite ainsi parcours multiples structure prohibitifs pénalisants perfor mances algorithmes notre approche permet réduire sensiblement génération motifs candidats conservant qualité approximation satisfaisante rappel précision suite article organisée manière suivante section présente formellement problématique section rapelle concepts requis présenter notre approche décrite section expérimentations fournies section conclusion proposée dernière section définition problème cette section donnons définition formelle problème extrac motifs séquentiels streams abord résumons description formelle présentée srikant agrawal classiquement utilisée bases données statiques étendons ensuite problématique streams ensemble ordonné items utilisés données transactions chaque transaction identifiée manière unique temps associée ensemble items ensemble appelé itemset séquence ensemble itemsets ordonnés selon temps représentée itemset séquence séquence items longueur séquence séquence autre séquence existe entiers toutes transactions relatives regroupées triées selon ordre apparition obtenir séquence données séquence données contient séquence séquence support séquence correspond nombre occurences décider séquence fréquente valeur support minimum notée spécifiée utilisateur séquence fréquente taille données etant donnée données transactions clients problème extraction motifs séquentiels consiste trouver toutes séquences support supérieur support minimum utilisateur cette problématique étendue streams exprimer simplement comme formellement stream défini suite transactions chacune transactions identifiée associée exemple table extraction motifs séquentiels fréquents revient trouver toutes séquences support supérieur support minimum utilisateur partie connue stream moment donné ensembles transactions construites sequential patterns automaton mining streams prérequis couvertures statistiques reprenons dessous théorème proposé prouvé concernant couvertures statistiques auteurs proposent biaiser valeur support utilisateur obtenir ensembles motifs permettent maximiser résultats rappel précision théorème respectivement nombre motifs fréquent infrequent partie connue stream stream choisit implique rappel respectivement précision probabilité moins après suppression motifs frequent partir observation respectivement paramètre paramètre risque statistique utilisateur valeurs supports statistiques couverture représente quasi optimal petit ensemble motifs probabilité moins contenant motifs fréquent stream éventuellement infini résultats négatifs forte probabilité couverture représente quasi optimal grand ensemble motifs probabilité moins contenant motifs fréquent stream éventuellement infini ensemble résultats positifs forte probabilité négatifs quasi optimal auteurs expriment toute technique obtenant meilleures bornes condamnée tromper critère maximiser précisent aussi aucune hypothèse concernant distribution stream approche spams notre approche repose construction incrémentale structure tomate permet indexation motifs séquentiels stream traitement stream effectue granularité transaction chaque saction point nécessaire procéder traitement regrouper transactions aussi supposons départ rithme connaissance alphabet items connaissance nombre stream cette information apprise incrémentalement volée mesure insertion nouvelles transactions stream ailleurs obtenir qualité approximation satisfaisante rappel précision motifs séquentiels fréquents indexons également motifs fréquents couverture statistique supérieure conserve nombre minimal motifs candidats supplémentaires limitant ainsi explosion combinatoire automate motifs séquentiels définissons formellement cette section automate infor mation détaillée théorie automates suggérons présentation faite hopcroft ullman automate déterministe quintuple ensemble états chaque représenté identifiant unique associé valeur support initial support correspond nombre clients stream cours acquisition ensemble états finaux états ayant support supérieur support seuil alphabet items reconnus fonction transition totale permettant indexer motifs séquentiels fréquents stream algorithme spams présentation principe spams repose centrale suivante concernant construc automate construisons imposant condition suivante accessible valeur support corres nombre occurences chaque motif séquentiel reconnu après lecture condition précédente vérifiée nombre occurences certains motifs séquentiels reconnus incré menté convient dupliquer nouvel recoit seules transitions entrantes appartenant motifs séquentiels support incrémenté recoit également transitions sortantes dupliqué après initialisation automate notre algorithme décompose trois modules principaux permet lecture insertion nouvel acquis stream second permet supprimer pendant exécution module états transitions relatifs séquences devenues fréquentes dernier permet terminer traitement transaction avant passer transaction suivante utiliserons symbole comme séparateur itemsets intérieur séquences initialisation automate création initial transitoire utilisé pendant construction dernier appartient automate final lecture insertion client donné chaque insertion premier temps déterminer états derrières lesquels faudra ajouter transition libellée indexer incrémentalement toutes séquences incluses séquence cours lecture maintient liste correspondant états atteints traitement séquences client sequential patterns automaton mining streams alphabet automate ensemble états automate ensemble transitions automate ensemble transitions entrantes ensemble états automate accessibles ensemble états atteints client alphabet client ensemble transitions atteintes insertion support transition étiqueté ensemble identifiants client notations utilisées alors ensuite alors récupère ensemble dernières transitions atteintes effectue opérations suivantes alors alors sinon nouvel alors sinon ensuite ensuite suppression suppression automate réalisée module consiste supprimer toute descendance états transitions accessibles partir transaction suivante quand items transaction donnée client insérés automate module appelé module fonctionne trois étapes réduction ensemble états atteints appel module ensemble états atteints exemple construction pseudo illustrer exécution reprenons exemple table traité forme stream représentée schéma figure conservons toute généralité stream présupposons ordonancement transac tions schémas figures illustrent lecture insertion items explications section points initialisation lecture insertion items schémas figures illustrent traite transactions explications section partie transaction suivante présentons figure pseudo notre algorithme spams exemple stream ordonné table lecture création déplacement transitions atteintes automate final lecture insertion transaction lecture création déplacement transitions atteintes automate final lecture insertion transaction lecture création déplacement transitions atteintes automate final traitement transaction automate final comprend états transitions indexant motifs quentiels table manque place représentons automate sequential patterns automaton mining streams lecture automate final lecture insertion transaction lecture création déplacement transitions atteintes automate final lecture insertion transaction lecture création déplacement transitions atteintes automate final lecture insertion transaction lecture création déplacement transitions atteintes automate final traitement transaction expérimentations plusieurs expérimentations réalisées tester efficacité notre proche expérimentations empiriques faites données synté lecture création déplacement transitions atteintes automate final lecture insertion transaction tiques générés partir simulateur avons varier nombre clients nombre transactions client nombre moyen items transaction taille moyenne séquences maximales taille moyenne transactions séquences maximales avons utilisé implémentation spams compilée option compilateur intel pentium illustrons figures performances temps consom mation mémoire spams différentes valeurs support petite moyenne grande taille respectivement d7c7t7s7i7 d8c10t10s10i10 d18c18t18s18i18 figures représentent évolution temps mémoire nombre fonction nombre transactions d18c18t18s18i18 support figure permet illustrer données d18c18t18s18i18 support statistique utilisé support seuil mesure acquisition transactions diminuant ainsi ensemble motifs fréquents verture statistique calcul section avons choisi valeur risque statistique expérimentations montrent trouvons compromis satisfaisant entre performances temporelles consommation mémoire qualité résultats extraction précision rappel elles montrent aussi applicabilité passage échelle algorithme spams conclusion article apportons contribution originale proposant nouvel algorithme passe spams élaboration nouvel automate nommé permet traiter façon efficace problématique extraction motifs séquentiels fréquents streams présente propriétés incrémen tales permettent initialisation aucune information streams granularité transaction nécessaire procéder traitement regrouper transactions client ailleurs chaque transaction acquise supposons départ algorithme connaissance alphabet items 2simulateur disponible adresse almaden quest sequential patterns automaton mining streams algorithme données stream début créer états min_sup chaque stream alors algorithme données début min_sup algorithme données début supprimer transitions entrantes chaque supprimer algorithme données début chaque alors sinon chaque min_sup alors alors alors sinon créér alors dupliquer transitions sortantes déplacer transitions min_sup alors pseudo algorithme connaissance nombre clients stream cette information apprise incré mentalement volée mesure insertion nouvelles transactions stream expérimentations montrent trouvons compromis satisfaisant limitant phase génération candidats couverture statistique conservant résultats rappel précision également bonnes performances temps mémoire plusieurs perspectives peuvent envisagées suite travail concerne exemple suppression incrémentale motifs séquentiels automate encore représentation motifs motifs fermés maximaux références ayres gehrke flannick sequential pattern mining using bitmap representation press chang efficient mining method retrieving sequential patterns online streams garofalakis gehrke rastogi querying mining streams tutorial sigmod proceedings sigmod international conference management hopcroft ullman introduction automata theory languages computation addison wesley longman publishing duncan approxmap approximate mining consensus sequential patterns symphor poncelet mining evolving streams frequent patterns pattern recognition graseq novel approximate mining approach sequential patterns stream marascu masseglia extraction motifs séquentiels flots données usage mortazavi pinto dayal fixspan mining sequential patterns efficiently prefix projected pattern growth srikant agrawal mining sequential patterns generalizations performance improvements spade eficient algorithm mining frequent sequences machine learning journal special issue unsupervised learning summary mining sequential patterns streams challenging problem datamining community since arrives sequentially continuous rapid streams still databases additional constraints sidered intrinsic nature streams paper propose algorithm named spams based incremental updating automa structure mining sequential patterns streams information stream learned progressively insertion transactions without preprocessing priori experimental results obtained relevance structure efficiency algorithm applied datasets sequential patterns automaton mining streams 10000 support temps construction automate d7c7t7s7i7 d8c10t10s10i10 d18c18t18s18i18 temps 10000 100000 support consommation memoire spams d7c7t7s7i7 d8c10t10s10i10 d18c18t18s18i18 mémoire transactions 10000 d18c18t18s18i18 spams temps d18c18t18s18i18 100000 transactions 10000 d18c18t18s18i18 spams mémoire d18c18t18s18i18 10000 100000 transactions 10000 d18c18t18s18i18 spams acquisition clients d18c18t18s18i18 transactions 10000 d18c18t18s18i18 évolution support statistique d18c18t18s18i18 support d18c18t18s18i18 rappel precision rappel précision d18c18t18s18i18 transactions 10000 d18c18t18s18i18 etats transitions nombre états transitions d18c18t18s18i18 expérimentations spams