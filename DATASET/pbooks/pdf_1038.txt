Extraction motifs séquentiels flots données usage Alice Marascu Florent Masseglia INRIA Sophia Antipolis route Lucioles 06902 Sophia Antipolis France Alice Marascu Florent Masseglia sophia inria Résumé dernières années nouvelles contraintes apparues techniques fouille données contraintes typiques nouveau genre données streams processus fouille appliqué stream utilisation mémoire limitée nouveaux éléments générés permanence doivent traités rapidement possible aucun opérateur bloquant appliqué données celles peuvent observées seule heure actuelle majorité relatifs extraction motifs streams concernent motifs temporels montrons article principalement phénomène combinatoire extraction motifs séquentiels proposons alors algorithme alignement séquences extraire motifs séquentiels streams respecter contrainte passe unique données heuristique gloutonne proposée menter séquences montrons enfin notre proposition capable extraire motifs pertinents support faible Introduction problème extraction motifs séquentiels grand ensemble données tiques largement étudié dernières années Agrawal Srikant Masseglia schémas extraits utiles nombreuses applications comme marketing décision analyse usages Depuis applications émergentes comme entre autres analyse trafic réseaux détection fraude intrusion fouille clickstream1 encore analyse données issues capteurs introduits nouveaux types contraintes méthodes fouille applications donné forme données connues streams contexte streams utilisation mémoire réduite données générées manière continue rapide opérations bloquantes envisageables enfin nouvelles données doivent prises compte aussi possible Ainsi nombreuses méthodes proposées extraire items streams Datar Chang Cormode Muthukrishnan 1clickstream requêtes utilisateur Extraction séquences streams domaine approximation rapidement reconnue comme facteur fournir motifs vitesse imposée application Garofalakis suite méthodes récentes Giannella introduit différents principes gérer historique motifs extraits principale généralement interessé changements récents gements anciens Giannella ainsi introduit notion logarithmic tilted window stocker fréquences motifs granularité change ments récents granularité large changements anciens technique regression utilisée représenter fréquences nique permettant régler finesse représentation introduite Enfin Raissi auteurs proposent nouvelle structure données destinée extraire motifs séquentiels fréquents stream Cependant article montrons phénomènes combinatoires extraction motifs séquentiels rendent toute méthode haustive potentiellement bloquante effet règles association nombre possibilité motifs séquentiels lesquels répéter infini article proposons algorithme Sequence Mining Streams alignement séquences comme utilisée fouille bases données statiques implémenté testé données réelles données synthétiques données réelles issues serveur Inria Sophia Antipolis données collectent informations usages faits techniques analyse usages Usage Mining fournissent informations comportement utilisateurs Parmi méthodes existantes celles extraient motifs séquentiels particulièrement adaptées Elles extraction motifs genre Inria utilisateurs visitent accueil emplois offres emplois description métier enfin annales concours passés Notre objectif extraire comportement partir flots données usage montrerons satisfait contraintes rapidité stream inclus environnement temps article organisé manière suivante abord présentons section concepts extraction motifs séquentiels Usage Mining Ensuite proposons étudier cadre travail considère stream batches intègre extraction motifs séquentiels section Enfin présentons expérimentations section avant conclure article Définitions Motifs séquentiels paragraphe expose illustre problématique extraction motifs séquentiels grandes bases données reprend différentes définitions proposées notion séquence définie manière suivante Définition transaction constitue client ensemble items achetés données client transaction écrit forme triplet client itemset itemset ensemble items Marascu Masseglia représentation transaction datée séquence liste ordonnée itemsets notée itemset séquence suite transactions relation ordre entre transactions séquence données séquence représentant achats client transactions client ordonnées achat croissante itemset ensemble items correspondants alors séquence données client itemset itemset itemset Exemple client séquence données représentant achats client interprétée acheté temps items enfin Définition support pourcentage toutes séquences supportent contiennent minsupp valeur support minimum minsupp fixée utilisateur séquence fréquente Adapter problématique motifs séquentiels méthodes traditionnelles Usage Mining principe gérénal similaire celui Masseglia données brutes collectées fichiers serveurs Chaque entrée fichier représente requête faite machine cliente serveur Définition ensemble entrées fichier access entrée tuple représente objet demandé client figure illustre exemple fichier obtenu après phase traiteme classe navigations chaque client correspond suite dates événem traduction demandée client cette Date1 Date2 Date3 Date4 Date5 Client1 Client2 Client3 Exemple fichier résultat phase traitement objectif alors déterminer grâce phase extraction séquences données peuvent considérées comme fréquentes selon définition résultats obtenus support appliquant algorithmes fouille données fichier représenté figure dernier résultat traduit termes confirme décou verte comportement commun minSup utilisateurs fournit enchaînement pages constituent comportement fréquent Enfin exploitation utilisateur résultats obtenus facilitée outil requête visualisation Extraction séquences streams motivation principe général Notre méthode basée environnement découpage stream batches inspiré celui proposé Giannella structure arbre préfixé Masseglia gérer séquences extraites proposons abord étude limites approche intégrant algorithme exhaustif extraction motifs quentiels présentons ensuite notre méthode basée principe alignement séquences Limites extraction motifs séquentiels Limites environnement intégrant stream traité forme batches taille Soient batches batch courant principe extraire motifs quentiels représentatifs chaque batch stocker motifs extraits structure arbre préfixé Considérons motifs extraits méthode haustive comme celles conçues données statiques telle méthode présentera moins opération bloquante Considérons exemple algorithme Masseglia avons testé algorithme bases données contenant séquences séquences égales contiennent répétitions itemsets taille précisément première contenait répétitions itemsets longueur nombre candidats générés chaque passe reporté figure figure reporte aussi nombre candidats générés bases contenant séquences longueur observer contenant séquences longueur incapable fournir résultats mémoire saturée nombre candidats avons observation algorithme prefixSpan2 lequel figure conduirait blocage stream contexte flots données issus usages trouver nombreuses répétitions plusieurs items fichiers software prefixspan Marascu Masseglia Etape Etape Etape Etapes alignement séquences Principe général grandes lignes fonctionne manière suivante classification semble séquences chaque batch transactions suivi alignement chaque ainsi obtenu permet obtenir clusters comportements représentent usages temps chaque cluster taille supérieure minSize cifié utilisateur stocke résumé cluster résumé donné algorithme alignement séquences appliqué chaque cluster Algorithme glouton classification séquences Notre schéma classificatoire basique repose navigations souvent plutôt proches éloignées manière empirique constater utilisateurs demandent pages concernant offres emplois bablement consulter session pages relatives prochains séminaires organisés unité recherche Sophia Antipolis obtenir classification navigations aussi rapide possible notre approche gloutonne fonctionne manière suivante algorithme initialisé seule classe contient première navigation Ensuite chaque navigation batch comparée chaque cluster Aussi similaire séquence alors insérée insérée aucun cluster alors nouveau cluster insérée nouveau cluster similitude entre séquences donnée définition insérée condition suivante respectée minSim minSim similitude minimum spécifiée utilisateur Définition Soient motifs séquentiels longueur longue séquence commune entre similitude entre définie manière suivante longueur longueur Extraction séquences streams Alignement séquences algorithme classification permet obtenir classes séquences similaires élément alignement séquences alignement séquences renvoie séquence alignée cette représentation représente nombre total séquences impliquées alignement itemset représentée forme nombre séquences contiennent position séquence alignée Enfin nombre occurrences itemset alignement exemple décrit processus alignement quatre séquences partir séquences alignement commence insérer itemsets vides début milieu séquences jusqu séquences contiennent nombre itemsets Exemple considérons séquences suivantes étapes conduisant alignement séquences détaillées figure abord itemset inséré ensuite alignées produire processus alignement alors appliqué entre méthode alignement continue traiter séquences jusqu dernière séquence processus alignement séquence alignée figure résumé cluster correspondant motif séquentiel correspondant obtenu spéci fiant nombre minimum occurrences celui considéré comme fréquent exemple séquence figure séquence alignée correspond items nombre occurrences supérieur Stockage gestion séquences séquences alignées obtenues étape précédente stockée arbre préfixé similaire celui Masseglia nouvelle séquences découverte alors arbre modifié stocker cette nouvelle séquence Sinon arbre support figure donne exemple arbre préfixé Chaque chemin racine arbre représente séquence extraite arbre figure contient séquences chemin racine feuille représente séquence profondeur représente séquence changement itemset représenté branches différents types exemple pointillé entre nœuds figure illustre itemset chaque associé filtre utilisé obtenir cette séquence alignée cluster correspondant exemple donne illustration gestion séquences support Exemple Considérons séquence figure support séquence alignée possède signifie extraite cluster support Considérons maintenant séquence support séquence alignée signifie cluster correspondant contient cette séquence filtre Marascu Masseglia Exemple arbre préfixé algorithme décrit article suivant Algorithm Input ensemble infini batches transactions minSize taille nimum classes synthétiser minSim similitude minimum entre séquences cluster filtre méthode alignement Output arbre préfixé séquences alignées While NextBatch Clustering minSize minSim Obtenir cluster taille minSize Foreach Résumer chaque cluster filtre Alignment PrefixTree PrefixTree Stocker séquences alignées Séquences obsolètes TailPruning PrefixTree Mettre Tilted Windows Algorithm Complexité nombre séquences batch algorithme classification complexité temps appliqué première séquence deuxième ainsi suite complexité Cependant cette complexité améliorée adapté motifs navigation expérimentations section données réelles access Inria Sophia Antipolis montré efficacité concerne alignement considérons toutes séquences cluster longueur complexité alignement batch Expérimentations méthode implémentée Pentium exploité système Linux Fedora avons évalué notre proposition données synthétiques Extraction séquences streams données réelles3 Temps réponse robustesse montrer efficacité reportons figure temps cessaire extraire motifs séquentiels longs chaque batch correspondant données usage gauche figure données synthétiques droite figure Inria données collectées période représentent nombre total navigations millions 300000 navigations avons découpé fichier batches transactions environ séquences moyenne expérimentations filtre notons filtre impact temps exécution mesure modifie taille séquences gérer arbre préfixé avons injecté séquences parasites premier batch subit modification second ajoutons séquences contenant répétitions items séquences décrites section troisième batch ajoutons séquences trois répétitions ainsi suite jusqu trentième batch contient séquences trente titions objectif montrer méthodes extraction traditionelles prefixSpan risquent bloquer stram alors continuera tâche extraction pouvons observer temps réponse varie propose motifs bonnes performances premiers batches trouve pénalisé bruit ajouté séquences parasites batch également prefixSpan comportement exponentiel similaire comme prefixSpan support minimum spécifié était maximum possible assurant séquences parasites répétitions seraient trouvées avons ajouté figure nombre quences chaque batch expliquer différences temps exécution batch autre observer exemple batch contient séquences demande extraire motifs séquentiels données synthétiques avons généré batches 10000 transactions correspondent environ séquences moyenne longueur moyenne séquences était 200000 items filtre environ indiquons figure partie droite temps réponse nombre séquences correspondant chaque batch pouvons observer traite 10000 transactions moins secondes exemple batch Motifs extraits données réelles liste comportements découverts couvre objectifs gation classes séquences navigations Inria Sophia Antipolis plupart motifs découverts considérée comme support faible pertinente haute confiance filtre utilisé élevé reportons quelques exemples comportements taille classe préfixe inria omega MC2QMC2004 personnel Denis Talay MC2QMC2004 presentation MC2QMC2004 dates MC2QMC2004 Call_for_papers générateur données synthétiques téléchargé almaden quest Marascu Masseglia Temps exécution Cette séquence fréquente organisation conférence MCQMC équipe Inria Sophia Antipolis comportement était partagé lisateurs temps taille classe taille classe préfixe inria acacia personnel Francais Cours programmation chapitre cplus cours programmation programmation comportement correspond requête faites document pédagogique grammation écrit membre équipe Inria Sophia Antipolis correspond période avril navigations Inria Sophia Antipolis avons également constaté capable détecter séquences parasites avaient injectées batches séquences simplement regroupées cluster contient elles impact temps exécution Impact taille batches Taille batches cluster Puisque complexité dépend taille batches avons étude concernant impact cette taille temps réponse reportons Extraction séquences streams figure partie gauche temps réponses quand nombre séquences batch varie séquences courbe temps représente temps exécution cluster représente nombre clusters extraits cluster représente nombre clusters effet pensons considérer clusters taille supérieure certaine proportion nombre total séquences garde clusters grands batch séquences exemple cluster considéré représente temps exécution quand garde clusters taille supérieure observer nombre clusters augmente façon linéaire temps réponse toute évidence taille batches raisonnable utilisateur final choisir taille batches fonction degré rapidité souhaité Analyse qualité clusters Distance globale étape étape batch batch mesurer qualité classes produites notre principal outil distance entre séqunces séquences distance entre basée mesure similitude donnée définition telle proche signifie séquences proches similaire cette valeur nulle alors proche signifie séquences éloignées partagent aucun cette valeur avons utilisé mesures qualité classes première diamètre classe grande distance entre séquences diamètre montre classe constitué uniquement séquences égales alors diamètre montre classe contient moins séquences partagent aucun expérimentations diamètre moyen varié entre seconde mesure double moyenne basée centre classe classe centre séquence telle sommes mesure donner distance moyenne entre toutes autres séquences reportons figure partie droite quelque distances moyennes parmi pires obtenues durant expérimentations chaque séquences ajoutée classe donnons valeur cette classe Marascu Masseglia exemple après ajout dernière séquence cluster valeur cluster observer varie quand unique séquence centre décroit alors rapidement jusqu valeurs comprises entre résultat compte figure partie droite comprend résultats clusters moins homogènes autres clusters homogènes offrent algorithme alignement cadre adéquat reportons figure partie gauche double moyenne après avoir traité chaque séquence batch calculée manière suivante ensemble classes centre classe observer figure partie gauche second batch augmente rapidement jusqu séquence augmente lentement jusqu valeur finale batch donnée figure partie droite observer toujours comprise entre processus valeur moyenne qualité moyenne classes Conclusion papier avons proposé méthode conçue extraire rapidement séquences stream proposer résumé significatif Notre algorithme repose technique classification combinée alignement séquences processus alignement repose algorithme classification glouton considère contexte navigations certaines caractéristiques prendre compte avons proposé solution adaptée gérer efficacement séquences historique arbre préfixé Grâce cette façon traiter stream capable détecter comportement partagé nombre relativement faible utilisateurs utilisateurs encore proche difficile problème extraction motifs séquentiels support faible expérimentations montré traite stream assez rapidement intégré contexte temps avons également montré propose classes bonne qualité permet extraire motifs pertinents façon exhaustive Références Agrawal Srikant Mining Sequential Patterns Proceedings International Conference Engineering Taiwan Chang Finding recent frequent itemsets adaptively online streams Proceedings ninth international conference Knowledge discovery mining Multidimensional regression analysis series streams Cormode Muthukrishnan tracking frequent items dynamically Trans Database Extraction séquences streams Datar Gionis Indyk Motwani Maintaining stream statistics windows Proceedings thirteenth annual symposium Discrete algorithms Garofalakis Gehrke Rastogi Querying mining streams tutorial SIGMOD Proceedings SIGMOD international conference Management Giannella Mining Frequent Patterns Streams Multiple Granularities Kargupta Joshi Sivakumar Yesha Generation Mining Vanhoof Usage Mining Means Multidimensional Sequence Alignment Method WEBKDD Duncan ApproxMAP Approximate mining consen sequential patterns Proceedings Mining Francisco Masseglia Cathala Poncelet Approach Mining Sequential Patterns Proceedings European Symposium Principles Mining Knowledge Discovery Nantes France Masseglia Poncelet Cicchetti April efficient algorithm usage mining Networking Information Systems Journal Mortazavi Pinto Dayal PrefixS Mining Sequential Patterns Efficiently Prefix Projected Pattern Growth International Conference Engineering Raissi Poncelet Teisseire SPEED Mining Sequential Patterns Streams Actes 21ièmes Journées Bases Données Avancées Saint France Regression Based Temporal Pattern Mining Scheme Streams Efficient Mining Frequent Closed Sequences Procee dings International Conference Engineering Boston Summary recent years emerging applications introduced constraints mining These constraints typical streams stream processing memory usage restricted elements generated continuously considered possible blocking operator performed examined argue issue combinatory phenomenon related sequential pattern mining paper propose algorithm based sequences align mining approximate sequential patterns streams constraint greedy clustering algorithm associated alignment method proposed proposal extract relevant sequences thresholds