echantillonnage motifs séquentiels contrainte norme lamine cheikh talibouya arnaud giacometti dominique arnaud soulet université tours france arnaud giacometti dominique arnaud soulet tours université gaston berger saint louis sénégal lamine3 cheikh talibouya résumé échantillonnage motifs méthode exhaustive couvrir motifs pertinents assure bonne interactivité offrant garanties statistiques fortes grâce nature aléatoire curieusement telle approche explorée motifs ensemblistes graphes encore données séquentielles article proposons première méthode échantillonnage motifs séquentiels outre passage séquences originalité notre approche introduire contrainte norme maîtriser longueur motifs tirés éviter écueil longue traîne démontrons notre méthode fondée procédure aléatoire étapes effectue tirage exact malgré recours échantillonnage rejet expérimentations montrent reste performante introduction motifs séquentiels introduits agrawal srikant utilité prouvée différents domaines recherche applications comme fouille usage fouille textes bioinformatique détection fraudes depuis première publication nombreuses méthodes optimisé extraction motifs séquentiels introduit variantes gomariz malgré toutes avancées extraction motifs séquentiels reste tâche coûteuse génère souvent motifs cette limite aussi atteinte extraction motifs ensemblistes contournée échantillonnage motifs telle approche nombre limité motifs probabilité tirer motif proportionnelle fréquence cette approche avantage contrôler taille sortie apporter collection motifs reflète intégralité espace recherche notre connaissance telle approche encore envisagée motifs séquentiels adapter procédure échantillonnage motifs étapes boley données séquentielles trivial limite importante échantillonnage motifs avoir tendance retourner motifs rares correspondant longue traîne effet longue traîne signifie grande majorité motifs fréquence faible occulte motifs fréquents problème exacerbé echantillonnage motifs séquentiels séquences nombre motifs séquentiels fréquence explose données réels malgré tirage proportionnel fréquence échantillonnage concentrerait uniquement séquences longues fréquence éviter écueil longue traîne choisissons introduire contrainte norme nombre items contrôler taille motifs tirés autre coeur cette approche requiert dénombrer chaque séquence nombre séquences distinctes cette tâche aisée séquence contenir plusieurs occurrences séquence cette généraliserons travail dénombrer séquences tenant compte norme article notre objectif échantillonner motifs séquentiels proportionnel lement fréquence contrainte norme premièrement section proposons méthode étapes grâce généralisation formule nombrement séquences démontrons cette méthode effectue échantillonnage exact deuxièmement section expérimentons cette approche plusieurs données réels montrons notre approche suffi samment performante retourner centaines motifs séquentiels seconde montrons également apport contrainte norme mieux maîtriser qualité motifs retournés éviter malédiction longue traîne travaux relatifs distingue méthodes échantillonnage motifs entrée sortie échantillonnage entrée toivonen consiste régénérer depuis échantillon données motifs auraient extraits depuis données complet échan tillonnage sortie hasan consiste générer échantillon motifs parmi motifs auraient extraits depuis données complet plusieurs approches proposées échantillonnage entrée motifs séquentiels raissi poncelet notre connaissance article propose première approche échantillonnage séquentiels sortie comme complexité échantillonnage motifs indépen dante taille langage propice langages structurés combinatoire forte ailleurs méthodes proposées graphes plusieurs procédures proposées échantillonnage motifs première mille hasan repose méthodes monte carlo chaînes markov stationnaire marche aléatoire corresponde distribution échan tillonner limite telles approches stochastiques vitesse convergence lente seconde famille boley consiste tirer instance données tirer motif contenu cette instance choisissant judicieusement tributions tirage alors possible obtenir tirage exact selon distribution désirée avons telle approche étapes rapidité précision outre difficulté traiter séquences plutôt itemsets avons également ajouté contrainte norme motifs notre connaissance seule approche dzyuba permettrait traiter langages complexes contraintes fondée satisfaction contraintes requière disposer solveur intégrant efficacement contraintes utilisée motifs ensemblistes ailleurs dzyuba soulignent approche générique rivalisera difficilement approches dédiées langage classe contraintes préliminaires après avoir rappelé quelques définitions cette section formalise problème échan tillonnage motifs séquentiels contraintes norme définitions ensemble littéraux nommés items itemset motif ensemble séquence définie liste ordonnée itemsets vides taille séquence norme séquence notée somme cardinalités itemsets suite préfixe étant séquence représentée itemset enfin ensemble universel toutes séquences définies données séquentielles multi ensemble séquences définies rappelons maintenant définitions séquences occurrences séquence séquence donnée définition séquence séquence séquence séquence existe séquence indices telle etant donnée séquence ensemble séquences cardinalité ensemble etant donnée séquence séquence apparaître plusieurs existe plusieurs séquences indices telles parle occurrences multiples séquence définition suivante précise comment différentes occurrences peuvent représentées définition occurrence etant donnée séquence liste ordonnée itemsets taille occurrence séquence existe séquence indices telle cette séquence indices appelée signature unique définition exemple occurrences signature respective formalisation problème méthode extraction motifs échantillonnage généralement objectif tirer aléatoirement motif rapport mesure intérêt donnée notre mesure considérée fréquence motif données séquentielles echantillonnage motifs séquentiels définition fréquence etant données données séquentielles définie séquence fréquence simplement définie notre objectif tirer aléatoirement motifs séquentiels rapport fréquence contrainte norme etant donnés entiers notera ensemble séquences norme comprise entre problème finalement énoncer comme etant données données séquentielles normes minimale malem notre problème consiste tirer aléatoirement séquence telle probabilité tirage égale fréquence normalisé somme fréquences séquences méthode échantillonnage étapes contrainte aperçu approche approche proposée boley auteurs montrent comment échan tillonner itemsets proportionnellement support données transaction nelles proposons utiliser solution comparable étapes ajoutant contrainte norme motifs extraits tirage séquence soient données séquentielles entiers première étape lignes algorithme commençons calculer toute séquence nombre séquences norme comprise entre basant travaux montrons section comment calculer nombre séquences ensuite cette première étape poursuit tirage aléatoire séquence proportionnellement poids tirage motif séquentiel deuxième étape commençons tirer aléatoi rement ligne algorithme norme séquence finalement retournée nombre proportionnellement nombre séquences norme exactement égale selon distribution probabilité définie finalement algorithme retourne ligne séquence norme selon distribution uniforme signifie toute séquence norme tirée probabilité montrons section comment effectuer tirage uniforme grâce méthode rejet problème principal séquence avoir plusieurs occurrences tirer probabilité élevée séquences ayant nombre occurrences important algorithm echantillonnage motifs séquentiels contraintes norme input données séquentielles entiers output séquence tirée aléatoirement soient poids définis tirer séquence proportionnellement tirer entier entre selon distribution return séquence distribution uniforme poids tirage séquence cette section montrons comment calculer nombre séquences séquence contrainte norme généralisant proposition principale difficulté compter plusieurs séquence possède plusieurs occurrences contrainte norme soient séquence itemset suite notons concaténation définie intuitivement disjoint itemsets séquence vérifier nombre séquences distinctes nombre séquences multiplié nombre ensembles disjoint itemsets inférieur introduisent terme correcteur calculer nombre exact séquences distinctes faire commencent introduire ensemble positions précisant répétitions items itemset localisées séquence définition ensemble positions soient séquence ensemble positions itemset intersection maximale différents itemsets exemple séquence avons intersecte aucun itemset calculons maintenant intersecte premier itemset second itemset intersections disjointes conséquent avons indique concaténant ensembles séquences répétitions séquences pourront générées items retrouvent postions partir ensemble positions possible calculer nombre séquences distinctes séquence grâce formule récursive suivante théorème nombre séquences etant donnés séquence itemset nombre séquences distinctes défini terme correcteur toute séquence ensemble indices echantillonnage motifs séquentiels exemple suivant permet donner intuition formule récursive introduite précédem particulier terme correcteur exemple poursuivons exemple ensemble séquences défini avons commel avons effet séquences obtenues simple concaténation itemset itemset séquence détaillons maintenant calcul terme correcteur comme avons premier terme permet recompter séquence construisant concaténation itemset inclus séquence quant second terme permet recompter séquences construisant concaténation itemset inclus séquences avons finalement contrainte norme proposons généralisation théorème permettant calculer nombre séquences norme inférieure égale séquence théorème nombre séquences norme bornée etant donnés séquence itemset entier nombre séquences distinctes norme inférieure égale défini dessous terme correcteur défini sachant théorème généralisation théorème notons exemple premier terme remplacé calculer intuitivement construire séquence norme inférieure concaténer ensemble taille séquence norme inférieure ainsi certain obtenir séquence norme inférieure répéter principe toute taille possible ensemble intuition explique généralisation terme correcteur poursuivant exemple exemple suivant illustre principe fonctionnement formule théorème exemple ensemble séquences norme inférieure défini avons aussi aisément séquence étant norme strictement supérieure comme avons premier terme somme correspond séquences obtenues concaténation ensemble séquences alors deuxième terme correspond séquences obtenues concaténation itemset séquences norme inférieure détaillons maintenant calcul second terme correspond exemple nombre séquences pouvant obtenues concaténation ensemble taille nombre séquence norme inférieure finir calcul terme correcteur présente comme déduit ainsi formule présentée théorème récursive néanmoins étant données séquence borne cette récursivité facilement supprimée calculant ligne ligne matrices définies représente nombre séquences norme inférieure séquence terme correcteur repré sente terme soustraire quand souhaite calculer nombre séquences norme inférieure partir nombre séquences norme inférieure concaténant ensembles exemples matrices données figure séquence exemple illustrant comment calculer exemples matrices conclure cette section notons partir théorème étant donnés séquence entiers possible calculer nombre séquences distinctes norme comprise entre effet avons algorithme cette formule permet calculer étape poids initial séquences données séquentielles tirage rejet séquence après avoir aléatoirement séquence proportionnellement poids ligne algorithme entier entre selon distribution ligne echantillonnage motifs séquentiels objectif maintenant montrer comment retourner séquence norme tirée uniformément depuis séquence ligne difficulté favoriser séquences disposent plusieurs occurrences séquence contourner cette difficulté proposons utiliser méthode rejet uniformément occurrence séquence rejetant cette occurrence première comme chaque séquence dispose unique première occurrence cette proche garantit tirage uniforme motifs séquentiels commencer formalisons notion première occurrence définition première occurrence soient occurrences séquence signatures respectives précède existe indice enfin appelle première occurrence petite occurrence selon ordre défini précédemment exemple continuité exemple comme signatures respectives occurrences séquence précède avons enfin vérifier première occurrence étant seules occurrences pratique devons surtout vérifier occurrence séquence première occurrence séquence propriété etant donnée occurrence séquence signature première occurrence seulement existe exemple toujours continuité exemple supposons après avoir items séquence savoir items positions index ayons généré occurrence signature séquence comme existe appartenant première occurrence cette occurrence rejetée grâce propriété finalement tirer uniformément séquence norme séquence tirant aléatoirement positions distinctes entre commence tirer uniformément occurrence norme séquence cette occurrence première occurrence accepte retourne sinon rejette effectue tirage aléatoire nouvelle occurrence algorithme repose technique échantillonnage rejet montrons section suivante nombre moyen tirages avant acceptation calculable analyse méthode propriété suivante indique algorithme retourne échantillon exact motifs séquentiels contrainte norme propriété correction soient données séquentielles normes minimale maximale algorithme effectue tirage séquence norme prise entre proportionnellement fréquence concernant complexité pouvons distinguer grandes phases notre proche traitement distribution motifs séquentiels fonction norme calculée chaque séquence tirage séquences complexité traitement traitement avère coûteux complexité porelle longueur maximale séquence norme maximale séquences tirées taille maximale ensemble tions taille maximale itemset séquence néanmoins petit pratique traitement ligne algorithme réalisé unique avant pouvoir tirer séquences complexité tirage tirage effectif séquences moins coûteux abord tirage séquence ligne algorithme réalise difficile estimer complexité tirage séquence nombre rejets borné néanmoins bonne façon mesurer efficacité approche calculer nombre moyen tirages nécessaires tirer séquence norme comprise entre intuitivement dépend probabilité séquence tirée nombre moyen tirages nécessaires tirer occurrence séquence première occurrence priété suivante montre comment termes peuvent calculés propriété nombre moyen tirages soient données séquentielles normes minimale maximale nombre moyen tirages tirer motif séquen norme compris entre défini lorsque nombre moyen tirages proche signifie tirage motif séquentiel donnera rejet séquence donnée rejet chaque occurrence première occurrence répétition quence pratique nombre moyen tirages mesuré données réels souvent faible section expérimentale suivante finalement complexité tempo relle tirage occurrence norme égale séquence étant complexité moyenne tirage séquences données après phase traitement expérimentations objectif cette section expérimentale évaluer rapidité notre méthode server impact contrainte motifs extraits avons utilisé données données réels disponibles quatre autres construits générateur données également disponible philippe fournier viger echantillonnage motifs séquentiels caractéristiques générales nombre moyen tirages données d10k5s2t6i d10k6s3t10i d100k5s2t6i d100k6s2t6i caractéristiques benchmarks intérêts données synthétiques avoir exemples données nombre moyen tirages nécessaires supérieur grâce ajout répétitions séquences tableau présente caractéristiques générales données partie gauche nombre moyen tirages nécessaires extraire motif partie droite notre méthode implémentée langage python toutes expériences faites processeur ubuntu prétraitement tirage motif données d10k5s2t6i d10k6s3t10i d100k5s2t6i d100k6s2t6i temps exécution échantillonnage séquences norme inférieure rapidité approche tableau indique temps exécution méthode distin guant temps prétraitement temps moyen tirer motif séquentiel norme comprise entre constate temps préparation augmente taille données nombre séquences items norme maximale d100k6s2t6i grande taille temps exécution prétraitement faire ligne raisonnable moins concernant phase tirage données temps exécution ordre quelques millisecondes d100k6s2t6i malgré nombre moyen tirages nécessaires supérieur rejet tirage performances données synthétiques bonnes observe hausse temps exécution celle reste limitée durées moyennes tirage inférieures impact contrainte figure montre répartition motifs séquentiels échantillonnés selon fréquence contrainte norme inférieure contrainte différents données méthode contrainte retourne uniquement motifs fréquence faible particulier quence unitaire données réels inverse méthode échantillonnage contrainte norme retourne séquences fréquence significativement élevée 10000 frequence without constraint 10000 frequence without constraint 10000 frequence d10k5s2t6i without constraint 10000 frequence d10k6s3t10i without constraint 10000 10000 20000 30000 40000 50000 frequence d100k5s2t6i without constraint 10000 10000 20000 30000 40000 50000 frequence d100k6s2t6i contrainte répartition motifs séquentiels selon fréquence élevées démontre importance introduire contraintes norme notons effet significatif diminution norme maximale parvient juguler explosion motifs fréquence élevée conclusion article propose première méthode échantillonner sortie motifs séquen tiels permet outre spécifier intervalle norme motifs séquentiels mieux contrôler motifs retournés avons démontré notre approche exacte avons estimé efficacité fonction nombre rejets moyen dégrade nombre répétitions séquence néanmoins partie expérimentale montré approche avère performante données réels répéti faible expérimentations montrent ajout contrainte norme évite retourner motifs rares immédiat voudrions appli échantillonnage motifs séquentiels détection données aberrantes giacometti soulet systèmes interactifs giacometti soulet démon echantillonnage motifs séquentiels utilité souhaiterions aussi étendre notre approche système ensembliste effet tirage uniforme structures complexes rendu possible grâce forme canonique envisageable autres langages structurés remerciements lamine partiellement financé mitic centre excellence mathématiques informatique références agrawal srikant mining sequential patterns hasan output space sampling graph patterns endowment boley lucchese paurat gärtner direct local pattern sampling efficient random procedures sigkdd dzyuba leeuwen raedt flexible constrained sampling guarantees pattern mining mining knowledge discovery raïssi calders napoli measuring similarity sequences itemsets mining knowledge discovery giacometti soulet frequent pattern outlier detection without exhaustive mining pakdd springer giacometti soulet interactive pattern sampling characterizing unlabeled springer gomariz campos goethals clasp efficient algorithm mining frequent closed sequences pakdd mining ranking generators sequential patterns mortazavi pinto prefixspan mining sequential patterns efficiently prefix projected pattern growth raissi poncelet sampling sequential pattern mining static databases streams toivonen sampling large databases association rules spade efficient algorithm mining frequent sequences machine summary pattern sampling method discovering patterns strong statistical guarantees paper propose first method sampling sequential patterns beyond addressing sequential originality approach constrain sequential patterns avoid issue demonstrate constrained random procedure performs exact sampling which efficient practice