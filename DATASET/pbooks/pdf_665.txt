articles assemblage pdfinterrogation résumés données nesrine gabsi fabrice clérot georges hébrail institut telecom telecom paristech barrault 75013 paris prénom telecom paristech france telecom avenue marzin 22307 lannion prénom orange ftgroup résumé systèmes gestion données conçus traiter masse importante données produites ligne façon continue etant donné ressources matérielles permettent conser toute cette volumétrie seule partie récente mémorisée mémoire ainsi requêtes évaluées systèmes peuvent données récentes conséquent tuels peuvent traiter requêtes portent périodes longues proposons article approche permettant évaluer requêtes portent période longue mémoire fenêtres appels données récentes données historisées présentons niveau logique cette approche ainsi implantation technique échantillonnage associée technique fenêtre point repère appliquée conserver représentation compacte données introduction contrairement systèmes transactionnels classiques données conservées avant traitées systèmes gestion données babcock 2002a effectuent traitement volée seule passe conservation priori données permettent poser requêtes continues compte volume débit données conservent données récentes celles passé récent structures appelées fenêtres données peuvent analysées posteriori ainsi nécessaire besoin analyse préciser priori tâche avant arrivée données cependant nouveau besoin portant données écoulées exprimé tâches réalisables solution permettant traitement posteriori consiste conserver résumé résumer contenu façon construire modèle résumé beaucoup petit taille permet répondre tâches manière approchée interrogation résumés données résumés typiquement stockés bases données permettant utilisateurs interroger langage interrogation classique conservation permet poser requêtes passé cependant plusieurs applications nécessaire poser requêtes portent données passé données histo riques mémorisées résumé données présent données conservées mémoire exemple requête domaine financier consiste envoyer alerte indice boursier observé dernières heures écarte celui observé évaluation telles requêtes certain nombre problèmes traitement requête porte période longue réalisée capables prendre considération période récente capables prendre compte passé papier présente nouvelle approche permettant évaluer requêtes portent longue période nécessitant ainsi données présent données passé travaux connexes généralement existe trois scénarios possibles évaluer requêtes système gestion données premier consiste interroger données archivées données histo riques présentent système avant arrivée requêtes largement étudié traditionnels second scénario consiste poser requêtes continues données éphémères recherche sujet permis développer ainsi nouveaux langages interrogation arasu permettent traiter données récente dernière classe requêtes intervenir archivée données récentes interrogation telles requêtes sujet récent encore ouvert chandrasekaran franklin auteurs intéressent traitement requêtes intervenir passé générale consiste évaluer requêtes portent données présent concaténées données historiques cependant article intéresse requêtes courtes durées minutes plage horaire précise journée semaine minimiser entrées sorties interrogation revanche cette communication notre intérêt porte périodes temporelles glissantes1 longues durées années existe plusieurs approches résumé approches dites simples reservoir pling vitter approches dites complexes streamsamp csernel interrogation résumés simples triviale qualité résultats médiocre reservoir sampling poids associés échantillons augmentent linéairement insatisfaisante qualité réponses requêtes tandis interrogation complexes difficile fournit meilleur performance article présente inter rogation résumé complexe précisément résumés conçus approche streamsamp streamsamp streamsamp technique échantillonnage aléatoire données arrivée données échantillonnées placées aspect glissant fenêtres concerne partie récente partie historique gabsi échantillons taille lorsque atteint algorithme mémorise échan tillon ainsi début constitution lorsque échantillons constituée algorithme fusionne anciens échantillons former échantillonnage aléatoire nouvel échantillon taille couvrant ainsi période temporelle grande consiste ainsi conserver échantillons taille constante étalent périodes temporelles durée variable courtes présent longues passé lointain modéliser représentativité échantillons algorithme système pondération croissante csernel détails fonctionnement algorithme spécification problème cette communication sommes intéressés évaluation requêtes brides définition requête hybride porte données anciennes données récentes données anciennes disponibles forme résumé données données récentes forme grandes familles requêtes hybrides peuvent distinguer requêtes référen données récentes période passée vérifier indices boursiers actuels écartent moyenne requêtes référen périodes récentes période passée mobile requête permet détecter éventuelles fraudes systèmes bancaires comparant activité actuelle carte crédit activité derniers jours glissants traitement première catégorie requête simple suffit appliquer seule requête résumé enchaîner suite traitement fenêtre glissante données récentes tandis traitement seconde catégorie requête compliqué puisqu requête glissante données systèmes gestion données existants posent outils nécessaires traitements objectif lequel travail consiste étendre existant enrichir façon pouvoir évaluer requêtes glisantes portant données associée utilisateur définit requêtes continue période longueur items cette requête réévaluée items2 nombre items conserver mémoire items traités forme fenêtre glissante jusqu situations peuvent résulter cette description totalité période décrite requête utilisa mémorisée mémoire ainsi cette requête traitée mécanisme classique requête posée utilisateur porte données peuvent mémorisées totalité mémoire figure système ainsi combiner traitement données stockées résumé période données présentes mémoire période traitons article approche définit section suivante consiste mettre fenêtre temporelle comprenant données nécessaires évaluation paramètre utilisateur interrogation résumés données exemple fenêtre faisant appel données passé données récentes requête cette fenêtre chaque items insérés mémoire approche proposée article considérons observé instants mesure arrivée items traité algorithme résumé considérons résumé échantillonnage aléatoire conservé arrivée disposons ainsi échantillon toute fenêtre passé simplifier considérons requêtes agrégat appliquées ensemble période interrogée fenêtres logiques exprimées terme nombre items traité requêtes peuvent alors estimées partir échantillons conservés quantifier imprécision utilisation résumé intervalle confiance associé réponse requête difficultés généraliser requêtes réalisant sélection définie condition attributs quantitatifs qualitatifs pouvoir répondre requêtes définies précédemment maintenons bleaux mémoire centrale3 premier tableau couvre période ensemble éléments satisfont requête utilisateur inclus mémoire tableau maintenu façon standard second tableau thist couvrant période contient items satis requête utilisateur extraits partir résumé résumé élaboré utilisant algorithme streamsamp conservé disque table nommée résumé chaque rafraîchissement fenêtre temporelle tableau façon standard tableau thist aussi items ayant timestamp inférieur supprimés remplacés items extraits appartiennent intervalle 3nous supposons dispose espace nécessaire maintenir mémoire centrale tableaux gabsi temps latence débit approche décrite dessus puisse fonction correctement assurer instant items timestamp inférieur sauvegardés résumé délai nécessaire traiter écrire valider résumé disponible partir instant débit arrivée items fenêtre temporelle items couvre période assurer fonctionnement approche contrainte respectée cependant pratique difficile débit temps latence contrainte porte alors items arrivent débit variable cette contrainte appliquée débit maximum toutefois cette condition satisfaite pouvons envisager technique échantillonnage fenêtre glissante ainsi fenêtre taille contient items récents plutôt échantillon aléatoire taille correspondant items babcock 2002b algorithme implantation approche proposée avons testé solution proposée esper technique résumé utilisée streamsamp csernel travail antérieur gabsi permit évaluer performances cette approche résumé esper esper source utilisé communauté active ensemble bibliothèques permettant déclarer schéma ainsi créer requêtes continues requêtes peuvent appliquer trois types fenêtres glissantes sautantes partitionnées esper items appelés événements requête reçoit entrée événements fournit sortie événements individuels plusieurs événements chaque événement événements serveur esper5 invoque méthode appelée update arguments cette méthode tableaux remplis volée serveur esper exécution requête tableau oldevents contient dernier événement expiré fenêtre alors tableau newevents contient dernier événement inséré fenêtre implantation approche esper implantation approche esper définition nouvel opérateur fenêtrage opérateur reçoit paramètres utilisateur permet spécifier taille fenêtre laquelle appliquer requête permet préciser rafraîchissement résultat idéal nombre items système fonction charge cependant implantation proposé paramètre supplémentaire définition fenêtre items fenêtre présent prise charge esper cependant données passé tableau maintenu mémoire centrale contient items ainsi leurs poids nécessaires évaluation requête maintenir fenêtre glissante données chaque invocation méthode update supprime tableau items ayant expiré fenêtre requête 4event processing language langage interrogation esper tâche serveur esper consiste compiler enregistrer exécuter requêtes interrogation résumés données appliquée résumés nouveaux items extraits insérés bleau après tableau algorithme méthode update appel fonctions calcul agrégats intervalle confiance algorithme dessous illustre fonctionnement méthode update esper algorithm update require taille fenêtre intérêt agrégat requête tableaux thist nombre items mémoire rafraîchissement fenêtre update automatique while thist taille thist timestamp thist supprimer supprimer indice tableau thist while select résumé where timestamp between résultat exécuter_requête thist ajouter résultat insertion nouveaux éléments tableau réponse fonction_agrégat return réponse esper fournit fonctions agrégats intervalles confiance offre possibilité implanter nouvelles fonctions ainsi fonctions faisant intervenir dération items fournissant intervalle confiance agrégat développer requête utilisateur illustrée dessous appliquée flux_conso ayant structure suivante timestamp id_client consommation cette requête permet retourner consommation moyenne électricité fenêtre taille items rafraîchissement items select consommation flux_conso évaluation cette requête permet retourner valeurs valeur estimateur moyenne ainsi intervalle confiance calculer intervalle confiance agrégat appel théorie sondages exemple dessous illustre calcul bornes intervalle confiance agrégat moyenne partir échantillon taille taille tableaux thist concaténés poids gabsi solution proposée coûteuse étant donné chaque effectuée fenêtre glissante éléments supprimées tableau thist remplacés items suivent extraits conclusion perspectives génération actuelle systèmes gestion données conçue misée interroger présent révèle inadaptée interrogation passé cependant plusieurs applications telle applications décision cessaire interroger seulement présent également passé article avons proposé nouvelle approche permettant répondre besoin telles plications implantation cette approche proposée utilisant esper comme système gestion données streamsamp comme algorithme résumé évaluer requêtes quantifier imprécision utilisation résumés fonctions doivent implantées esper perspective travail étudier fenêtres physiques ailleurs travaux étude performances technique posée cours références arasu widom continuous query language semantic dations query execution technical report journal babcock datar motwani widom 2002a models issues stream systems babcock datar motwani 2002b sampling moving window strea philadelphia chandrasekaran franklin remembrance streams overload sensitive management archived streams csernel clérot hébrail streamsamp datastream clustering tilted windows through sampling gabsi clérot hébrail résumé hybride données échantillon classification automatique vitter random sampling reservoir trans softw summary stream management systems designed process large amounts given hardware resources cannot store recent stream stored buffer therefore cannot handle queries relate periods propose paper approach evaluate queries include recent periods present definition approach implementation using esper