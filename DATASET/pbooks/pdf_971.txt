egccl dviun cadre théorique gestion grandes bases motifs1 françois jacquenet baptiste jeudy christine largeron laboratoire hubert curien etienne prenom etienne résumé algorithmes fouille données maintenant capables traiter grands volumes données utilisateurs souvent submer quantité motifs générés outre certains raisons confidentialité coûts utilisateurs peuvent avoir accès directement données disposer motifs utilisa teurs alors possibilité approfondir partir données initiales processus fouille façon extraire motifs spécifiques médier cette situation solution consiste gérer motifs ainsi article présentons cadre théorique permettant utilisateur puler traitement collection motifs préalablement extraite proposons représenter collection forme graphe utilisa pourra ensuite exploiter opérateurs algébriques retrouver motifs chercher nouveaux introduction quantité information stockée bases données monde entier cessé croître cours temps explorer mines potentielles connaissance outils fouille données conçus depuis plusieurs années ainsi maintenant possible fouiller grandes bases données extraire toute sorte motifs modélisant connaissance selon outils utilisés utilisateurs finaux leurs besoins motifs extraits peuvent variés citer exemple arbres décision règles association concepts formels toutefois alors fouille grandes bases données devenue tâche relativement aisée utilisateurs finaux maintenant confrontés nouveau problème comment pouvoir exploiter grandes masses motifs couramment extraites outils fouille données façon était impossible quelques années extraire manuellement connaissance partir grandes bases données jours impossible gérer grands volumes motifs utilisateurs finaux attente nouveaux outils résoudre problème travail partiellement soutenu projet bingo masse données financé ministère recherche cadre théorique gestion motifs approches proposées gérer explorer maintenant courant appeler bases motifs première basée concept bases données induc tives imielinski mannila boulicaut raedt raedt europe projet cinq2 majeur développement recherches domaine données inductive contient seulement données lement motifs langages fouille données intégrés systèmes gestion bases données inductives offrent facilités manipuler motifs travers opérateurs traitement boulicaut masson toutefois dimentaires systèmes gestion bases motifs devraient fournir fonctionnalités puissantes seconde approche gérer motifs intéresse justement notion système gestion bases motifs catania catania maddalena défini comme système permettant supporter stocker traiter rechercher motifs extraits partir données brutes proposer techniques efficaces correspondance motifs exploiter opérations motifs générant ainsi information forme intentionnelle principe consiste stocker motifs extraits outils fouille données utilisant structures données efficaces langages manipulation motifs doivent alors ensuite conçus gérer cette approche induit questions première concerne possibilité concevoir modèle générique représenter motifs seconde concerne langage nécessaire accéder motifs interroger projet panda3 travail intéressant propose cadre générique permettant modéliser diverses classes motifs certain nombre opérateurs permettant utilisateur gérer cependant comme modèle jacent stocker motifs modèle relationnel requêtes conçues utilisateurs souvent complexes intuitives consommatrices temps calcul considéré comme candidat évident gérer collections motifs langage conçu accéder données stockées bases données adapté gestion motifs parsaye calders cadre générique permettant spécifier structures auxquelles peuvent associées fonctions gestion motifs aussi proposé tuzhilin défini opérateurs permettant explorer bases règles association efforts aient réalisés stocker efficacement motifs langages proposés manipuler relativement pauvres finalement domaine gestion bases motifs citer également projet grossman permet assurer interopérabilité entre bases motifs définissant cadre autour concept motif toutefois cadre intéresse définition représentation structurée motifs gestion travaux appartiennent également cette seconde approche basée traitement motifs ainsi souhaitons définir structure données algorithmes efficaces gestion grandes bases motifs pensons intéressant utili sateurs pouvoir obtenir divers ensembles motifs construits exemple sessions successives fouille diverses bases données disposer outils permettant project panda jacquenet gérer efficacement suite effet nombreux problèmes confidentialité données droit commerciaux utilisation logiciels fouille utilisateurs accès directement données seulement motifs extraits article proposons cadre théorique gestion classe particu lière motifs couramment appelés concepts wille précisément notre approche graphes étiquetés représenter collections concepts maine travaux réalisés recherches proches nôtres aucun doute celles mielikäinen suggère utiliser automates finis déter ministes représenter motifs résultats obtenus expérimentalement montrent automates minimaux fournissent représentation compacte motifs toutefois likäinen considère collections ensembles items concepts encore propose cadre théorique opérateurs algébriques prochaine section rappelle certaines définitions utiles compréhension article section introduisons ensuite représentation collections concepts forme graphe étiqueté algorithme construire section définissons opérateurs permettant effectuer requêtes graphes pouvant combinés entre utilisant algèbre certain cette section reliée définitions données définies comme relation symétrique entre ensemble attributs ensemble objets données peuvent repré sentées matrice booléenne colonnes correspondent attributs lignes objets abcdef abdef 12345 exemple données gauche diagramme hasse collection concepts formels concepts milieu graphe correspondant étiquettes droite telle données exemple résultat mesures expression gènes colonnes représentent gènes lignes correspondent situa cadre théorique gestion motifs tions biologiques existe relation entre situation exprimé cette situation bases données biologistes particuliè rement intéressés recherche concepts formels besson suite utilisons définitions besson couple rectangle attributs relation objets ainsi matrice booléenne rectangle correspond matrice contenant uniquement exemple exemple figure utilisons cette notation simpli rectangles rectangle puisque relation relation inclusion définie façon suivante concept formel rectangle maximum ordre défini inclusion collection concepts formels données concepts relation ordre concepts alors définie notez inclusion munissant collection concepts formels ordre obtient treillis concepts formels notre exemple illustratif treillis représenté figure milieu représentation collection concepts plusieurs propriétés semblent souhaitables obtenir bonne représentation possible interroger collection exemple étant donné collection concepts possible sélectionner concepts contiennent certain attribut objet concepts contiennent moins objets résultat requête collection concepts utilisant repré sentation collection départ propriété fermeture nécessaire assurer puisse enchaîner requêtes collection concepts enfin représentation respecter dualité existante entre ensembles attributs objets permettra effet obtenir simplement exemple algorithme sélectionner concepts contenant objet donné partir algorithme permet sélectionner concepts contenant attribut donné sortie algorithmes extraction concepts comme miner besson généralement liste concepts constitue probablement représentation simple collection concepts mielikäinen proposé utiliser automate stocker collection itemsets itemset ensemble attributs plusieurs automates possibles exemple arbre préfixes automate minimal cependant nécessaire définir ordre attributs transformer ensembles chaînes caractères trouver ordre difficile mielikäinen cette représentation automate pourrait étendue représenter collection concepts problème surgirait comment transfor paire ensembles chaîne caractères utiliser ordre arbitraire jacquenet attributs objets manipuler telle représentation semble facile pourquoi proposons utiliser autre représentation notre proposition proposons utiliser graphe étiqueté fondé diagramme hasse lection concepts ordre sommets graphe concepts existe entre concepts couvre existe concept graphe comporte sommets supplémentaires étiquettes associées sommets étiquette associée sommet paire ensembles étiquette paire ensembles graphe associé collection concepts données exemple illustratif présenté figure étiquettes telle représentation présente double intérêt premièrement interrogation collection concepts aisée deuxièmement nécessite contrairement autres représentations basées notamment automates mielikäinen trier attributs objets selon ordre difficile choisir construction graphe étant donné liste concepts extraits algorithme miner besson principe construction graphe consiste partir graphe contenant seule sommets insérer concepts après autre simplifier complexité algorithme proposons ajouter concepts ordre croissant taille ordre insertion concepts lorsqu nouveau concept inséré existe concept graphe ainsi successeur ajouté ensuite trouver prédécesseurs graphe concepts graphe couvre créer faire parcours profondeur graphe finalement couvre concept couvert aussi supprimé puisque couvre requêtes cette section étudions différentes opérations réalisables collection concepts types requêtes peuvent distinguées requêtes sélection requêtes projection autre requêtes sélection étant donnée collection prédicat opération sélection suivant définie cadre théorique gestion motifs exemple parmi prédicats courants sélection citer exemples suivants crémilleux longueur minimale maximale fréquence minimale maximale surface minimale maximale présence absence attribut objet concept requête projection analyse données expression gènes biologistes souvent besoin restreindre certains gènes revient focaliser ensemble gènes exemple solution simple pourrait consister extraire concepts données initiales partie contenant seulement colonnes projection données initiale droite ensemble attributs notons projection attributs cependant diverses raisons telle approche toujours envisagée premier nouvelle extraction concepts réalisée projection données avérer coûteuse second certain nombre applications données initiales peuvent disponibles raisons stockage perte données encore confidentialité telles situations toujours accès collection concepts extraits cette demander serait possible retrouver partir cette collection concepts extraits toute donnée collection concepts aurait obtenir partir projection donnée initiale répondre cette question revient trouver opération correspondant flèche pointillés figure autres termes souhaitons pouvoir calculer concepts partir concepts avoir effectuer nouvelle extraction allons montrer réalisable faire convient définir relation équivalence concepts définition équivalence étant donné ensemble attributs concepts équivalents manière évidente relation équivalence figure donne exemple classes équivalence ensuite introduisons proposition suivante proposition classes équivalence petit élément prouver cette proposition utilisons résultat connu suivant concepts alors existe concept preuve étant donné concepts équivalents minimaux alors existe troisième concept jacquenet 12345 111100 110110 110101 001110 110111 abcdef projection abcdef abdef 12345 extraction concepts extraction concepts projection concepts données départ concepts correspondants concepts gauche projeté concept droite classes équivalence pointillés leurs petits éléments soulignés vérifier intersection ensemble petits éléments ensemble donne exactement concepts théorème façon évidente équivalent avons aussi définition conséquent comme minimaux classe équivalence seulement élément minimum petit élément théorème suivant permet caractériser collection concepts concepts théorème étant donné données ensemble attributs ensemble petits éléments classes équivalence alors concepts preuve prouver théorème utilisons concept alors étendu former concept première inclusion concept étendu concept concept équivalent rectangle puisque concept cadre théorique gestion motifs égaux conséquent inclus suite signifie petit élément classe équivalence inclusion alors rectangle supposons existe rectangle alors sinon serait rectangle contenant strictement conséquent pourrait concept pouvons étendre concept ainsi sinon serait rectangle contenant suite pourrait concept conséquent concepts équivalents égaux puisque petit élément rectangle maximal concept généralement pouvons définir opération projection collection concepts façon suivante définition projection collection concepts étant donnée collection concepts données ensemble attributs définissons projection collection défini théorème théorème récrire concepts concepts cette égalité premier terme désigne projection données tandis second désigne projection collection concepts signifie concepts données projetée peuvent obtenus projection concepts données initiale algèbre cette section étudions composition opérations projection sélec définies précédemment collection concepts trouver opération permettant fermer graphique figure solution naturelle projection définie précédemment effet théorème suivant prouve graphique complété cette opération théorème étant donnée collection concepts données ensemble attributs prédicat sélection concept alors preuve après puisque après jacquenet concepts concepts sélection concepts projection concepts projection concepts projection données extraction conceptsextraction concepts sélection concepts selection projection condition paraître forte nécessaire pouvoir réaliser sélection après projection projection restreigne information contenue collection exemple sélection définie sélection concepts contenant attribut alors sélection commute projection effet après projection information selon laquelle concept contient attribut disponible modèle relationnel opérations sélection projection définies tables relationnelles généralement commutatives cependant sélection utilise attribut supprimé projection opérations commutent dualité sections précédentes avons défini projection collection concepts ensemble attributs manière duale pouvons définir projection ensemble objets relation équivalence duale équivalence définie façon suivante concepts équivalents seulement ensuit résultats duaux correspondants théorèmes algorithmes cette section proposons algorithmes permettant mettre oeuvre opérations projection sélection graphe représentant collection concepts réaliser projection collection concepts rapport ensemble tributs pouvoir vérifier concept minimal classe équivalence cependant toujours possible information complémentaire effet collection contienne concepts appartenant classe équivalence pourrions trouver concept minimum cette classe équivalence petit élément cette classe équivalence concepts exemple supposons contienne concepts figure avant projection excepté concept 12345 alors effectuons projection cette collection projection concept cadre théorique gestion motifs algorithm projection input graphe représentant collection concepts ensemble attributs output graphe représentant collection forall marqué forall marqué ordre topologique predecesseur marqué classe classe ajoute_sommet forall prdcesseur marqué ajouter_sommet_marqué ajoute_arc forall predecesseur marqué classe classe forall marqués ajoute_arc petit élément classe équivalence détectable information additionnelle raison laquelle nécessaire ajouter informations graphe notre représentation étant donnée collection concepts ajoutons graphe concepts frontière collection concepts frontières entendons concepts successeurs prédécesseurs concept appartenant collection concepts additionnels portent marque spécifique reliés sommets insérés graphe moyen fonction ajouter_sommet_marqué seulement reliés concept collection successeurs prédé cesseurs évidemment opérations sélection projection cette information additionnelle conservée projection réalisée suivant algorithme sommet rithme calcule petit élément classe équivalence petit élément collection alors petits éléments classes équivalence insérés nouveau graphe ajoutés algorithme général effectuer sélection collection concepts selon prédicat nécessaire parcourir graphe représentant collection tester prédicat chacun concepts cependant parcours réduit lorsque monotone monotone rappelons prédicat monotone monotone monotone exploration bottom réalisée concept vérifiant trouvé nécessaire explorer successeurs façon équivalente prédicat monotone exploration permettra parcourir partiellement graphe jacquenet algorithm selection_am input graphe représentant collection concepts prédicat sélection monotone output graphe représentant collection graphe_vide ajoute_sommet ajoute_sommet variable globale explore return procedure explore sommet forall prédécesseur marqué ajouter_sommet_marqué ajoute_arc link_to_top forall successeur marqué link_to_top ajoute_sommet explore ajoute_arc ajouter_sommet_marqué ajoute_arc link_to_top ajoute_arc conclusion article présentons cadre théorique représentation interro gation collection concepts proposons stocker collection forme graphe définissons types opérations applicables graphe sélection projection envisageons présent poursuivre travail plusieurs directions abord serait intéressant étudier passage échelle cette représentation données réelles comparer autres types représentations comme exemple automates particulier étude relations entre taille représentation caractéristiques données partir desquelles générée serait intéressante ensuite notre représentation forme graphe paraît avantageuse interrogation collection revanche compacte aussi pourrait intéres prévoir modèles représentation premier compact destiné stockage disque second forme graphe utilisable interrogation finalement certain nombre recherches consacrées généralisation concepts clusters concepts définition opération regroupement graphe supportant différentes généralisations mériterait également étudiée références besson robardet boulicaut constraint based concept mining application microarray analysis boulicaut klemettinen mannila modeling processes within inductive database framework first international conference warehousing knowledge discovery volume boulicaut masson mining query languages mining knowledge discovery handbook springer cadre théorique gestion motifs calders goethals prado integrating pattern mining relational databases volume catania maddalena pattern management practice challenges processing managing complex decision support group publishing catania maddalena mazza bertino rizzi framework mining pattern management volume giacometti laurent spyratos computation mining queries algebraic approach constraint based mining inductive databases volume grossman bailey malhi hallstrom pulleyn management mining multiple predictive models using predictive model markup language information software technology volume imielinski mannila database perspective knowledge discovery mielikäinen automata approach pattern collections volume panda patterns generation database systems 33058 parsaye datamagement pattern management raedt perspective inductive databases sigkdd explorations raedt jaeger mannila theory inductive query answering soulet crémilleux efficient framework mining flexible constraints pakdd volume tuzhilin querying multiple discovered rules proceedings sigkdd wille concept lattices conceptual knowledge systems plied parimi phoophakdee urban chaoji hasan salem towards generic pattern mining formal concept analysis summary mining algorithms efficiently amount ertheless users often overwhelmed large quantity patterns extracted situation moreover privacy issues commercial prevent users mining themselves users possibility perform experiments integrating various constraints order focus specific patterns would extract processing patterns answer drawback paper present framework could allow users manage collections patterns propose efficient structure which algebraic operators order retrieve access patterns pattern bases