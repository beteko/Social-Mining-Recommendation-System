mining frequent queries schemes dominique laurent nicolas spyratos oumar universite cergy pontoise 95302 cergy pontoise cedex france dominique laurent cergy universite paris 91405 orsay cedex france spyratos universite gaston berger saint louis senegal oumar extraction toutes reque quentes donne relationnelle proble difficile conside reque conjonctives montrons proble devient possible suivant toile donne satisfont ensemble pendances fonctionnelles contraintes rentielles toile approprie entrepo donne pendances fonctionnelles contraintes rentielles contraintes usuelles bases donne conside instances faibles montrons reque quentes exprime lection projection peuvent extraites algorithmes apriori introduction general problem mining frequent queries relational database queries whose answer cardinality above given threshold known intractable consider conjunctive queries goethals however mining frequent queries database allows production relevant association rules cannot obtained other approaches dealing multiple tables dehaspe raedt turmeaux because these approaches association rules mined table other mining frequent queries possible obtain rules whose right sides frequent queries mined different tables following example serves running example throughout paper illustrates point example database containing three tables sales customers products sales transactions respectively suppose table defined attributes cname caddr standing respectively identifiers names addresses customers table defined attributes ptype standing respectively identifiers types products table sales defined attributes where stands quantity product bought customer mining frequent queries schemes frequent queries mined possible least customers living paris indeed stated facts queries σcaddr paris σcaddr paris ptype sales frequent confidence greater equal notice cannot replaced sales because customers transactions would taken account paper problem mining frequent queries database becomes tractable under restrictions warehousing indeed warehouses organized according schemes which constraints functional dependencies referential constraints assumed contribution paper database scheme selection projection queries frequent computed based level algorithm apriori agrawal computation tractable formalism database satisfying functional dependencies represented instance denoted ullman roughly speaking tuples attributes difference between tuples standard tuples tuples contain values using unique table consider queries where conjunctive selection condition attributes total projection restrictions tuples whose values constants given query answer denoted tuples satisfy selection condition support denoted cardinality example referring example assume satisfies functio dependencies cname caddr satisfies tional dependency ptype sales satisfies functional dependency scheme scheme which table sales dimensional tables denoting functional dependencies given above instead consi dering queries example consider following queries σcaddr paris caddr σcaddr paris ptype caddr ptype although involve table computation supports confidence takes account there exist customers table whose identifiers occur table sales scheme scheme problem mining frequent conjunctive queries treated according following steps being based level algorithm apriori agrawal compute frequent queries relation scheme frequent compute frequent queries where conjunction selection conditions knowledge except goethals other addresses general computing frequent queries given database goethals considers conjunctive queries paper points considering restrictions database scheme functional dependencies leads tractable complexity although hints possible restrictions mentioned goethals specific actually studied shall considering scheme associated constraints leads tractable level algorithms approach casali related because cubes schemes multi dimensional however frequent queries considered casali involve table therefore contrary approach possible frequent queries defined attributes however casali takes account hierarchies dimensions which approach mentioned previously approaches dealing mining frequent queries multi relational databases dehaspe raedt turmeaux consider table given mining consequently these approaches association rules example except turmeaux these proaches restricted conjunctive queries paper paper organized follows section recall basics instance semantics schemes section deals queries interest approach section algorithms provided computation frequent queries section concludes paper background recall ullman relational model databases given universe attributes every attribute associated values called domain denoted moreover relational database scheme consists tables where table associated attribute called scheme denoted relational database table contains relation finite tuples universal relation scheme interfaces universal relation scheme interfaces introduced early order logical independence relational model given database universe attributes functional dependencies logical independence achieved associating single table denote called instance refer laurent ullman details contruction simply contrary standard relations tuples contain values instance table which queries addressed precisely every relation scheme denote tuples contains value there exists mining frequent queries schemes tuple every attribute tuples possible consider queries where selection condition involving attributes paper consider queries whose selection condition conjunction selection conditions where attribute constant schemes dimensional scheme consists distinguished table called table other tables called dimension tables primary respectively every foreign table attribute called measure scheme moreover following simplified notation denoted respectively denoted example scheme database running example dimensional scheme where dimension tables table sales measure moreover database defined dimensional scheme consider instance simplify table removing tuples which there exists every attribute which constant justified performing simplification because doing change answers queries symbol denote simplified table important simplified table contains kinds tuples either total tuples tuples containing value there mapping between these tuples tuples table tuples containing constants attributes single dimension value occur table denote total tuples tuples containing constants attributes dimension remainder paper consider fixed dimensional scheme table dimension tables fixed database scheme moreover simplification assume every dimension reduced single attribute other known practice cardinality table higher dimension table order situation account assume every example refer database introduced example where universe attributes cname caddr functional depen dencies cname caddr ptype consider database consisting following three relations cname caddr paris paris paris tours sales simplified instance which values represented following cname caddr paris tours paris paris paris paris notice example contain respectively tuples first tuples whereas empty moreover answers queries example shown below caddr paris paris paris caddr paris paris frequent queries queries definition given database dimensional scheme scheme denoting false selection conditions respectively following conjunctive selection conditions selection conditions called selection conditions moreover denote queries where union relation schemes according definition order simplify notations denote convention denoted mining frequent queries schemes compare queries using standard query containment ordering ullman contained denoted databases fixed dimensional scheme define following operators selection conditions define respectively respectively otherwise respectively respectively otherwise conjunction elementary selection conditions occur queries σs1zs2 σs1ys2 σs1ys2 σs1zs2 σs1ys2 σs1zs2 lattice property approach compute frequent queries using level algorithm apriori agrawal frequent queries definition database dimensional scheme every query support denoted understood cardinality answer query frequent frequent understood greater equal given support threshold referring example given support threshold equal frequent whereas turns notion support monotonic respect queries since requires scheme previous plication stated follows frequent frequent either consequently frequent queries computed using level algorithm morever notice frequent query frequent other given standard relation relation scheme finite tuples defined attributes however property partial tuples meaning framework indeed table example caddr caddr whereas following proposition shows cases monotonicity proposition relation schemes satisfying statements either every selection condition based proposition frequent queries computed consi dering lattice empty subsets starting itself level candidate relation schemes cardinality pruned follows every attribute found frequent cannot frequent there exists found frequent previous cannot frequent important given dimension frequent imply frequent moreover proposition assumption imply following corollary corollary every query functional dependencies further optimization based following given standard relation relation scheme finite tuples defined attributes satisfies every selection condition moreover scheme every relation scheme denoted defined every proposition relation schemes every selection condition therefore applying proposition context level algorithm every didate query there exists attribute frequent found frequent following example illustrates proposition proposition example consider database example support threshold equal recall query σcaddr paris ptype where caddr frequent therefore computing frequent queries where caddr proposition without computation query σcaddr paris ptype frequent other since frequent using proposition queries frequent computing frequent queries without computation following schemes frequent support equal caddr cname cname caddr cname caddr mining frequent queries schemes algorithms frequent queries algorithm given below following notations given integer denotes candidate relation schemes dinality subsets denotes candidate relation schemes cardinality subsets denotes union similarly given integer denotes frequent queries whose corresponding scheme cardinality subset denotes frequent queries whose corresponding scheme cardinality subset denotes union denote number distinct tuples obtained scanning tables respectively given relation scheme there exists algorithm input simplified instance associated database dimensional scheme cardinalities tables support threshold output queries frequent method computation based corollary return while generation candidates level considering subsets cardinality relation schemes generate pruning based proposition pruning based proposition whether frequent pruning based proposition pruning based proposition computation computation supports compute additional pruning computation supports while return details comments algorithm comment immediate consequence corollary concerning comment candidates level obtained removing attribute frequent schemes level details about function generate mention considering attributes according fixed ordering allows efficiently perform comments consequences proposition particular portant comment pruned considering subsets similarly comments consequences proposition comment comes every support equal requires computation moreover proposition dimensions considered generated previous comment related condition while comments count contained dimension scheme subset additional pruning mentioned comment indeed every therefore frequent summarizing remarks above algorithm level algorithm scans table level prunings apriori possible frequent queries frequent queries computed applying algorithm apriori frequent query output algorithm queries mining frequent queries schemes considered decreasing ordering cardinalities schemes order prune candidate queries based proposition proposition algorithm given below denote respectively candidate respectively frequent queries where selection condition containing exactly conjuncts moreover denotes queries frequent algorithm input simplified instance table associated database dimensional scheme output algorithm responding support threshold output queries frequent method computation based proposition while generation selection conditions based definition generate selection conditions based standard pruning pruning based proposition computation supports compute while return review steps algorithm follows stated comment proposition implies obtained concerning comment simply selection conditions level obtained selection conditions queries apriori comment refers standard pruning phase apriori noticed comment proposition allows additional pruning based computing superset already computed every selection condition comment specifies table scanned compute supports scanning could option instead scanning computational issues although experiments report would point ments approach first table efficiently computed using instance external joins ullman other finding frequent queries database dimensional scheme requires appli cations level algorithm schemes frequent however likely frequent queries interest instead users interested schemes while other users would focuss other schemes propose following policy algorithm users storing frequent queries their supports could serve basis queries issued users assuming users frequent queries different schemes rarely modify algorithm restricted specified schemes additional prunings frequent queries computed stored their supports tional prunings possible conclusion further paper considered instance model relational databases order design level algorithms computation frequent queries database dimensional scheme moreover shown additional prunings respect apriori possible currently implementing approach future research directions include following considering schemes sophisticated schemes snowflake constellation schemes reported levene loizou provides suitable theoretical basis investigation since closely related approach presented investigating tionships between approaches since cubes schemes notions multi dimensional relationships between casali investigated further rences agrawal mannila srikant toivonen verkamo discovery association rules advances knowledge discovery mining pages press casali cichetti lakhal extracting semantics cubes using transversals closures pages mining frequent queries schemes dehaspe raedt mining association rules multiple relations dzeroski lavrac editors international workshop inductive logic programming volume pages springer verlag giacometti laurent spyratos composition mining contexts efficient extraction association rules volume pages springer verlag giacometti laurent spyratos mining rules databases multiple tables problems perspectives international conference computing anticipatory systems casys belgique goethals mining queries unpublished paper workshop induc databases constraint based mining hinterzarten germany available informatik freiburg talks goethals slides koperski zaiane mining query language relational databases sigmod workshop pages laurent luong spyratos querying instances under extension chase semantics international journal mathematics levene loizou snowflake schema warehouse design information systems psaila extension mining association rules mining knowledge discovery volume pages turmeaux cassard salleb vrain apprentissage caracte ristiques journe francophones extraction gestion connais sances pages ullman principles databases knowledge systems volume computer science press summary problem mining frequent queries database intractable consider conjunctive queries paper problem becomes tractable under following restrictions database scheme scheme database satisfies functional dependencies referential constraints schemes considered appropriate warehouses while functional dependencies referential constraints common constraints encounters databases approach based instance semantics considers selection projection queries instances context frequent queries mined using level algorithms apriori