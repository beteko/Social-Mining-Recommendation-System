articles assemblage pdfintégration interactive contraintes réduction dimensions visualisation lionel martin matthieu exbrayat guillaume cleuziou frédéric laboratoire informatique fondamentale orléans université orléans 45067 orléans cedex prenom orleans orleans résumé existe aujourd nombreuses méthodes réduction dimen sions cadre supervisé supervisé intérêts méthodes pouvoir visualiser données objectif objets apparaissent visuellement proches soient similaires correspond connaissances expert domaine conforme informations supervision plaçons contexte supervisé connaissances ajoutées façon interactive infor mations seront apportées forme contraintes exprimant écarts entre représentation observée connaissances expert pourrons exemple spécifier objets proches espace observation similaires inversement méthode utilisée dérive analyse composantes principales laquelle proposons intégrer types contraintes présentons méthode résolution plémentée logiciel offrant représentation données grâce auquel utilisateur ajouter contraintes manière interactive sualiser modifications induites contraintes types expérimen tation présentés reposant respectivement données synthétique standards tests montrent représentation bonne qualité obtenue nombre limité contraintes ajoutées introduction mécanismes apprentissage automatique consistent général établir important objectif donné masse information disponible notamment cadre classification automatique supervisée objets souhaite classer fréquemment définis ensemble descripteurs potentiellement nombreux peuvent avérer redondants bruités simplement objet classification recherchée ailleurs abondance descripteurs rendre lisible mécanisme classification travail soutenu masse données connaissances graphem intégration interactive contraintes réduction dimensions approches possibles réduire nombre descripteurs première siste sélectionner descripteurs significatifs sélection attributs feature selec pourra notamment consulter synthèse guyon elisseeff seconde produire ensemble restreint descripteurs synthétiques reflétant mieux répartition objets espace origine réduction dimension dimensionality reduction réduction dimension parfois considérée langley comme appartenant catégorie méthodes sélection attributs approche filtre intéresserons méthodes réduction dimension lesquelles permettent fréquemment obtenir perte information raisonnable information thétique limitée quelques descripteurs conduit réduction coûts calcul classification automatique recherche voisins estimation mélange autorise également projection objets espace visualisable trois dimensions nombreuses approches développées cours dernières décennies connues étant analyse composante principale rappelons approche supervisée sélectionnant dimensions orthogonales issues combinaisons linéaires attributs origine préservent mieux dispersion objets résolue recherche grandes valeurs propres matrice variance covariance objets espace origine cadre supervisé notion classe pourra conduire rechercher espace projection renforce compacité classes distinguant nettement autres notamment analyse discriminante linéaire fisher maximise critère fisher rapport entre variance inter classes variance intra classes concentre seule projection objets travaux récents portent techniques apprentissage supervisé mettant critères locaux globaux proximité objets appartenant classe analyse posantes pertinentes relevant component analysis proposée hillel approche supervisée calcul matrice projection repose échantillon objets différentes classes appelé chunklets classification maximisation marge entre proches voisins large margin nearest neighbors proposée weinberger weinberger concentre voisinage chaque objet répertorie objets voisins rayon donné ensemble contraintes exprimant objets proches classes différentes doivent éloignés objets proches classe éloignement traduit marge minimum entre catégories objets compte problème programmation défini approches présentent limitations approche adaptée texte supervisé introduit contraintes ensemble objets chaque objet ensemble contraintes spécifiant objet classé après projection intégré approche utilise seule notion paires objets classe alors autres types contraintes reposant exemple éloignement rapprochement objets élargiraient assoupliraient contraintes possibles approches ainsi plupart approches existantes supposent outre toutes contraintes soient fixées avant phase réduction dimension serait appréciable cumuler simplicité approche apport contraintes voisinage approche proposant mécanisme intuitif itératif intégration connaissances domaine martin visualisation nombreux outils proposent projection mensions objets reposant diverses techniques outils permettant directement projections observer effets actions toutefois rares titre projection pursuit guided proposé permet déplacer espace projections offrant transitions douces entre projections successives lesquelles proches parcours espace projections guidé optimisation critère choisi utilisateur alterne phases réduction gradient toire outil permet toutefois définir contraintes locales encore moins définir interactivement cours processus exploration article plaçons cadre supervisé lequel objets associés étiquettes classe proposons utiliser types contraintes projection naturelles simples utilisation positionnement objets consiste borner supérieurement inférieurement distance entre objets positionnement objets rapport troisième consiste borner rapport distance distance objectif intégrer contraintes manière interactive utilisateur observe repré sentation données obtenue projection linéaire spécifier corrections attendues ajoutant contraintes exemple objets semblables utilisateur éloignés représentation ainsi possible obtenir nouvelle représentation laquelle autres contraintes pourront intégrées manière itérative contexte supervisé lequel perte information induite jection contrôlée utilisateur grâce ajout contraintes corriger positions relatives certains objets article organisé comme section définissons formellement types contraintes proposés section proposons mécanisme résolution contraintes dures reposant algorithme uzawa arrow section présentons ensemble tests concluons proposons différentes pistes section formalisation différents types contraintes ensemble observations objets décrits nombre dimensions suite noterons matrice observations ligne correspondant description notre objectif consiste fournir représentation objets dimensions notamment trois dimensions telle perte information réduite traduira recherche représentation variance inertie maximale principe contraintes spécifiées utilisateur possible satisfaites contraintes seront nommées contraintes utilisateur représentation obtenue projection nuage points espace dimensions déterminer vecteurs associés matrice projection telle lignes matrice correspondent projections observations notre espace dimension intégration interactive contraintes réduction dimensions projection contexte distance euclidienne entre après projection définie suite noterons matrice caractérisant distance cherche résoudre notre problème réduction dimension préservant mieux inertie contraintes introduites sections suivantes correction position objets premier correction utilisateur souhaite modifier distance entre objets distance souhaitée entre objets projetés après correction figure présentent souhaite rapprocher exprimer souhaite éloigner exprimer définir telles contraintes quadruplet contraintes correspondant premier deuxième ainsi contrainte associée écrit suite noterons ensemble contraintes correction position objets rapport deuxième correction souhaite modifier positionnement relatif objet rapport objets envisageables souhaite rapprocher façon avoir précise intensité rapprochement grâce variable notre contrainte devient souhaite éloigner façon avoir précise intensité éloignement grâce variable notre contrainte vient suite notons ensemble contraintes telle contrainte quintuplet contraintes correspondant premier deuxième ainsi contrainte associée écrit résolution pouvons résumer notre problème optimisation contraintes sinon martin toutes contraintes précédentes interviennent termes dépendant solution notre problème matrice comme précédemment écrire noter matrice suite noterons cette matrice ainsi contrairement contraintes chercher successivement vecteurs puisqu contraintes utilisateurs globales contraintes doivent respectées chaque dimension projection indépendamment espace projection devons traiter recherche vecteurs simultanément pouvons réécrire critère maximiser considérons premier temps lagrangien problème tenant compte contraintes orthogonalité vecteurs dérivons lagrangien rapport multipliant simplifier μiαixai matrice définie μiδixai dérivée partielle lagrangien écrit alors intégration interactive contraintes réduction dimensions notons passage lagrangien écrit utjxc annulation dérivées partielles donne autres termes solutions vecteurs propres matrice associée valeurs propres séquences notables abord ayant compte contrainte orthog onalité vecteurs solutions obtenues orthogonales pouvons ailleurs déduire fonction duale problème présente forme assez simple minll effet utilisant conditions optimalité précédentes utjxc contraintes imposant solution optimale finalement puisque problème consiste maximiser fonction duale solution timale correspond maximiser somme valeurs propres matrice correspondent grandes valeurs propres cette matrice néanmoins calculer valeurs propres faudrait connaître valeurs variables duales valeurs disposons cette raison proposons utiliser algorithme itératif uzawa permet obtenir approximations variables algorithme décrit section suivante oeuvre algorithme uzawa algorithme uzawa introduit arrow repose trouver point selle lagrangien approximations successives formulation classique algorithme considère problème optimisation suivant minxj fonctions désignent réalité familles fonctions lagrangien écrit martin algorithme uzawa consiste fixer valeurs initiales coefficients lagrange chercher optimum lagrangien corriger coefficients lagrange fonction cette solution processus itéré jusqu convergence convergence garantie fixer itérer paramètre calculer solution minxl mettre tester convergence application algorithme uzawa notre algorithme uzawa simplifie légèrement nécessaire proximer valeurs étant vecteurs propres valeurs propres découlent directement fixerons seulement valeurs coefficients notre coefficients initialisons coefficients première itération simple puisque ensuite contraintes satisfaites permettre corriger matrice algorithme uzawa contrainte satisfaite alors implique rendre matrice calculée tenant compte cette assez intuitive prenons exemple contrainte cette contrainte satisfaite calcul ajouter matrice constante revient augmenter poids distance critère optimiser contraintes contrainte satisfaite continuera augmenter poids résumé chaque itération suffit mettre matrice ajoutant matrices forme diagonaliser matrice cette méthode permet manipuler contraintes souples convergence atteinte avant contraintes soient toutes satisfaites permettant ainsi pénalisé contraintes difficiles satisfaire expérimentations cette méthode intégrée notre outil visualisation explorer3d martin exbrayat contraintes saisies interactivement sélection objets souris scène saisie bornes souhaitées positionnant curseur après recalcul projections objets déplacés nouvelle position utilisateur ainsi observer impact contraintes projection objets toutefois efficacité manipulation graphique nature difficile évaluer jectivement proposons protocole validation permettant mesurer possible atteindre représentation satisfaisante nombre limité contraintes intégration interactive contraintes réduction dimensions mesurer degré satisfaction proposons comparer représentation organisation référence estimer utilisateur jugera satis faisante organisation laquelle objets classe proches objets classes différentes éloignés pouvons utiliser critère fisher variance intra classsvariance inter classes critère maximise analyse discriminante conséquence utiliserons comme organisation référence celle produite application notre données noterons distance induite espace représentation obtenu restreint dimensions significatives utilisateur manipulant objets espace pouvoir utiliser cette approche utiliserons données quetées informations classes seront utilisées générer contraintes ailleurs simuler comportement utilisateur utiliserons processus automatique choix contraintes choisissant priorité correction déformations importantes rapport organisation proposée section suivante présente différents types contraintes générées génération contraintes rappelons notre processus repose projection initiale distance entre objets après projection implicitement considérons projection trois dimensions étudions types contraintes c2inf générer contraintes devons choisir objets ainsi valeur distance seuil puisque souhaite rapprocher projections objets choisir objets éloignés projection courante proches relativement distance couple objets représenté celui lequel rapport maximum distance seuil choisie alors c2sup esprit pourrons introduire contrainte choisissant couple minimise c3ald contraintes forme nécessaire choisir objets valeur seuil proposons générer contraintes objets soient classe autre classe étant rapprocher projeté projeté positionnant rapport choisissons objets maximisent seuil choisi plutôt fixer seuil fonction proposons fixer simplement ainsi contrainte produite objet proche objet objet choix objets critère précédemment dernier contraintes fixons seuil objectif séparer nettement classes expérimentations chaque porte exclusivement types traintes contraintes introduites suivant ordre priorité spécifié dessus première contrainte déterminée fonction distance initiale contraintes fournit seconde représentation contrainte induisant martin nouvelle distance permet construire seconde contrainte ainsi suite simule ainsi comportement utilisateur ajoute itérativement contraintes fonction représentation courante laquelle tient compte contraintes précédentes critère inertie considérons données artificiel doont objets décrits attributs attributs syntaxiques attributs catégorie attributs sémantiques attributs bruit intérêt données pouvoir choisir différentes sifications cibles syntaxe sémantique catégorie classe cible choisie classe thématique ainsi répartis classes thématiques disjointes critère qualité avons retenu variance inter classevariance totale valeur élevée classes séparées critère calculé représentation associée dimensions significatives laquelle correspond bonne organisation visuelle figure présente évolution critère suivant nombre contraintes ligne horizontale supérieure représente rapport variance inter classevariance totale obtenu valeur optimale rapport remarquer plupart types contraintes permet approcher rapport exception contraintes c2sup dernières tendent éloigner objets devraient permettre améliorer critère cependant espace origine variance totale grande objets moyenne éloignés seuils choisis rapport distances induites séquent seuils choisis vraisemblablement assez adaptés traintes redondant critère optimisé contraintes c2inf fournissant meilleurs résultats utiliserons suite tests nombre contraintes c2inf c3_lda c2sup evolution variance inter classevariance totale fonction nombre contraintes figure présente organisations visuelles obtenues respectivement contraintes c2inf générées automatiquement chaque classe caractérisée intégration interactive contraintes réduction dimensions contraintes contraintes contraintes contraintes projections obtenues nombre croissant contraintes forme couleur pouvons constater séparation classes progresse dement lorsque nombre contraintes augmente tests permettent montrer données trentaine contraintes rapport proche optimal correspond nombre contraintes acceptable elles doivent ajoutées utilisateur temps calcul résolution seconde contraintes avons mêmes tests données usuels apprentissage breast cancer glass yeast repository figure présente évolution critère contraintes c2inf confirme tendance observée données artificiel pouvoir présenter courbes graphique valeurs représen relatives valeur critère cadre courbes représentent évolution valeur proche correspond rapport variance inter classe variance intra classe proche celle obtenue grâce variation classification proposons second critère consistant mesurer classification correcte validation croisée direct objectif initial produit résultats intéressants contraintes représentation calculées partir ensemble ensemble apprentissage ensuite projeté espace représentation obtenu objets classés fonction proche voisin figure présente martin nombre contraintes breast glass yeast evolution variance inter classevariance totale fonction nombre contraintes résultats obtenus notre données artificiel exécutions cross validation proche voisins ligne horizontale supérieure correspond obtenu contraintes apportent amélioration classification exception contraintes point intéressant puisque contraintes népendent résultat étudions actuellement construction classifieur cette approche nombre contraintes c2inf c3_lda c2sup classification correcte fonction nombre contraintes conclusion perspectives avons présenté article méthode réduction dimension autorisant ajout itératif intuitif contraintes positionnement objets espace projec avons observé différents données ajout nombre restreint contraintes permet obtenir solution satisfaisante conséquence telle approche contribuer diffusion méthodes réduction dimension auprès utilisateurs disposant connaissances spécifiques techniques cette approche introduit concept ajout progressif contraintes lequel propose solution concept semble particulièrement prometteur puisqu limiter complexité système contraintes jacent intégration interactive contraintes réduction dimensions travaux inscrivent cadre projet graphem objectifs permettre paléographes obtenir organisation visuelle différents styles écritures étiquetés capables évaluer ressemblance validation cette approche cours pourrait conduire introduction nouveaux types contraintes références arrow hurwicz uzawa studies nonlinear programming stanford stanford university press hillel hertz shental weinshall learning mahalanobis metric equivalence constraints journal machine learning research langley selection relevant features examples machine learning artificial intelligence cabrera hurley grand projection pursuit journal computational graphical statistics fisher multiple measurements taxonomic problems annals genics guyon elisseeff introduction variable feature selection journal machine learning research martin exbrayat explorer3d orleans software explorer3d weinberger blitzer distance metric learning large margin nearest neighbor classification weinberger solvers efficient implementations distance metric learning cohen mccallum roweis volume international conference proceeding series summary dimensionality reduction methods proposed supervised pervised domains interesting aspect these methods ability visualization objects apparently close similar similarity notion corresponding either expert knowledge additional information class labels paper consider supervised context where information introduced interactive adding constraints specifying differences between visualization expert knowledge instance specify objects close alization similar expert conversely method considered derived principal component analysis where types constraints added present resolution method implemented software offer visualization interactively constraints visualize modifications induced these latter experiments performed synthetic usual datasets representation value quality criterion obtained limited number constraints