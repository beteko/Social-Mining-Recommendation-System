LOCAL GENERATOR diviser régner extraction traverses minimales hypergraphe Nidhal Jelassi Christine Largeron Sadok Yahia Université Monnet Saint Etienne France nidhal jelassi christine largeron etienne Faculté Sciences Tunis Tunis Tunisia nidhal jelassi sadok benyahia Résumé elles apportent solutions nombreuses applica tions traverses minimales hypergraphes cessent susciter intérêt communauté scientifique développement algorithmes calculer article présentons nouvelle approche optimisation extraction traverses minimales basée notions hypergraphe partiel traverses minimales locales selon stratégie diviser régner introduisons aussi nouvel algorithme appelé LOCAL GENERATOR calcul traverses minimales expérimentations effectuées divers données montré intérêt notre approche notamment hyper graphes ayant nombre transversalité élevé renfermant nombre important traverses minimales Hypergraphe traverse minimale nombre transversalité hyper graphe partiel Introduction réputé comme singulièrement difficile considéré comme complet blème calcul traverses minimales hypergraphe suscité intérêt communauté scientifique Berge Kavvadias Stavropoulos Hébert Murakami intérêt traverses minimales elles présentent solution nombreuses applications domaines variés cryptographie sémantique commerce Hagen principale difficulté extraction traverses minimales réside nombre exponentiel dernières quand hypergraphe entrée simple titre exemple considérons hypergraphe ensemble sommets ensemble hyperarêtes nombre traverses minimales tandis nombre sommets algorithmes extraction traverses minimales performants amélio rations algorithme Berge dernier traite hyperarêtes calculant chaque itération traverses minimales hypergraphe constitué hyper arêtes considérées objectif optimiser calcul traverses minimales notre proche repose cette usant paradigme diviser régner principe consiste LOCAL GENERATOR diviser régner extraction traverses minimales réduire nombre itérations partitionnant hypergraphe nombre précis hyper graphes partiels équivalent nombre transversalité hypergraphe entrée partir chaque hypergraphe partiel calculons alors appelons traverses minimales locales produit cartésien traverses minimales locales correspondra alors ensemble traverses seront soumises vérification minima considérées comme traverses minimales outre hypergraphe nombre transversalité partitionner hypergraphes éliminer minimalité ensembles sommets taille seront considérés comme traverses minimales aucun autre calcul supplémentaire article organisé comme section reviendrons différents rithmes proposés littérature calculer traverses minimales hypergraphe Ensuite section rappelons notions issues théorie graphes fouille données combinerons introduire notre approche basée notion traverse minimale locale hypergraphe partiel section présentera notre proche calcul traverses minimales travers algorithme original appelé LOCAL GENERATOR Enfin étude expérimentale hypergraphes aléatoires décrite section Berge premier proposer algorithme dédié extraction traverses minimales cette solution impraticable hypergraphes grande taille nécessite stockage traverses minimales temporaires calculées après chaque ajout nouvelle hyperarête effet algorithme Berge commence calculer ensemble traverses minimales première hyperarête avant mettre ajoutant incrémentalement autres hyperarêtes après Hagen Takata algorithme Berge présente complexité super polynomiale taille entrée sortie Récemment Boros prouvé temps exécution algorithme avait borne rieure exponentielle Plusieurs travaux ensuite tenté améliorer algorithme Berge parmi lesquels citer Bailey Kavvadias Stavropoulos approche performante celle derniers remédier principale algorithme pionner savoir consommation excessive mémoire proposé technique consistant combiner sommets appartiennent mêmes hyperarêtes chaque itération algorithme Alors algorithme Berge effectue parcours arbre traverses minimales Kavvadias proposent parcours profondeur hypergraphe entrée introduisant notion noeud généralisé représentent ensemble sommets appartenant mêmes hyperarêtes Enfin notons algorithme vérification minimalité effectuée travers notion noeud approprié assimilant problème dualisation fonctions booléennes monotones Khachiyan proposé algorithme incrémental extraction traverses nimales vérifiant formules mutuellement duales Cette approche reprise différentes manières Eiter Gootlob encore Boros Eiter Boros version dernier généralise principe Jelassi dualisation mesure formules traitent variables booléennes manipulent désormais aussi variables entières bornées Adoptant parcours largeur abord opérant niveau algorithme MTMINER Hébert contribution récents travaux extraction motifs commence générer tester candidats taille sommets avant générer chaque niveau nouveau candidat calculer ensemble hyperarêtes renferment aucun sommet cardinal candidat considéré comme traverse minimale vérifie propriété monotonie minimalité classes équivalence Outre cette stratégie élagage Hebert troduisent deuxième propriété selon laquelle aucun ensemble traverse minimale représenter traverse minimale algorithmes proposés récemment Murakami adopent stratégie profondeur basés respectivement principe branch bound celui reverse search auteurs exploitent aussi nouvelle technique vérifier minimalité traverses calculées moyen hyperarête tique Murakami Actuellement algorithmes considérés littérature comme efficaces aussi termes temps exécution consom mation mémoire notamment hypergraphes grande taille dernier algorithme dédié calcul traverses minimales celui appel structures données compressés diagramme décision binaire diagramme décision binaire supprimée structures respectivement représentation graphique fonctions booléennes variété spécialisées bases éparses expérimentation monté algorithme hautement compétitif algorithmes existants particulier algorithmes Enfin signalons autres travaux intéressés calcul traverses minimales approchées objectif produire ensemble traverses minimales façon chacune intersecte ensemble donné hyperarêtes Ruchkys Abreu Gemund Durand Quafafou Notre approche repose paradigme diviser régner extension algorithme Berge Alors dernier ainsi améliorations proposées traiter hyperarêtes article proposons traiter hyperarêtes ensemble ensemble hypergraphe entrée trouve alors partitionné nombre hypergraphes partiels nombre transversalité Chaque hypergraphe partiel renferme traverses minimales locales produit cartésien combiné minimalité permet retrouver ensemble traverses minimales choix nombre hypergraphes partiels arbitraire puisqu garantit traverses taille égale peuvent directement considérées comme traverses minimales Définitions notations cette section proposons présenter définitions notations liserons sections suivantes aboutir notre approche extraction binary decision diagram suppressed binary decision diagrams LOCAL GENERATOR diviser régner extraction traverses minimales traverses minimales basée notion traverse minimale locale avons combiné concepts théorie hypergraphes hypergraphe traverse nombre transversalité autres fouille données ensemble essentiel support nombre transversalité hypergraphe notion cette section autour laquelle bâtie notre approche Définition HYPERGRAPHE SIMPLE Berge ensemble éléments famille parties constitue hypergraphe simple éléments appelés sommets hyperarêtes hypergraphe suite considérerons hypergraphes simples Exemple figure illustre hypergraphe simple exemple hypergraphe matrice incidence correspondante Définition TRAVERSE MINIMALE NOMBRE TRANSVERSALITÉ Berge hypergraphe ensemble sommets ensemble hyperarêtes traverse désigne ensemble traverses définies traverse minimale notera ensemble traverses minimales définies nombre minimum sommets traverse appelé nombre transversalité hypergraphe désigne après Berge représente hyperarêtes hypergraphe transversal correspondant défini Exemple exemple illustratif figure ensemble hypergraphe Jelassi hypergraphe représenté matrice incidence définie relation binaire entre hyperarêtes sommets Cette matrice incidence associée hypergraphe définie sinon Table figure représente matrice incidence associée hypergraphe Définition SUPPORT ENSEMBLE SOMMETS hypergraphe ensemble définissons comme nombre hyperarêtes renfermant moins élément Ainsi ensemble comme disjonction sommets présence sommet suffit affirmer satisfait hyperarête donnée indépendamment autres sommets Définition ENSEMBLE ESSENTIEL SOMMETS Casali hypergraphe représente ensemble essentiel sommets seulement important souligner ensembles essentiels extraits partir matrice incidence vérifient propriété idéal ordre ensemble essentiel alors aussi ensemble essentiel notion traverse redéfinie biais support ensemble sommets notion ensemble essentiel selon proposition Proposition TRAVERSE MINIMALE ensemble sommets traverse minimale hypergraphe essentiel support nombre hyperarêtes autrement ensemble essentiel Preuve ensemble essentiel sommets conséquent après définition traverse minimalité tient essentialité effet puisque essentiel alors support strictement supérieur celui ensembles directs conséquent traverse minimale Définition UNION PRODUIT CARTÉSIEN Berge hypergraphes représente union résultat cette union hypergraphe ensemble sommets constitué ensemble hyperarêtes contient celles souci simplification aussi représente produit cartésien hypergraphes résultat hyper graphe ensemble sommets contient hypergraphes Quant ensemble hyperarêtes aussi produit cartésien autrement union couples possibles hyperarêtes premier élément appartient deuxième LOCAL GENERATOR diviser régner extraction traverses minimales Proposition Kavvadias Stavropoulos Soient hypergraphes simples traverses minimales hypergraphe couples minimaux inclusion générés produit cartésien ensembles traverses minimales Définition HYPERGRAPHE PARTIEL Berge hypergraphe partiel restriction hypergraphe ensemble perarêtes incluses sommets contenus hyperarêtes cadre article proposons étendre proposition considérant hypergraphes précisément partir hypergraphe nombre transversalité traverse minimale taille sommets numérotés ordre support décroissant proposons construire hypergraphes partiels remarquer hypergraphes partiels vérifient façon évidente propriétés suivantes traverses minimales hypergraphe partiel appelées traverses minimales locales ensemble Exemple hypergraphe exemple illustratif Figure nombre transversalité Sachant possède traverses minimales cardinalité minimale égale Prenons exemple Après avoir ordonné trois sommets composant selon ordre décroissant support obtenons trois hypergraphes partiels présentés Figure contient hyperarêtes auxquelles appartient sommet support contient celles auxquelles appartient support contient hyperarêtes restantes celles renferment sommet importe noter choisissant résultat reste Traverses minimales locales approche algorithme Optimiser calcul traverses minimales revient principalement réduire nombre candidats traités passe réduction taille hypergraphe entrée approche proposée article consiste construire partir hypergraphe entrée Jelassi hypergraphes partiels dérivés hypergraphes partiels correspond nombre transversalité calcul ensemble traverses minimales locales chaque hypergraphe partiel trouve amélioré puisque taille relativement petite rapport celle Ainsi proposons effectuer union hypergraphes partiels façon terminer ensemble traverses minimales partir uplets minimaux inclusion issus produits cartésien ensembles traverses minimales locales déter minées hypergraphes partiels présentons algorithme LOCAL GENERATOR dédié calcul traverses minimales essentiellement notions nombre transversalité hypergraphe partiel algorithme LOCAL GENERATOR algorithme LOCAL GENERATOR pseudo décrit Algorithme prend entrée matrice incidence correspondant hypergraphe entrée fournit sortie ensemble traverses minimales suppose sommets hypergraphe triés ordre lexicographique LOCAL GENERATOR démarre appel fonction GETMINTRANSVERSALITY pseudo décrit Algorithme Cette fonction recherche traverse minimale taille minimale égale nombre transversalité hypergraphe faire fonction parcourt sommets chaque élément GETMINTRANSVERSALITY supprime matrice incidence hyperarêtes contiennent fonction prend ensuite sommet différent ayant grand support réactualise matrice manière retirant hyperarêtes contenant dernier sommet traitement entre ligne ligne complètement toute hyperarête vecteur stocker sommets supprimés partir aboutir nombre sommets petit obtenu jusque fonction cardinalité stockée éléments copiés traitement répété chaque itération boucle ligne ensemble réinitialisé éléments éléments renferme final GETMINTRANSVERSA retourne suite sommets permis vider matrice incidence nombre minimum étapes Cette suite contenue représente traverse minimale taille nécessairement égale nombre transversalité hypergraphe entrée nombre transversalité calculé traverse minimale taille minimale renvoyée fonction GETMINTRANSVERSALITY algorithme LOCAL GENERATOR LOCAL GENERATOR diviser régner extraction traverses minimales Algorithme LOCAL GENERATOR Entrées matrice incidence associée Sorties ensemble traverses minimales début1 initialiser vecteur GETMINTRANSVERSALITY faire6 COMPUTE_TM chaque faire12 alors13 sinon15 alors16 retourner fin19 construit partir matrice incidence hypergraphes partiels appel fonction COMPUTE_TM construire leurs traverses minimales locales stockées ligne Cette fonction prend entrée matrice incidence associée hypergraphe partiel calcule niveaux ensemble traverses minimales locales définition boucle ligne LOCAL GENERATOR calculé ensembles traverses minimales locales produit cartésien ligne ensembles permet construire ensemble Chaque élément produit cartésien représente traverse reste vérifier minimalité intérêts notre décomposition hypergraphe initial éviter tester minimalité éléments cardi nalité égale effet derniers représentent traverses minimales puisqu exister traverse minimale taille inférieure nombre transversalité traverses taille supérieure LOCAL GENERATOR teste minimalité lignes suivant Proposition support candidat strictement supérieur maximum supports ensembles directs alors traverse minimale ajouté expérimentations avons utilisé algorithme MTMINER implémenter cette fonction Jelassi Algorithme GETMINTRANSVERSALITY Entrées Matrice incidence associée Sorties Vecteur contenant petite traverse minimale initialiser vecteur initialiser vecteur foreach clear while max11 then14 retourner Etude Expérimentale Différentes expérimentations menées données variés algorithme LOCAL GENERATOR premier données considérés cette étude expérimentale comporte hypergraphes générés partir bases données Accidents Connect alors deuxième contient hypergraphes aléatoires générés travers random hypergraph generator implementé Boros Boros fonction nombre sommets nombre hyperarêtes taille minimale hyperarêtes LOCAL GENERATOR Accidents1 Accidents2 10968 Connect 12800 Caractéristiques temps traitement hypergraphes Accidents Connect archive helsinki LOCAL GENERATOR diviser régner extraction traverses minimales tableau détaille caractéristiques chacun hypergraphes premier consi première seconde colonne correspond respectivement nombre sommets nombre hyperarêtes différents hypergraphes troisième colonne indique nombre transversalité alors quatrième colonne indique nombre traverses minimales renferme chaque hypergraphe trois hypergraphes traités trois algorithmes algorithme algorithme Kavvadias Stavropoulos notre algorithme LOCAL GENERATOR tableau récapitule aussi temps exécution chaque algorithme chaque hypergraphe algorithme étant rapide parmi proposés littérature aussi trois données LOCAL GENERATOR moins rapide alors parvient traiter hypergraphes Accidents2 Connect LOCAL GENERATOR temps traitement grands explique faible nombre transversalité hypergraphes varie entre comme montre tableau partitionnement hypergraphe entrée hypergraphes tiels permet optimiser convenablement calcul traverses minimales stratégie diviser régner pertinente lorsque taille petite traverse minimale hypergraphe donné petite Extraire directement traverses minimales pergraphe considéré avère judicieux passer traverses minimales locales LOCAL GENERATOR Caractéristiques temps traitement hypergraphes aléatoires Tableau récapitule caractéristiques différents hypergraphes avons générés données synthétiques générés fonction probabilités minimale maximale appartenance sommet hyperarêtes hypergraphe nombres sommets hyperarêtes élévés hypergraphes renferment néanmoins grand nombre traverses minimales varie entre nombre transversalité aussi élevé comparaison hypergraphes bleau favorise notre approche puisque hypergraphes entrée partitionnés nombre important petits hypergraphes partiels traverses minimales taille égale nombreuses épargnant ainsi notre algorithme minimalité temps exécution récapitulés tableau montrent algorithme LOCAL GENERATOR présente temps intéressants obtenus rithmes Notons algorithme Kavvadias Stavropoulos parvient extraire traverses minimales temps exécution supérieurs condes peuvent expliquer nombre élevé traverses minimales calculées écart entre LOCAL GENER varie entre secondes différence performances entre tableaux permet dresser profil types hypergraphes lesquels notre approche performante effet LOCAL GENERATOR présente temps intéressants Jelassi taille petites traverses minimales hypergraphe entrée élevée permet partitionner hypergraphe plusieurs hypergraphes partiels nombre traverses minimales important hypergraphes renfer traverses minimales LOCAL GENERATOR peine montrer efficace puisque nombre traverses minimales devient négligeable rapport nombre candidats traités testés Cette constatation confirmée tableau observant hypergraphes Quand nombre traverses minimales pratiquement doublé écart secondes passé entre algorithmes Conclusion article avons introduit nouvelle approche calcul traverses minimales hypergraphe Cette approche repose paradigme diviser régner partitionner hypergraphe entrée hypergraphes partiels fonction nombre transversalité calcul traverses minimales locales correspondantes hypergraphes partiels permet retrouver ensemble traverses minimales travers produit carté combiné minimalité permis introduire nouvel rithme LOCAL GENERATOR extraction traverses minimales étude expérimentale confirmé intérêt notre approche précis hypergrpahes renfermant priétés données résultats obtenus incitent ailleurs réfléchir place algorithme hybride adapte valeur nombre transversalité dernier petit alors évitera générer hypergraphes partiels ailleurs chercherons explorer espace recherche profondeur abord efficacité exploration niveaux montré Remerciements travail partiellement soutenu Etienne Metropole agglo etienne projet Utique 11G1417 Références Abreu Gemund approximate minimal hitting rithm application model based diagnosis Proceedings Eighth Symposium Abstraction Reformulation Approximation California Etats Bailey Manoukian Ramamohanarao algorithm computing pergraph transversals application mining emerging patterns Proceedings Third International Conference Mining Washington Berge Hypergraphs Combinatorics Finite North Holland Boros Elbassioni Gurvich Khachiyan efficient implementation quasi polynomial algorithm generating hypergraph transversals Proceedings LOCAL GENERATOR diviser régner extraction traverses minimales Annual European Symposium Algorithms Amsterdam Netherlands Boros Elbassioni Makino Berge multiplication monotone boolean dualization Proceedings international colloquium Automata Languages Programming ICALP Casali Cicchetti Lakhal Essential patterns perfect cover frequent patterns Proceedings International Conference DaWaK Copenhagen Mining border descriptions emerging patterns dataset pairs Knowledge Information Systems Durand Quafafou Approximation bordures motifs fréquents calcul traverses minimales approchées hypergraphes Actes 13ème Conférence Francophone Apprentissage Automatique Lille France appear Eiter Gottlob Makino results monotone dualization generating hypergraph transversals Journal Computing Hagen Algorithmic Computational Complexity Issues MONET disser tation Institut Informatik Friedrich Schiller Universität Hébert Bretto Crémilleux mining formalization improve hyper graph minimal transversal computation Fundamdamenta Informaticae Kavvadias Stavropoulos efficient algorithm transversal pergraph generation Journal Graph Algorithms Applications Murakami Efficient algorithms dualizing large scale hypergraphs Proceedings Meeting Algorithm Engineering Experiments ALENEX Orleans Ruchkys parallel approximation hitting algorithm expres analysis Proceedings Symposium Computer Architecture Performance Computing Vitoria Espirito Santo Brazil Takata worst analysis sequential method minimal hitting hypergraph Journal Discrete Mathematics Hypergraph transversal computation binary decision diagrams ceedings International Symposium Experimental Algorithms Italy Summary Generating minimal transversals hypergraph problem which known ticularly difficult large number applications theoretical applied Computer Science several works proposed literature solve paper propose novel approach optimize extraction minimal transversals which based partial hypergraph local minimal transversal notions according divide strategy introduce algorithm called LOCAL GENERATOR which computes ficiently minimal transversals experiments carried several types hypergraphs showed LOCAL GENERATOR obtains interesting performances