ponses coope ratives interrogation documents adrian tanasescu mohand hacid liris universite claude bernard novembre 69422 villeurbanne cedex france atanases mshacid bat710 lyon1 veloppement mantique conduit laboration standards repre sentation connaissances comme standards devenu recommandation interpre table homme chine encodage triplets graphes tiquete fourni services interrogation raisonnement plupart concernant interrogation documents concentre usage techniques issues programmation logique tensions portons nouveau regard techniques terrogation raisonnement documents montrons mantique termes order sorted features compatible repre sentation isomorphique triplets propositions cette transformation permet ordonnancement ressources ontologies travers meilleurs canismes ponses approximation recouvrement interrogations documents approximation interrogation introduction reque utilisateurs documents peuvent retourner ponses satisfaisantes variables reque toutes instancie nombreuses situations plusieurs documents peuvent contribuer livrer ponse exacte approximative reque conside exemple suivant supposons notre documents constitue documents finis graphes tiquete figure conside aussi reque suivante exprime forme terme cette ismis05 editor affiliation canisme classique cette reque cherchant homomorphisme chacun documents comme constater facilement documents fournir ponse comple reque anmoins combinaison certaines parties documents signale figure pointille peuvent ensemble livrer ponse comple ponses coope ratives interrogation documents tudions approche capable fournir genre ponse combinant diffe rentes parties documents proposons suite papier cadre logique fournir ponses coope ratives reque documents premier temps chaque document transforme terme termes peuvent comme conjonction contraintes ainsi proposons algorithme propagation contraintes valuer reque documents algorithme permet assembler fragments ponses pouvant provenir documents diffe rents ismis05 proceedings intelligent system author keywords fqas05 editor affiliation exemple documents interrogation documents lieux triplets peuvent comme quivalent faits langage logique approches logique concernant gestion interrogation information peuvent appliquer facilement point sujet interrogation documents travers langage logique traite ainsi utilisation logique kifer propose decker propositions traduites termes logique interrogations peuvent formule termes cette premie approche prend compte constructeurs propositions ressources anonymes limitations tudie keifer kifer proposent extension logique permet repre sentation ressources anonymes propositions sintek decker triple sente comme langage reque rence transformation principal interrogation ressources manie clarative triple langage extensions syntaxiques logique repre sentation ressources propositions autre modules extensions mantiques comme schema peuvent imple mente directement triple interaction raisonneurs externes traduisant propositions logiques triple permet interrogation donne issues triple peuvent repre sente permettant ainsi redistribution karvounarakis karvounarakis proposent langage interro gation nomme langage fonctionnel adrian tanasescu mohand hacid formel graphes tiquete permettant interpre tation descriptions ressources surimpose travers plusieurs adapte fonctionnalite langages interrogation semistructure particularite surtout permet interrogation uniforme descriptions ressources broekstra broekstra veloppe architecture ckage interrogation documents nomme sesame cette dernie permet stockage persistant donne fournit thodes informations travers modules exportation interrogation liminaires avant velopper tails techniques notre approche important rappeler vement bases traits ordonne termes donne langage assertionnel exprimer proposi tions vocabulaires formels particulie rement facilitant ainsi utilisation cense fournir langages assertionnels complexes ayant similaire donne repre sente comme triplets comme graphes tiquete comme documents repre sentations conside comme quivalentes document ensemble finit propositions forme dicat sujet objet dicat proprie sujet ressource objet ressource litte ressource entite conceptuelle lassila exemple syntax repre sente concept abstrait ressources repre sente berners peuvent aussi anonymes manie repre senter mantique consiste donner traduction langage logique formel ayant attache cette approche mantique axiomatique utilise nombreuses versions alternatives langage logique cible marchiori saarela mcguinness axiomatique mantique sente avantages calcul machine lisible choue conformer mantique orique dernier conside comme normatif traits ordonne termes termes propose comme structures enregistrements flexibles programmation logique anmoins termes utilisation tendue podelski sasaki holsheimer podelski comme termes repre sentent ralisation termes premier ordre comme derniers structures donne dominantes utilise langages programmation ponses coope ratives interrogation documents symboliques termes flexibles offrent alternative ressante manie simple crire terme travers exemple voila comment terme utilise crire objet repre sentant personne rique person first string string spouse person spouse simple personne parties first litte personne cette dernie personne premie personne question cette expression ressemble structure enregistrement comme enregis trement champs symboles gauche appele traits attributs contrairement enregistrement conventionnels termes peuvent engendrer informations champs attache types person string types peuvent repre senter indiffe remment valeurs individuelles ensembles valeurs person string types partiellement ordonne refle inclusion ensembles employee person employe personnes enfin partage structure exprime variables partage circulaire termes repre sente logique structures enregistrements logique cette dernie forme primitive langage contraintes appele logic inheritance functions equations damentale logique possibilite tablir relation subsomption entre termes importance cette logique notre approche termes peuvent aussi comme conjonction contraintes ainsi terme sente demment directement ensemble contraintes suivant string first person spouse person person spouse person string anmoins traduction directe termes contraintes amener perte informations fausses informations utilisation types notent ensembles valeurs exemple ensemble contraintes dessus faussement conclure toutes personnes viter gendre information supple mentaire fausse types repre sentant ensemble valeurs seront individualise introduisant variables notre terme devien ainsi adrian tanasescu mohand hacid person first string string spouse person spouse traduit ensemble contraintes suivant string first spouse spouse person string possibilite traduire termes contraintes permettra construire algorithme capable fournir ponses coope ratives reque formule documents section expression propositions termes cette section montrons travers quelques exemples comment propo sitions peuvent traduites forme termes structure termes podelski fournit repre sentation quate objets plexes ralisent termes conventionnels utilise programmation logique structures attribue ordonne grace ordre types ressons aussi propositions utilisant ressources anonymes listes propositions exemples traitons inspire propositions simples ressources nomme proposition suivante lassila creator resource lassila repre sente comme triplet lassila creator lassila traduite terme lassila creator lassila propositions contenant ressources anonymes ressources anonymes conside comme uniques supposons aucun ressources anonymes trouvant termes diffe rents ayant attributs valeurs pourront conside comme ressource anmoins ressource anonyme pouvoir appara plusieurs rieur terme traduction propositions termes noterons ressources anonymes diffe rencier ressources anonymes distinctes rieur ponses coope ratives interrogation documents terme utiliserons chiffres suite symbole voici exemple individual whose lassila email lassila creator traduite terme lassila creator lassila email lassila containers collections propositions containers collections utilise indiquer ensemble objets logique triplets dicat sujet objet containers ensembles ouverts ressources tandis collections ensembles ferme elles contiennent membres ensemble containers clinent trois gories ensemble simple ensemble lequel ordre apparition importance ensemble valeurs alterna tives quivalentes propose cette clinaison containers aucune mantique attache types containers sentons ensembles extension logique montrons comment extensions respectent principales concernant subsomption ralisation quatre constructeurs avons types globaux intro comme extension logique termes permet exprimer containers collections types ainsi finissons quatre types suivants termes deviennent alors serve peuvent utilise types construction termes expression containers collections types title modern information retrieval authors editor press baeza yates ribeiro exemple ensemble auteurs livre regroupe container appartenance expression syntaxique trois autres ensembles manie identique interpre tation mantique quatre types faite plication charge calculs termes allons finir subsomption appliqueront quatre types subsomption entre containers collections subsomption entre containers soitent adrian tanasescu mohand hacid sachant collections aussi ensembles ordonne appliqueront subsomption subsomption entre containers subsomption entre containers alors interrogation documents ponses coope ratives formalisme repre sentation donne applications travaux outils explorant relation entre monde repre sentation connaissance programmation logique existent fikes mcguinness marchiori saarela alferes notre objectif continuer effort investiguer services raisonne peuvent employe propositions comme avons montre documents peuvent repre sente forme termes notre intention velopper thodologie permettant fournir ponses coope ratives interrogation documents jusqu valuation reque documents conside documents individuellement cherche homomorphisme reque chaque document proposons canisme recherche permettant ponse exacte approximative combinant propositions trouvent diffe rents documents algorithme ponses coope ratives proce recherche conside termes ainsi reque compose forme contraintes recherche consiste tapes propagation laquelle cherche satisfaire contraintes reque valuation laquelle rifie ponses trouve existent ellement documents ensemble faits sultant composition ensemble termes exprime forme labeln ensemble contraintes reque exprime formes ponses coope ratives interrogation documents labeln labeln labeln variables contraintes finit ensemble permettant place gorithme recherche propagation labeln labeln alors labeln labeln alors labeln labelm labelm labeln labeln alors contraintes seule variable solues priorite utilise ordre cifie dessus satisfait contrainte suivantes ignore prochaine contrainte traite utilisent ordre types traits permettre fournir ponses approximatives reque valuation labeln labeln labelm labeln labeln valuation avons ponse exacte reque contraire agira ponse partielle ensemble contiendra parties reque lesquelles aucune ponse trouve exemple conside termes suivante obtenue traduction ments ismis proceedings author keywords intelligent systems proceedings author editor affiliation proceedings author affiliation lyon2 adrian tanasescu mohand hacid termes ensuite traduits ensemble contraintes faits nomme formulons reque suivante ismis editor affiliation traduite ensemble contraintes objectifs ismis ismis editor affiliation disposons aussi ordre attributs traits author editor voici simulation cution algorithme commenc phase pagation contrainte reque ismis trouve ponse ismis proceedings proceedings ismis proceedings ismis editor affiliation contrainte reque ismis editor trouve ponse trouve ponse trouve ponse ismis author ismis proceedings ismis editor affiliation contrainte reque affiliation trouve ponse affiliation ismis proceedings ismis editor affiliation exemple phase validation trouve toutes contraintes faits indique ponse notre reque comple cette ponse construite phase validation conside contraintes successivement enleve conclusion papier ressons proble interrogation complexe documents nouveaute notre approche consiste possibilite fournir ponses coope ratives reque ensemble documents faire avons traduit documents traits ordonne sommes servis proprie derniers permettre approximation ponses reque papier sente vement notre travail cours fournir mantique comple langage logique permettrait interrogations mantiques diffe rents types donne complexes pouvant crites travaux futurs traiterons proprie algorithme propose resserons optimisation ponses coope ratives interrogation documents rences hassan roger login logic programming language built inheritance journal logic programming podelski towards meaning maluszynski wirsing editors proceedings international symposium programming language implementation logic programming berlin podelski hassan andreas podelski logic programming functions order sorted feature terms proceedings third workshop extensions logic programming bologna italy february hassan yutaka sasaki axiomatic approach feature generalization proceedings european conference chine learning freiburg germany pages springer verlag lecture notes puter science september julio alferes carlos viegas damasio moniz pereira mantic logic programming tools proceedings international workshop principles practice semantic reasoning ppswr mumbai india pages springer verlag lecture notes computer science december berners fielding masinter uniform resource identifiers generic syntax notes rfc2396 august broekstra arjohn kampman frank harmelen sesame chitecture storing querying schema proceedings first international semantic conference sardinia italy springer verlag lecture notes computer science decker brickley saarela angele query inference service query languages workshop december fikes mcguinness axiomatic semantics schema technical report marcel holsheimer hassan database interface complex objects proceedings eleventh international conference logic programming santa margherita ligure italy karvounarakis magkanaraki alexaki christophides plexousakis scholl tolle querying semantic computer networks systems journal michael kifer georg lausen james logical foundations object oriented frame based languages journal marchiori saarela query logic metalog query language workshop tands metalog adrian tanasescu mohand hacid mcguinness fikes hendler stein ontology language semantic intelligent systems joachim knowledge transformation semantic volume frontiers artificial intelligence applications press primer primer 20040210 sintek decker triple query inference transforma language deductive databases knowledge management october guizhen michael kifer reasoning about anonymous resources statements semantic journal semantics summary interest representing semantic generated standards expressing knowledge those standards become recommendation designed human machine readable encoding triples labeled graphs provided querying reasoning services querying concentrated logic programming evaluation techniques extensions problem querying reasoning statements order sorted feature terms apply problem because tailored efficiency their semantics compatible isomorphic representation triples statements transformation allows compute ordering resources provide better answering mechanisms querying