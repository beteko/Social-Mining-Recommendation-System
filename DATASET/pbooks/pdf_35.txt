Interrogation données structurellement hétérogènes bases données orientées documents Hamdi Hamadou Faiza Ghozzi André Péninou Olivier Teste Université Toulouse Route Narbonne 31062 Toulouse France hamdi hamadou peninou teste Université ISIMS MIRACL Sakiet Ezzit Tunisie faiza ghozzi isims Résumé systèmes orientés documents permettent stocker schéma Cette flexibilité génère potentielle rogénéité documents complexifie interrogation entité décrite selon schémas différents article présente approche interrogation transparente systèmes orientés documents proposons générer dictionnaire façon automatique insertion documents associe chaque attribut chemins permettant accéder dictionnaire permet réécrire requête utilisateur partir jonctions chemins retrouver documents quelles soient leurs structures expérimentations montrent coûts exécution quête réécrite largement acceptables comparés requête homogènes Introduction systèmes stockage NoSQL connu important dévelop pement dernières années raison capacité gérer manière flexible efficace importantes masses données hétérogènes Floratou Stonebraker approches orientées documents couramment utilisées comme exemple systèmes MongoDB Chodorow Dirolf CouchDB Anderson systèmes reposent principe schemaless consistant considérer schéma unique ensemble données appelé collection documents Chevalier Cette flexibilité structuration données complexifie interrogation utilisateurs doivent connaître différents schémas données manipulées Chouder article traite problématique interrogation données hétérogènes systèmes NoSQL orientés documents existe différents types hétérogénéités Shvaiko Euzenat hétérogénéité structurelle désigne problème structures variables entre documents hétérogénéité Interrogation collections structurellement hétérogènes syntaxique considère différents attributs peuvent désigner concept tandis térogénéité sémantique considère attribut correspondre différents concepts travaux développés article focalisent hétérogénéité structurelle documents permettre interrogation données structurellement hétérogènes systèmes NoSQL approches essentiellement suivies données transformées rendues homogènes schéma unique Tahara données conservées manière hétérogène différents schémas possibles inférés permettre interrogation première approche avantage liter interrogation utilisateur manipule ainsi schéma unique Cependant cette approche nécessite traitements pouvant avérer coûteux difficilement compatible environnements dynamiques seconde approche consiste inférer différents schémas permettre interrogation variabilité schémas construction requêtes complexe nécessite manipulation différents schémas travaux placent cette deuxième approche rendant transparente utilisateur hétérogé néité structurelle documents section expose détail problème hétérogénéité abordé article propose section donnons formalisation proposition Enfin section présente résultats premières expérimentations Problème interrogation documents structurellement hétérogènes systèmes orientés documents données représentées utilisant tions JavaScript Object Notation document considéré comme paire valeur identifiant unique valeur représentée format Bourhis Exemple quatre documents format Considérons collection constituée documents structurelle hétérogènes présentés figure Chaque document correspond paire valeur adoptons notation accéder valeur document accédons parties composant valeur expression navigationnelle basée attributs Ainsi expressions suivantes possibles movie_title furious language English movie_title furious versions language English language French Hamadou versions language French considérons uniquement collections structurellement hétérogènes considérant attribut situé différentes positions différents schémas exemple entre présent exemple details présent Cette hétérogénéité structurelle complexifie interrogation collection documents particulier lorsque cette collection comporte nombreux documents structurés grande variabilité obtenir résultat correct utilisateur écrire autant quêtes versions schémas concernées formulation interrogation Considérons souhaite obtenir liste titres années parution films basant seule connaissance schéma document formuler requête attributs movie_title permet obtenir movie_title furious movie_title Hoobit movie_title Despicable movie_title itanic résultat incorrect raison hétérogénéité structurelle attribut imbriqué différentes manières documents autre formulation faite attributs movie_title details Cette requête produit résultat comportant incorrections obtenir résultat complet nécessaire construire requête complexe tenant compte différents schémas documents proposons article approche permettant utilisateur exprimer plement requête partir attributs avoir tenir compte différentes positions structurelles attributs conservant structures originelles documents quête permet obtenir résultat complet manière transparente rapport hétéro généité structurelle collection documents avoir connaître manipuler exhaustivité différents schémas cette section intéressons langages requêtes données structurées ainsi systèmes stockage existants lesquels analysons pacité prendre compte hétérogénéité structurelle données Beaucoup travaux étudié interrogation documents structurés documents XQuery langage requête standardisé propose syntaxe interroger documents couvre fonctionnalités offertes interrogation agrégations fermeture XQuery reprend langage XPath Clark localiser naviguer parmi différents nœuds document langages spécifient comment traiter grandes collections documents mises œuvre supportent échelles volumes importantes cadre bases données NoSQL différentes propositions langages interrogation faites particulier interroger documents Citons Florescu Fourny proposent couche prenant charge requêtes utilisateurs données structurées structurées utilisateur construire requêtes nouveaux langages proches XQuery Interrogation collections structurellement hétérogènes nécessitent parfois paramétrages processeurs requêtes répondre traitements particuliers données bilan langages systèmes offrent outils interroger importe quelles données demandent utilisateur connaître schémas données offrent facilités interroger facilement documents hétérogènes autre approche interrogation consiste modifier structure stockage interroger données langage requête orienté document exemple Tahara proposent système Sinew aplatit données charge tionnel tables Beyer propose nouveau langage script interroger simultanément documents stockés magasins différents requêtes décou parallélisées basant paradigme reduce Thusoo coûts évaluation requêtes utilisateur connaître structure ments interroger correctement MongoDB systèmes NoSQL orientés documents utilisés apportant solutions efficaces passage échelle scalability distribution version standard langage interrogation données propre MongoDB permet interroger données structurellement hétérogènes façon transparente arriver utilisateur construire fonctions spécifiques prenant charge différentes structures possibles données intégrer requêtes parcours schémas possibles difficile complexe interrogation sensible intégration nouvelles données nouveaux schémas Herrero traitent problématique découverte intégration nouveaux schémas proposent ramener documents schéma skeleton aider utilisateur découverte attributs schémas collection Herrero proposent contraire extraire séparément schémas présents collection aider utilisateur connaître schémas attributs présents collection cuments elles permettent découvrir schémas données approches laissent utilisateur responsabilité prendre charge hétérogénéité données inter rogation Interrogation documents hétérogènes Notre approche permet interrogation collections documents structurel lement hétérogènes systèmes NoSQL utilisateur exprime requête basant connaissance nature données traiter autre connais sance moins schéma donnée existant collection devoir connaître schémas différents chemins mènent différents attributs Cette requête réécrite manière transparente utilisateur prendre compte térogénéité documents schémas multiples collection Modélisation données schémas multiples Définition Collection collection notée ensemble documents Hamadou document considéré comme paire valeur valeur forme Définition Document document paire valeur identifiant document valeur document valeur cument notée également valeur objet chaque appelé attribut chaque valeur atomique numérique chaîne booléenne nulle complexe objet tableau définis après valeur atomique formée comme ensemble valeurs numériques entiers réels chaîne caractères formée ensemble caractères UnicodeA ensemble booléens false valeur nulle valeur complexe formée comme valeur objet valeurs chaînes caractères appelés attributs valeur tableau chaque valeurs objets tableaux valeurs peuvent également leurs complexes permettant ainsi plusieurs niveaux imbrications Lorsqu imbrication présente adoptons notation chemin navigation imbrications tableaux introduisons chemin entier correspondant indice Bourhis Hidders section Définition Schéma schéma extrait valeur défini attribut apparaissant valeur document importe accès attribut feuille feuille imbrications valeurs complexes Bourhis formellement rappelant valeur schéma défini atomique objet schéma valeur tableau schéma valeur tableau Exemple Considérons documents schéma constitué ensembles attributs suivants movie_title language movie_title details details details language document attribut details contient valeur complexe formant chemins accès details details language schéma Définition Schéma collection schéma collection défini Interrogation collections structurellement hétérogènes Définition Dictionnaire dictionnaire collection défini chemin appartenant schéma moins document collection ensemble chemins accès Notons suite article langage nommerons chemins attributs parlerons chemins dictionnaire attributs diction naire Exemple dictionnaire collection décrite figure défini dessous Chaque entrée permet accéder différents chemins possibles positionnement details versions versions indique entrée correspond positions possibles documents movie_title movie_title details versions versions language language details language versions language versions language details details details details details language details language versions versions versions version versions versions versions language versions language versions versions versions versions versions language versions language Interrogation données schémas multiples interrogation collection documents opère composition opérateurs unaires article limitons interrogation opérations projection lection pouvant exprimer commandes aggregate MongoDB Noyau minimum fermé opérateurs élémentaires définissons noyau minimum fermé opérateurs élémentaires collection documents interrogée Coutla collection documents résultante Définition Projection opérateur projection réduit schéma documents ensemble attributs ensemble attributs schémas collection Définition Sélection opérateur sélection permet restreindre collection documents seuls documents satisfaisant prédicat sélection prédicat condition sélection prédicat simple expression attribut opérateur comparaison Hamadou valeur prédicats peuvent combiner opérandes formant prédicat complexe Normp forme conjonctive normale prédicat notée comme Normp Définition Requête requête construite composition opérateurs Exemple Considérons collection documents figure σlanguage English movie_title furious language English πmovie_title movie_title furious movie_title itanic movie_title Despicable movie_title Hobbit πmovie_title σlangugage English movie_title furious requête construite composition remarquer requêtes retournent ensemble documents possibles attribut language utilisé prédicat sélection structurellement hétérogène entre différents documents collection interrogée manière analogue projection attribut requête également perturbée hétérogénéité permettant obtenir valeur attendue documents attribut projeté ignoré Extension requêtes collections hétérogènes hétérogénéité structurelle documents complexifie interrogation gérée nativement opérateurs plupart systèmes NoSQL exemple MongoDB reconnaît manière automatique différentes structures documents collection attributs positionnés manière compatible requête ignorés Notre approche consiste faciliter interrogation utilisateurs reformulation automatique requêtes processus exploite dictionnaire données reformuler requête prenant compte multiples schémas documents collection interro algorithme décrit processus extension automatique requête utilisateur projection liste attributs projetés étendue union chemins accès4k chaque attribut liste projetée chemins obtenus partir dictionnaire données sélection prédicat sélection forme normale conjonctive étendu ensemble disjonctions formées partir chemins accès chaque attribut Interrogation collections structurellement hétérogènes Algorithme Extension automatique requête utilisateur entrée sortie identité foreach switch projection πAext σNormp sélection σPext endsw Exemple Considérons requête πmovie_title σlangugage English exemple précédent moteur réécriture requêtes partir entrées dictionnaire suivantes movie_title movie_title details versions versions language language details language versions language versions language appliquant algorithme permet obtenir requête étendue suivante πmovie_title details versions versions σlanguage English versions language English details language English versions language English résultat movie_title furious movie_title Titanic details movie_title Despicable movie_title Hobbit versions Expérimentations avons implémenté outil appelé mettre oeuvre algorithme réécritures requêtes proposé article ainsi construction dictionnaire défini procède création dictionnaire manière automatique moment sertion données stocke collection MongoDB effectue aussi Notre outil prend entrée requête utilisateur procède réécriture utilisant dictionnaire extraire différents chemins possibles chaque prédicat lance exécution MongoDB Hamadou Protocole expérimental ensemble expériences avons utilisé système orienté document stocker exécuter requêtes avons choisi travailler collec tions documents synthétisés documents construits partir collection acces sible internet décrit films proposés composés attributs racine structure plate documents homogènes caractéristiques collections générées résumées tableau cuments collection générés aléatoirement ordre particulier documents schéma aléatoirement répartis collection groupes attributs chaque schéma généré schéma groupe forme groupe_xy référence numéro groupe référence schéma numérotés alphabéti quement Exemple groupe groupe_1E référence premier groupe cinquième schéma généré schémas différents chemin commun veaux intermédiaires imbrication générons attributs intermédiaires entre groupe attributs contiennent valeurs Exemple attribut movie_title partie premier groupe schéma document généré chemin attribut groupe_1B level0 movie_title Description requêtes requêtes contiennent forme conjonctive prédicats alors requêtes contiennent forme disjonctive prédicats σdirector_name groos 100000 σdirector_name gross 100000 duration title_year σdirector_name groos 100000 duration title_year language English imdb_score cast_total_facebook_likes Paramètre Valeur Nombre schémas collection Nombre arbres arbitraires schéma Profondeurs arbres Présence chaque schéma collection Nombre attributs schéma Aléatoire Nombre attributs arbres Aléatoire Tailles collections utilisées Nombre documents collections Paramètres génération collection Évaluation module réécriture requêtes première évaluation porte temps exécution requête posée collection homogène requête réécrite collection hétérogène requêtes tournant nombre résultats objectif étudier additionnel notre solution rapport simple exécution requête donnée homogène comparerons aussi interrogation collection hétérogène réécriture somme requêtes individuelles chaque schéma omdbapi Interrogation collections structurellement hétérogènes évaluer sélection proposons exécuter requêtes longueurs variables présentées avant projection portera attributs avons utilisé mesures suivantes chacune requêtes QRewritten temps exécution requête réécrite notre système collection hétérogène QSeparated somme temps exécution requêtes collection hétérogène requêtes réécriture schémas possibles QBase temps exécution requête collection homogène Notons requêtes conjonctives retournent maximum cuments tandis requêtes disjonctives retournent minimum documents Évaluations requêtes réécrite résultats présentés figure montrent notre solution dépasse jamais temps exécution moyenne requête disjonctive requêtes conjonctive durée requête données homogènes alors réécriture ajoute disjonctions critère sélection schémas possibles attributs collection hétérogènes imbriqués différents niveaux peuvent atteindre niveaux sixième schéma évaluation montrent aussi meilleures performances rapport requêtes schémas séparés jusqu rapide autres évaluation seront mener expériences montrent croissance temps exécution requête réécrite linéaire rapport taille collection temps exécution requête collection homogène opposé croissance exponentielle observée requêtes cumulées Évaluation module création dictionnaire tableau présente temps nécessaire création dictionnaire schémas collections temps nécessaire création tionnaire influencé nettement nombre schémas collection Notons cependant opération réalisée seule collection lorsque celle Hamadou existe alimentation continue collection dictionnaire mesure arrivée données documents avons aussi étudier effet forte hétérogénéité nombre important schémas testant jusqu schémas collection dictionnaire généré chaque attribut schémas diffé rents avons aussi évalué temps réécriture requête avons temps réécriture intéressant moins secondes Enfin taille diction naire jamais dépassé restreint collections hétérogénéité traitées Nombre schémas Temps minutes Taille généré Temps création dictionnaire selon nombre schémas Conclusion hétérogénéité systèmes orientés documents constitue majeur ploitation données proposons approche facilitant interrogation documents structures hétérogènes simplifiant écriture requêtes Notre approche repose construction dictionnaire données indexe schémas collection cuments exploitée réécrire manière transparente requêtes utilisateurs requêtes réécrites permettent obtenir facilement ensemble documents répondants requête initiale perspectives travaux allons continuer validation algorithme écriture requêtes validant autres systèmes orientés documents couch étudions passage échelle collections réelles grande taille menons expériences environnements distribués terme travaillerons extension langage requêtes opérateurs agrégation jointure ainsi support hétérogénéités sémantique syntaxique Références Anderson Lehnardt Slater CouchDB Definitive Guide Relax Reilly Media Beyer Ercegovac Gemulla Balmin Eltabakh Kanne Ozcan Shekita scripting language large scale semistructured analysis Proceedings Conference Bourhis Reutter Suárez Vrgoc model query languages schema specification Proceedings SIGMOD SIGACT SIGAI Symposium Principles Database Systems Chevalier Malki Kopliku Teste Tournier Implementation multidimensional databases document oriented nosql DAWAk Interrogation collections structurellement hétérogènes Chodorow Dirolf Mongodb definitive guide reilly media Chouder Rizzi Chalal Enabling service document stores Workshops Clark DeRose language xpath version Floratou Teletia DeWitt Patel Zhang elephants handle nosql onslaught Proceedings Endowment Florescu Fourny Jsoniq history query language internet computing Herrero Abelló Romero Nosql design analytical workloads variability matters Conceptual Modeling International Conference Japan November Proceedings Springer Hidders Paredaens Bussche logic Logical foundations querying Proceedings SIGMOD SIGACT SIGAI Symposium Principles Database Systems Jagadish Schema xquery Proceedings Thirtieth ternational conference large bases Volume Endowment Papakonstantinou Vernoux query language Configu rable unifying structured arXiv preprint arXiv Shvaiko Euzenat survey schema based matching approaches Journal semantics Stonebraker opportunities Communications Tahara Diamond Abadi Sinew system multi structured SIGMOD Thusoo Sarma Chakka Anthony Wyckoff warehousing solution reduce framework Proceedings Endowment Zhang Hassanzadeh Wangz Schema management document stores Proceedings Endowment Summary Documents oriented store document whatever schema facility generates potential structural heterogeneity documents which makes difficult query because entity described according different schemas paper presents approach transparent querying documents oriented structural heterogeneity purpose suggest building dictionary which associates every field partial schemas paths allowing reach dictionary rewrite query disjunctions partial schemas order documents whatever their schema experiments acceptable costs execution rewritten query compared equivalent query homogeneous schemas