articles assemblage pdfgestion sémantique droits accès contenu ontologie michel buffa catherine faron zucker kolomoyskaya université sophia antipolis route colles 06903 sophia antipolis cedex michel buffa catherine faron zucker unice résumé article proposons approche gestion droits accès systèmes gestion contenu reposent modèles techniques sémantique présentons ontologie consiste ensemble classes propriétés permettant annoter ressources contrôler accès règles inférence lisant stratégie gestion droits mettre œuvre appliquées annotations ressources règles permettent gérer ressources selon stratégie donnée cette modélisation garantit ainsi adaptabilité logie différentes stratégies gestion droits accès illustrons lisation ontologie documents projet isicil produits sémantique sweetwiki montrons comment documents annotés quelles règles mises œuvre quelles requêtes mettent contrôle accès documents introduction sécurité protection contrôle accès représentent enjeu majeur systèmes gestion contenu cette problématique centrale sites collaboratifs réseaux sociaux principe édition collaborative documents notion partage posent question définition droits accès contrôle accès ressources défis lancés sémantique article intéressons systèmes gestion contenu reposent serveurs sémantiques proposons approche gestion droits accès ressources fondée modèles techniques sémantique préci sément présentons ontologie dédiée représentation droits accès donnés document certains utilisateurs classes utilisateurs avons baptisé cette tologie acronyme signifiant access management ontology consiste ensemble classes propriétés permettant annoter ressources gérer accès règles inférence modélisant stratégie policy anglais contrôle droits mettre œuvre appliquées annotations ressources gestion sémantique droits accès contenu règles permettent contrôler accès ressources selon stratégie donnée cette modélisation déclarative forme règles assure adaptation facile tologie différentes stratégies contrôle droits accès dispense ainsi modifier annotations documents changement stratégie cadre projet isicil utilisons ontologie gérer accès ressources partagées réseau veilleurs entreprise documents produits outils gestion contenu wikis blogs documents statiques certains issus opérations scraping bookmarks enjeux projet orienté autour techniques sémantique concerne gestion accès ressources partagées réseau social veilleurs entreprise parmi documents produits veilleurs figurent collaboratif sémantique sweetwiki développons buffa servira illustrer article utilisation sweetwiki intègre technologies sémantique améliorer structure recherche navigation précisément associe pages annotations rendent contenu pages exploitable moteur sémantique corese corby présentons ontologie partie montrons partie utilisation faite sweetwiki faisant mettons lumière facilité adaptation différentes stratégies contrôle section dédiée positionnement notre approche rapport travaux existants gestion accès ressources systèmes gestion contenu rapport modèles sémantiques ontologie système fichiers comme système gestion contenu rôles administrateur propriétaire associés utilisateurs catégories utilisateurs différents types accès ressources écriture lecture définis accès sources variant utilisateur autre selon cette analyse conduits définir ensemble classes propriétés nécessaires description droits accès source décrivons partie systèmes gestion contenu partagent mêmes principes généraux contrôle accès ressources adoptent cependant stratégies peuvent varier système autre permettre adaptation facile ontologie laquelle reposera gestion accès ressources fonction stratégie adoptée modélisons cette stratégie forme déclarative règles inférence peuvent modifiées loisir incidence annotations ressources gérer décrivons partie règles correspondant stratégie contrôle accès ressources adoptée sémantique sweetwiki isicil inria buffa classes propriétés repose quelques principes fondateurs partagent systèmes gestion contenu agents système gestion contenu utilisateurs groupes utilisa teurs services interagissent système agents rôles systèmes édition collaborative wikis rôles invité agent enregistré système contributeur administrateur autres rôles peuvent modélisés selon systèmes chaque associée liste actions autorisées systèmes collaborative actions possibles ressource création lecture modification destruction contenu modification droits modification liste agents autorisés ressource modification accès défini ressource autres actions peuvent modélisées autres types systèmes existe différents types accès ressources système systèmes édition collaborative ressource publique utilisateurs accès lecture écriture privée seuls agents autorisés accès lecture écriture privée accès libre lecture accès écriture uniquement agents autorisés encore autres types accès peuvent ajoutés autres types systèmes enfin actions autorisées agent ressource dépendent agent accès défini ressource ontologie présentée figure regroupe concepts nécessaires représen connaissances trois classes action accesstype centrales classe classes administrator contributor guest action classe classes readcontent modifycontent deletecontent modifyuserrights modifyaccesstype modifyauthorizedagents enfin accesstype classe classes private public semipublic trois classes vocabulaire standard social présenté section également centrales classe agent classe group classe document elles utilisées comme domaine codomaine propriétés ainsi règles propriétés creator hasauthorizedagent associent agent document elles domaine classe document codomaine classe agent propriété hasrole associe agent propriété hasactiononresource associe action propriété hasaccesstype associe accès document outre représenter modèle propriétés binaires relation ternaire stipule agent autorisé effectuer action ressource avons cette relation introduisant classe authorizedactiononresource classe action propriété hasauthorizedactiononresource associe tance authorizedactiononresource agent propriétés hasdocument hasaction associent instance authorizedactiononresource respec tivement document action vocabulaire utilisée annoter langage ressources contrôler accès gestion sémantique droits accès contenu document agent accesstype hasaccesstype authorizedaction onresource actionhasrole hasaction hasauthorized actiononresource hasresource hasactiononresource accesstype public private semipublic guest contributor administrator action modifycontent readcontent deletecontent modifyuserrights modifyaccesstype modifyauthorizedagents classes propriétés ontologie règles systèmes gestion contenu adoptent stratégies contrôle accès sources peuvent varier système autre plutôt faire varier annotations ressources fonction stratégies contrôle auxquelles ressources seront soumises proposons modéliser façon déclarative stratégie contrôle ontologie forme règles certaines règles pouvant varier fonction stratégie modélisée règles présentée celle sweetwiki stratégie contrôle accès inspire celle moteur source dekiwiki largement utilisé défaut administrateurs droits toutes ressources contributeurs droits relatifs contenu ressources déclarés agents ressource auteur celle outre certains droits administration cette ressource invités uniquement droit lecture contenu ressources figure après résume droits accès ressource fonction accès utilisateur cherche accéder ressource horizontalement figurent types accès ressources verticalement rôles utilisateurs modélisons cette stratégie façon déclarative règles inférence correspondant chacune situation décrite figure exemple règle après spécifie droits attribués agents donnés ressource autres règles stipulent générales telles membre groupe hérite attribués groupe règle encore créateur ressource agent cette ressource règle règles exprimées langage sparql utilisant requêtes forme construct where telle requête permet construire graphes substituant variables clause construct valeurs satisfont clause where retrouvées recherchant appariements possibles clause where données inter mindtouch buffa public public private guest readcontent readcontent contributor readcontent readcontent modifycontent deletecontent authorizedagent readcontent modifycontent deletecontent modifyauthorizedagents modifyaccesstype administrator readcontent modifycontent deletecontent modifyauthorizedagents modifyaccesstype modifyuserrights stratégie contrôle droits accès modélisée rogées requête construct where comme règle appliquée chaînage avant clause where étant prémisse clause construct conclusion format règle cependant aussi utilisé règles appliquées chaînage arrière comme moteur sémantique corese règle construct agent hasauthorizedactiononresource hasresource resource hasactiononresource readcontent hasactiononresource modifycontent hasactiononresource deletecontent hasactiononresource modifyaccesstype hasactiononresource modifyauthorizedagents where resource document resource hasauthorizedagent agent règle construct agent hasrole where group hasrole group member agent règle construct resource hasauthorizedagent agent where resource creator agent gestion sémantique droits accès contenu cette modélisation déclarative stratégie gestion droits accès assure grande facilité maintenance changement droits catégorie utilisateurs toutes ressources concernées nécessitera ajout suppression triplets conclusion règle ajout nouveaux rôles demanderait ajout classe représentant règles représentant droits accès associés gestion droits accès sweetwiki ontologie utilisée projet isicil annoter ressources partagées réseau social veilleurs entreprise gestion accès ressources sweetwiki repose exploitation annotations sémantiques inférences annotations basées règles formulation requêtes sparql retrouver connaissances relatives accès autorisés utilisateur donné ressource donnée sweetwiki annotations ressources reposent ontologies requêtes sparql utilisées plupart fonctionnali implémentées annotations nourrissent moteur sémantique corese embarqué sweetwiki particulier utilisant possibilités recherche approchée corby système tagging sémantique documents sweetwiki offre navigation intelligente travers suggestions annotation ressources isicil création identité créateur enregistrée ainsi accès décidé celui éventuellement plusieurs agents autorisés désignés également créateur sweetwiki informations duites forme annotations associées pages créées exemple annotation suivante résulte création privée utilisateur annakolomoiska déclare michelbuffa agent autorisé cette cette annotation utilise proprié creator hasauthorizedagent hasaccesstype ainsi classe wikiarticle standard social présenté section annotation xmlns seetwiki unice wikiarticle about testpage creator resource annakolomoiska hasauthorizedagent resource michelbuffa hasaccesstype resource private wikiarticle enregistrement utilisateur sweetwiki cette information également présentée forme annotation exemple annotation suivante stipule michelbuffa contributeur utilise classe contributor propriété hasrole classe agent buffa annotation xmlns seetwiki unice agent about michelbuffa hasrole resource contributor agent autres annotations expriment connaissances relatives groupes utilisateurs exemple annotation stipule annakolomoiska catherinefaron membres groupe administrateurs utilise propriété hasrole classes group agent propriété member annotation xmlns seetwiki unice group about admingroup member agent about annakolomoiska member member agent about catherinefaron member hasrole resource admin group inférences exploitant règles appliquées annotations ressources isicil règles ontologie permettent inférer droits utilisateurs ressources considérons exemple nouveau règle illustre section prémisse apparie annotation illustre partie ressource testpage wikiarticle classe vocabulaire classe classe document vocabulaire testpage relation hasauthorizedagent utilisateur michelbuffa appliquée annotation règle permet conclure utilisateur michelbuffa droits lecture modification destruction contenu ressource testpage annotée modification accès liste agents manière règle appliquée annotation permet déduire utilisa catherinefaron possède administrateur autre règle décrivant droits agent ayant administrateur toute ressource permet alors conclure utilisateur catherinefaron possède droits ressource testpage enfin règles appliquées annotation permettent déduire utilisateur annakolomoiska créateur ressource testpage droits agent cette ressource lecture modification destruction contenu modification accès liste agents gestion sémantique droits accès contenu requêtes sparql gestion droits accès accès ressource particulière utilisateur donné dépend comme ensemble actions sweetwiki réponse moteur corese requête sémantique lancée annotations ressources corese combine chaînage arrière règles appariement graphes requêtes annotations exemple requête sparql suivante indique utilisateur catherinefaron possède droit modification contenu ressource testpage requête prefix sweetwiki unice sweetwiki unice catherinefaron hasauthorizedaccessonresource hasactiononresource modifycontent hasresource sweetwiki unice testpage fonction différentes fonctionnalités sweetwiki autres requêtes mises œuvre exemple requête sparql suivante permet retrouver liste utilisateurs ayant droits ressource testpage chacun liste actions autorisées testpage requête prefix sweetwiki unice select agent action agent hasauthorizedaccessonresource hasactiononresource action hasresource sweetwiki unice testpage order agent positionnement langages contrôle accès droits numériques plupart mécanismes contrôle accès implémentés systèmes gestion contenus basés langages permettant décrire politiques contrôle accès gestion droits numériques acronyme digital rights gement systèmes exploitent métadonnées associées ressources contrôler accès métadonnées respectent schémas correspondant langages dédiés parmi connus extensible right markup language comme langage expression droits standard chiariglione standards buffa digital right language implémenté mobile alliance xacml tensible access control markup language développé oasis modèle repose notions asset party permission constraint requirement condition rights holder context offer agreement revoking rights modèle xacml permet représenter stratégies contrôle accès forme règles repose notions policy policy notions pouvant précisées celles subject resource action ronment comprend conditions effects policy rules obligations approches sémantiques contrôle accès émergence sémantique nouveaux systèmes gestion contenu reposent nouvelles approches gérer accès contenu notamment montrent limites solutions gestion droits accès utilisant langages description sémantiques proposent ontologie décrire accès services inspirée modèle xacml généralement retrouvons quelques modèles sémantiques gestion accès contenu existent certaines notions présentes langages anciens citons également système contrôle accès utilise depuis contrôler accès fichiers serveurs system récemment hollenbach proposé évolution système contrôler accès manière décentralisée grande échelle partie autorisation système associant répertoire liste accès forme métadonnées ontologie utilisée nomme basic access control ontology présentée comme solide développer systèmes sophistiqués contrairement ontologie présentée article contrôle accès règles inférence proposé auteurs évoquent comme possible future évolution contrôle niveau documents plutôt celui répertoires besoins termes gestion droits accès projet isicil apparentent bibliothèques numériques coyle propose synthèse cependant problématiques essentielles bibliothèques numériques pertinente cadre isicil celle respect copyrights documents rendus accessibles faire protection documents documents manipulés veilleurs demeurent effet intranet entreprises documents publics parmi travaux gestion accès bibliothèques numériques citons lagoze architecture fedora gestion ressources numériques bibliothèque numérique sémantique jeromedl auteurs fedora proposent modèle appelé acronyme distributed relationships permettant associer métadonnées objets bibliothèque mérique particulier gestion droits accès partie modèle gestion accès trouve ainsi ontologie système fedora utilise cependant lement métadonnées xacml associées ressources manipule oasis committees xacml gestion sémantique droits accès contenu gestion accès jeromedl repose ontologie acronyme tensible access control développée permet associer licences ressources chaque licence correspondant politique accès exemple cence indiquer seules personnes organisation donnée peuvent accéder ressources associées filtrer accès ressources alors celui définir droits accès associés rôles utilisateur standards social données spécificité approche adoptons intégrer modèles adoptés domaines social données précisément sweetwiki utilise ontologies annoter ressources vient compléter ontologies permettre gérer accès contenu acronyme friend friend vocabulaire utilisé réseaux sociaux décrire personnes liens elles entretiennent entre elles acronyme semantically interlinked online communities autre vocabulaire modélise concepts applica tions sociales forums blogs wikis réutilise certains concepts autres ontologies populaires dublin imposé comme standard aujourd intégré nombreuses applications comme moteur press adoption projet linked confirme popularité module prévu depuis longtemps modélisation droits accès resté jusqu présent récemment rédaction article septembre complété prévoyons court terme étudier alignement ontologies probablement classes action accesstype pourront alignées celles respectivement ontology permission status nouvellement ajoutées module access ontology foafrealm extension proposée filtrer collaborativement accès ressources fonction profils utilisateurs relations entretiennent réseau social vocabulaire exemple utilisé jeromedl filtrage mesures confiance réseau social filtrage complémentaire contrôle accès rôles utilisateurs types accès ressources permet enfin problème autorisation accès ressources auquel répond connexe celui authentification agents agira aborder cadre général projet isicil envisageons reposer protocole story conclusion perspectives avons présenté article ontologie dédiée gestion accès systèmes gestion contenu consiste ensemble classes jeromedl index xmlns project ontology linkeddata access buffa priétés permettent annoter ressources contrôler accès propose autre règles inférence représentent façon déclarative stratégie accès ressources cette facilement modifiée incidence annota tions ressources fonction stratégie mettre œuvre telle telle application gérer montrons utilisation faite exemples tations ressources sweetwiki validons premier prototype requêtes sparql permettant interroger annotations relatives accès moteur sémantique corese appuie ainsi compatible applications développement ontologies populaires décrire leurs ressources utilise cependant concepts module access dédié contrôle accès vient publié quelques jours peine travail alignement ontologique maintenant faire utilisation règles permet affranchir implémentation complexe mécanismes calcul droits appel héritage héritage rôles groupes auquel appartient agent union actions permises rôles ordre opérateurs interdire autoriser contraire mécanismes implicites créateur ressource bénéficie automatiquement certains droits cette ressource avons aucune approches sémantiques gestion accès utilise règles auteurs ontologie ayant simplement évoqué cette possibilité extension comparée langages antérieurs sémantique comme xacml bénéficient bibliothèques logicielles importantes complexes implémenter toutes stratégies gestion droits demandé travail développement considérable revanche demeure simple mettre œuvre étendre exemple réutilisant ontologie realm définir règles accès basées mesures confiance avons présenté exemples utilisation documents produits sweetwiki également utilisée autres applications cadre projet isicil précisément classes propriétés utilisées annotations documents serveur profils utilisateurs ontologie semsni utilisée tations modéliser interactions entre utilisateurs réseau social référence définition droits accès ressources partagées chaque utilisateur semsni également utilisées spécifier accès documents partagés utilisateurs réseau social ipernity français inspiré facebook spécia partage photos erétéo prototypée sweetwiki couche gestion accès basée cours implémentations différentes applica tions projet isicil remerciements travail inscrit cadre projet isicil financé références subbiah thuraisingham reasoning semantics aware access control policies geospatial services workshop secure gestion sémantique droits accès contenu services buffa gandon erétéo sander faron sweetwiki semantic journal semantics corby dieng kuntz faron zucker querying semantic corese search engine eureopean conference artificial intelligence press corby dieng kuntz faron zucker gandon searching semantic approximate query processing based ontologies intelligent systems coyle rights management digital library requirements ariadne erétéo buffa gandon corby analysis online social network using semantic frameworks international semantic conference springer hollenbach presbrey berners using metadata enable access control social semantic international semantic conference springer extensible access control ontology specification jeromedl index cygan gzella jeromedl semantic social technologies improving experience digital libraries world conference lagoze payette wilper fedora architecture complex objects their relationships digital libraries story harbulot jacobi jones restful authentication social workshop trust privacy social semantic summary paper propose approach manage access content management systems which relies semantic models technologies present ontology which consists classes properties dedicated annotation resources whose access should controlled inference rules modeling access management strategy carry applied annotations resources whose access should controlled these rules enable manage their access according given strategy modelisation ensures adaptability ontology access management strategy illustrate documents collaborative managed semantic sweetwiki isicil project annotate documents which inference rules applied which semantic queries finally enable control access sweetwiki documents