Extraction complète efficace chemins pondérés Nazha Selmaoui Folcher Frédéric Flouvat Chengcheng Jérémy Sanhes François Boulicaut Université Nouvelle Calédonie 98851 Nouméa Nouvelle Calédonie prenom LIRIS Bâtiment Blaise Pascal 69621 Villeurbanne cedex France francois boulicaut Résumé nouveau domaine motifs appelé chemins pondérés condensés introduit conférence IJCAI contexte fouille alors graphe acyclique orienté sommets étiquetés tributs avons travaillé implémentation efficace motifs montrons algorithme proposé était juste incomplet blissons résultat incomplétude expliquons avant trouver lution réaliser extraction complète avons ensuite développé structures complémentaires calculer efficacement chemins pondé condensés algorithme amélioré performance plusieurs ordres magnitude données artificiels appliquons données réelles motiver qualitativement usage chemins pondérés Introduction avancées technologiques terme acquisition données scientifiques images satellitaires capteurs scientifiques intéressent applications importantes terme surveillance suivi environnement données collectées généralement hétérogènes multiéchelles spatiales temporelles série temporelle images satellites aériennes modèles numériques terrain nature destinées prendre prédire phénomènes résultant processus complexes origine pluridiscipli naire données climatiques géologiques explosion cette information spatiale porelle systèmes informations géographiques nécessitent investissement méthodes extraction connaissances intéressons celles reposent détection motifs locaux comme exemple découverte motifs séquentiels Agrawal Srikant Mannila Masseglia motifs complexes comme graphes Inokuchi arbres besoins concernent étude spatiale temporelle évolutions objets leurs teractions objets peuvent caractérisés plusieurs attributs leurs évolutions Extraction complète efficace chemins pondérés appelle parfois dynamique décrivent évolutions attributs placement géographique existence apparition disparition structure topologique fusion division certaines applications pouvons transformer données spatio temporelles données transactionnelles séquences analyser Cependant transformations peuvent avérer tidieuse résultats peuvent difficilement interprétables domaines motifs sophistiqués applicables étude phénomènes spatio temporels proposés Ainsi plusieurs travaux intéressés extraction motifs graphes étiquetés Inokuchi Quelques travaux menés dernièrement graphes attribués Fukuzaki Miyoshi Desmier difficultés fouille graphes attribués résident explosion combinatoire exploration espace cherche effet cette espace recherche porte combinaisons graphes combinaisons attributs travail présenté Sanhes 2013a Sanhes proposé travailler modélisation données spatio temporelles attribués autrement unique graphe orienté acyclique attribué Figure sommets objets spatiaux caractérisés ensemble attributs caractéristiques dénotent proximité spatio temporelle entre objets exemple voisinage spatial entre objets temps consécutifs trouver transitions cheminements caractéristiques pouvant montrer tendance attendue surprenante expliquer phénomène particulier revient chercher chemins fréquents attributs trouve quelques travaux attaquant fouille graphes orientés FIGURE Exemple construit objets représentés images temporelles acycliques étiquetés attribués Termier méthodes recherchent graphes ensemble graphes sommets plutôt labélisés considérés comme labélisés attribués notre présence graphe orienté acyclique attribué problèmes différents domaine motif proposé première Sanhes 2013b appelé domaine chemins pondérés Lorsque avons voulu travailler implémentation efficace algorithme extraction motif notre connaissance calcule motifs attribués avons étudié propriétés avons découvert était juste incomplet présentons Selmaoui Folcher nouvel algorithme permettant réaliser extraction motifs façon complète seulement proposons correction premier algorithme aussi étudions optimisations nécessaires passage échelle introduisant structures données complémentaires comme graphe motifs montrons performance extrac améliorée plusieurs ordres magnitude données artificiels appliquons aussi données réelles motiver qualitativement usage chemins pondérés section suivante présenterons concepts définitions nécessaires préhension algorithme Section prouvons incomplétude algorithme proposons solution complétude optimisation basée structure graphe motifs Section montrerons performances algorithme complet optimisé données artificielles Section enfin conclurons Section Chemins pondérés concepts définitions Graphe chemins attribué aussi appelé semble items consiste ensemble sommets ensemble arêtes orientées fonction attribution correspondre chaque sommet ensemble FIGURE Exemple chemin séquence itemsets existe chemin graphe inclus ensemble items différentier définition classique chemin graphe alors occurrence chemin ensemble occurrences occuG Extraction complète efficace chemins pondérés exemple graphe figure occurrences chemin taille chemin pondéré chemin poids associé chaque consti tuant poids correspond nombre occurrences distinctes graphe exemple précédent chemin occurrences permettent construire motif pondéré effet nombre occurrences occurG nombre occurrences occurG telle représentation itemset apparaît avant apparition chemin itemset apparaît après apparition chemin Dorénavant désignera poids entre itemsets Relation inclusion opérateur inclusionv couple chemins pondérés défini manière suivante seulement inclusion itemsets égalité poids Autrement inclus existe séquence itemsets inclus mêmes poids niveau chemin super chemin pondéré partir mesure proposée Bringmann Nijssen définissons support chemin pondéré comme étant poids minimal Chemin pondéré condensé chemin pondéré condensé admet aucun chemin pondéré simplifier appellerons motif chemin pondéré occurrences motif seront simplement chemins Algorithme complet algorithme extraction chemins condensés proposé Sanhes Sanhes 2013a déroule étapes première étape concerne extraction condensés taille appelés graine auteurs remarquer chemin pondéré taille simplement repré senté triplet occurG transforment alors données transactionnelles ternaire laquelle chaque repré senté tuple extraction alors réalisée algorithme Peeler développé cherchant ensembles fermés motifs obtenus taille alors condensés itemsets caractérisant sommets origine destination deuxième étape consiste étendre récursivement chaque graine itemsets fermés localement ensemble itemsets accessibles algorithme extension utilise concept données projetée homepages lcerf prototypes Selmaoui Folcher Cette méthode permet extraction motifs condensés manière juste génère effet toutes graines condensées forment motifs condensés motif condensé taille supérieure contenir graines condensées Effectivement existe motifs condensés inclusion peuvent formés certains motifs taille générés première étape illustrer incomplétude algorithme montrons contre exemple graphe figure graines générées première étape gorithme permettent construire motif condensé Condensés représentés chemins tailles chemins tailles Graines générées première étape supporté supporté supporté FIGURE Exemple motifs condensés générés problème vient extension mortif retrouve occurrences graines étendre effet étendre supporté sommets représentant itemset étendre pouvons étendre motif itemsets itemsets fermés rapport sommets accessibles motif question extension itemset fournit motif occurrences toutes occurrences utilisées conservées extension perte occurrences extension itemset fournit motif toutes occurrences utilisées relié parle extension perte occurrences conséquent déterminer occurrences utilisées mettre différents poids ainsi itemsets motif réalité séparation étapes information structurelle perdue pendant parcours profondeur Algorithme complet optimisé paragraphe proposerons solution permettant corriger complétude proposerons occasion version optimisée utilisant structure graphe permettant stocker motifs appellera graphe motifs Extraction complète efficace chemins pondérés motif pouvons étendre perte occurrences existe itemset fermé fréquent ensemble sommets accessibles appellerons fermé fréquent local supporte existe moins chaque sommet toutes occurrences conservées manière analogue pouvons étendre perte occurrences lorsque toutes occurrences utilisées extension obtenons motif mettre notre solution alors marquer extensions perte occur rences parmi identifiés appliquer étape retour backtracking mettre poids faisant parcours inverse motif reprenons notre exemple figure moment extension motif perte itemset accessible sommet sommet duplique motif motif occurrence figure mettant poids FIGURE Exemple backtracking générer Stratégie algorithme complet partir notions introduites précédemment pouvons présenter stratégie algorithme complet algorithme algorithme parcours profondeur espace recherche étendre motifs condensés partant ensemble sommets graphe algorithme effectue parcours profondeur espace recherche étendre motif condensé initialisé ligne exprime arrêt algorithme ensemble sommets destinations parcours profondeur lignes extension itemset fermé fréquent rapport sommets ligne notons motif ainsi étendu Lorsqu extension perte occurrences nécessaire mettre occurrences motif ligne nouveau motif potentiellement motif motif condensé supprimons motifs inclus insérons ensemble motifs condensés lignes continuons parcours ligne complexité algorithme permet passage échelle cause nombreux tests coûteux inclusion motifs vérifier maximalité proposons dessous implémentation optimisée basée structure graphe stocker motifs Cette nouvelle structure permettre éviter tests coûteux comparaison entre motifs Selmaoui Folcher Algorithme DepthFirstMining Entrées motif courant appel initial sommets destinations appel initial motifs condensés appel initial min_sup support minimal alors1 MiningClosedItemsets minsup ensemble itemsets fermés fréquents chaque itemset faire3 extension extension perte occurrences alors5 Mettre occurrences Supprimer motifs inclus Insérer DepthFirstMining min_sup Implémentation optimisée allons servir maximalité chemins pondérés condensés recherchés optimiser algorithme traduit maximalité itemsets itemsets fermés taille tests inclusions algorithme itemsets chemins éviter tests allons définir structure graphe permettant stockage trouvés mesure parcours espace recherche Cette structure appelée graphe motifs FIGURE Graphe motifs Structure données chemins pondérés condensés itemset graphe attribué modélisons ensemble motifs condensés Extraction complète efficace chemins pondérés graphe motifs défini ensemble sommets ensemble fonction attributs définie représente itemset maximal caractérisant sommets Réciproquement associe itemset ensemble sommets supportant itemset sommet graphe identifié ensemble sommets graphe motif condensé alors chemin longueur maximale figure source incident puits sortant Procédure cherCondRec itemset sommets min_sup entier sommets_a_remonter globale contenant sommets backtracker1 alors2 sortants sommets sortants données transactionnelles construites partir transaction items sommet destination chaque itemset fermé fréquent faire4 sommets supportant cette locale5 VXutile sommets ayant moins VXutile alors7 Insérer VXutile graphe motifs sinon9 Insérer VXutile graphe motifs sommet existe graphe motifs alors11 ajouter VXutile sommets_a_remonter12 sommet VXutile présent alors13 cherCondRec cette structure graphe motifs éviterons tests comparaisons inclusions entre motifs trouvés effet prenant motif condensé séquence itemsets chaque itemsets motif représente sommet graphe motifs autre ensemble sommets graphe contenant itemsets motif alors identifié manière unique séquence graphe motifs moment construction graphe motifs insertion nouveau sommet graphe motifs suffit vérifier présent graphe motifs alors parcouru sinon inséré parcours espace recherche continue algorithme final déroule grandes étapes suivantes Recherche motifs condensés parcours profondeur espace recherche procédure motifs stockés graphe motifs Pendant recherche sommets lesquels extension perte occurrences marqués Selmaoui Folcher traités phase backtracking Phase backtracking sommets marqués lesquels extension perte occurrences mettre occurrences motifs procédure première étape appel procédure cherCondRec effectue parcours profon espace recherche Cette procédure étend récursivement motifs condensés mesure construction étape construction motif sommet étendre graphe motifs supportant itemset calcule VXutile ensemble sommets ayant moins sortant calcule items accessibles obtient données transactionnelles transactions sortants items items accessibles ligne chaque itemset maximal cette transactionnelle étendre présentent VXutile sommets utilisés extension extension perte suffit alors créer sommet relier VXutile extension réalisé perte occurrences duplique motif remplaçant sommet VXutile marquer traiter phase Backtracking insère nouveau sommet entre VXutile Procédure backtrackRec VXutile sommet graphe motifs VtoBacktrack sommet graphe motifs min_sup entier sommets_a_remonter contient VtoBacktrack Vdirection alors1 VtoBacktrack backtracké suivant Vdirection backtrackRec VtoBacktrack Vdirection chaque sommet incident Vdirection faire3 Viutile ensemble sommets ayant moins sortant VXutile Insérer Viutile VXutile graphe motifs insertion attributs backtrackRec Viutile backtracking haut6 étape backtracking décrite procédure récursive backtrackRec retraite chaque sommet marqué visitant branche motif inverse mettre occurrences motifs informations poids itemsets figure montre déroulement algorithme exemple graphe figure graphe motifs rouge définissent extension perte occurrences montrent phase backtracking poids itemsets Expérimentations résultats avons appliqué méthode données artificielles montrer formance avons comparé méthode incomplète montrer intérêt nouveau domaine motifs avons utilisé données réelles problème suivi phénomène érosion premier temps avons artificiellement trois données obser impact taille performances notés Extraction complète efficace chemins pondérés FIGURE Etapes construction graphe motifs gauche Support minimum nombre E120K E120K V200K E600K V200K E600K 10000 100000 Support minimum nombre E120K E120K V200K E600K V200K E600K FIGURE Performances nombre solutions fonction seuils fréquence sommets arêtes E120K V200K E600K avons attributs sommets Parmi attributs chaque sommet nombre attributs attributs mêmes chaque données version nombre attributs varie entre items version nombre varie entre items temps exécution nombre chemins pondérés fréquents reportés figure deuxième temps avons voulu assurer Support minimum nombre E120K E120K V200K E600K V200K E600K FIGURE Performances algorithmes données artificiels couches données artificiel ressemble données tirés application spatio temporelle Selmaoui Folcher occurrence comportent répartition niveau chaque niveau correspond tranche temporelle existe entre tranches consécutives avons réparti niveaux générés précédemment résultats reportés figure courbes droite graphe gauche figure regroupe résultats temps exécution nombre solutions trouvés algorithme incomplet optimisé courbes montrent nette optimisation temps calculs puisque données temps réduit facteur stockage motifs structure graphe motifs permis également réduire taille mémoire disposons images satellites résolution dates régulières avons travaillé couvrant variété régions observables points douce marine activité anthropiques mines usines pistes relief bassins versants plaines forêts Avant analyse évolutions images segmentées régions attributs régions Redness rougeur indice végétation Brightness indice brillance Slope pente attributs discrétisés classes Redness0 Redness4 faibles valeurs fortes figure illustre motif Redness1 Redness1 FIGURE Redness1 Redness1 Redness2 Slope Redness3 Redness2 Slope Redness3 augmentation progressive Redness témoigne érosion naturelle valeur Slope indique zones sèdent pentes entre effet zones correspondent versants crêtes massifs bords pistes risque érosion Conclusion avons présenté solution permettant corriger algorithme extraction pondérés condensés développé proposant algorithme efficace complet optimisation nouvelle version repose structure graphes structure stockage motifs trouvées avons testé performances données synthétiques comparant performances ancien algorithme résultats montrent nette réduction temps exécution mémoire algorithme optimisé complet passe échelle chemins pondérés condensés intéressants analyser évolu tions spatio temporelles objets Comme montrent résultats qualitatifs données réelles liées problème érosion motifs trouvés permettent suivre évolutions régions ayant informations évolutions caractéristiques structure objet grâce structure graphe motifs Extraction complète efficace chemins pondérés Références Agrawal Srikant Mining sequential patterns Bringmann Nijssen frequent single graph PAKDD Besson Robardet Boulicaut peeler Contraint based closed pattern mining relations Mining patterns databases Desmier Plantevit Robardet Boulicaut Trend Mining Dynamic Attributed Graphs Fukuzaki Kashima Finding itemset sharing patterns large itemset associated graph PAKDD Ienco Poncelet Teisseire Extracting trajectories through efficient unifying spatio temporal pattern mining system Inokuchi Washio Motoda apriori based algorithm mining frequent substructures graph Mannila Toivonen Verkamo Discovery frequent episodes event sequences Masseglia Cathala Poncelet approach mining sequential terns Miyoshi Ozaki Ohkawa Frequent pattern discovery single graph quantitative itemsets Workshops Sanhes Flouvat Pasquier Selmaoui Boulicaut 2013a Extraction motifs condensés unique graphe orienté acyclique attribué Sanhes Flouvat Pasquier Selmaoui Folcher Boulicaut 2013b Weighted condensed pattern single attributed IJCAI Termier Tamada Numata Imoto Washio Higuchi Digdag first algorithm closed frequent embedded Efficiently mining frequent trees forest Summary pattern domain weighted paths introduced IJCAI proceedings modeled directed acyclic graph whose nodes described means tributes decided design efficient scalable implementation proposed rithm weighted computation first result prove explain first algorithm Sanhes correct incomplete pattern domain specifica design efficient algorithm complete performances several orders magnitude better pioneer implementation apply algorithm environmental discuss qualitative added value promising pattern domain Visualisation Données Complexes Extraction complète efficace chemins pondérés Nazha Selmaoui Folcher Frédéric Flouvat Chengcheng Jérémy Sanhes François Boulicaut