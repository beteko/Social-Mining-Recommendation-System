import automatique interactif données systèmes visualisations frédéric gilbert david auber labri université bordeaux talence france gravité inria bordeaux ouest frederic gilbert labri david auber labri résumé première étape processus visualisation information consiste transformer données format structure données utili sable différents composants visualisation applications réelles cette première étape représente barrière empêchant accès utilisateurs novices riche variété techniques visualisation exemple techniquement impossible utilisateur lambda transformer données arborescentes modèle graphe pouvant utiliser représenta treemap autre barrière aussi multitude transfor mations possible données brutes pouvoir explorer ensemble combinaisons retours expériences utilisateurs finaux article considérons format forme tabulaire format couramment utilisé facilement accessible utilisateurs proposons méthode novatrice permettant générer tomatiquement graphes valués partir importe quelle table analy contenu chaque dimension identifions interconnexions entre celles caractérisons entités attributs relations possibles tables finalement intégrons utilisateur processus transformation proposant ensemble transformations valides introduction jours collecte données aisée existe grand nombre outils méthodes collecter stocker facilement données souvent données stockées forme données contenant informations basiques comme nombres dates heures elles stockées garder informations comme quand facilités collecte stockage conséquences augmenter quantité grandes bases données exemple chercheurs génome humain collectent données comprendre comment gènes interagissent compagnies commerciales collectent mettre évidence comportements typiques atypiques clients répondre questions existe systèmes visualisation comme livny polaris stolte tableau mackinlay import automatique interactif systèmes visualisations systèmes suivent processus analyse exploratoire défini hypothèse rimentation finalement découverte avant nécessaire transformer données format structure données utilisable différents composants visualisation systèmes cette étape représente barrière empêchant accès utilisateurs experts riche variété techniques visualisation exemple techniquement impossible utilisateur expert transformer données rescentes modèle graphe pouvant utiliser représentation treemap shneiderman chaque système visualisation utilise modèle graphe propre utilisation spécificités chaque système manderait grandes capacités techniques utilisateurs experts aussi remarquer cette barrière était franchie certains utilisateurs conde viendrait immédiatement mettre travers appréhension système cette deuxième barrière matérialisée multitude transformations possible données brutes effet données renferment structure arborescente exclu autres structures soient présentes structures souvent dissimulées brutes alors primordial fournir utilisateurs méthodes transformer données brutes données utilisables système visualisation aussi important données brutes soient analysées mettre évidence toutes structures elles contiennent ainsi utilisateurs novices pourront franchir barrières dressaient devant pourront alors aisément inscrire processus analyse exploratoire grâce analyse données brutes réalisée seront mesure hypothèses auxquelles avaient jamais pensé jusqu alors indispensable doter chaque système visualisation module capable analyser transformer données brutes utilisateurs données utilisables système avant développer méthodes analyses nécessaire définir format données brutes format suffisamment générique simple utilisateurs novices soient capables présenter leurs données brutes format plutôt définir format avons décidé étudier format utilisé utilisateurs experts retours expériences utilisateurs finaux sommes arrivés conclusion format couramment utilisé forme tabulaire ainsi cette forme données initiales seront présentées méthode exposons article utilisant comme données entrée table proposons méthode trice permettant générer automatiquement graphes valués partir importe quelle table analysant contenu chaque dimension identifions interconnexions entre celles caractérisons entités attributs relations possibles tables finalement intégrons utilisateur processus proposant ensemble transformation valide utilisateur possibilité modifier transformations avant générer graphes correspondants article structuré manière suivante présentons abord travaux traitant import automatique données systèmes visualisation crivons notre méthode enfin concluons étude gilbert auber méthodes générations graphes répondre principales attentes utilisateurs système visualisation comme smith mackinlay slingsby souhaitons fournir visualisations simplifiées leurs données mettons place méthodes génération automatique graphes présentons principales techniques génération graphes étudie littérature domaine trois méthodes générer graphes démarquent autres devenir références première pouvons citer viegas après équipe développe cette plateforme important plusieurs personnes puissent travailler mêmes données débattre différentes visualisations générées partir celles auteurs expliquent difficile donner bonne manière visualiser données possible données différent seulement dimension manière visualiser radicalement différente cette raison cette équipe développé service permet utilisateurs accéder données déposer leurs propres données créer visualisations première partie processus seconde consistant proposer discussion visualisations générées profiter experts essayer construire bonne visualisation données préfère offrir opportunité avoir visualisation élaborée plusieurs experts seconde méthode celle développée mackinlay tableau software mackinlay celle facilement charger données manipuler créer visualisations combinant dimensions données force outil choisit place utilisateur comment visualiser efficacement résultat combinaison certaines dimensions tests combinatoires outil dimensions rendent intéressant capable simplifier données trouver structures utilisateurs seraient capables trouver grandes tables tests combinatoires décrits dernière méthode développée smith nodexl software smith repose utilisation feuilles calcul feuilles calcul permettent première calculer valeurs autres informations utilisant formules logiques mathématiques valeurs serviront attribut entités relations outil permet aussi construire graphe partir feuille calcul graphe décrit liste arêtes feuille calcul contenir moins colonnes chaque ligne décrit entités chaque colonne relation outil fournit méthode automatique nécessite utilisation langage programma permet utilisateurs novices produire analyse visuelle données relationnelles cette méthode raison création manuelle liste arêtes possible assurer utilisateurs experts soient capables construire graphe valide maintenant avons présenté trois grandes tendances travail domaine présentons précédente méthode avons réalisée cette méthode gilbert inspirée travail réalisé tableau software comme tests combinatoires utilisés décrits avons développé notre propre méthode combina toire cette méthode vérifie existence structures hiérarchiques entre dimensions table simplifier avant générer graphes obtenir import automatique interactif systèmes visualisations tenant compte structures cette méthode chaque ligne table décrit entité cherche savoir comment attributs valeurs contenues ligne hiérarchisent entités notre méthode cette nouvelle méthode considérons toujours chaque cellule table contient données nominales ainsi elles contiennent nombre information traitée comme chaîne caractères distinction contre changeons approche concerne globalité données contenues table considérer chaque ligne comme entité décrite attributs considérons entités valeurs contenues lignes exemple table contient avions ayant escale plusieurs aéroports apparaissent chaque ligne table utilisateur vouloir visualiser comment aéroports inter connectés ainsi travail réalisons rapproche celui réalisé tableau software analyse combinatoire mener dimensions table également celui réalisé nodexl chercher listes arêtes toutefois cette liste arêtes clairement identifiée table étendre dimensions identifiant départ escale terminus nantes bordeaux blagnac strasbourg bordeaux blagnac roissy exemple table regroupant données avions allons décrire maintenant processus avons place cette thode celui décompose façon suivante abord recherchons intersec tions entre dimensions table proposons intersections trouvées utilisateur celui puisse éventuellement modifier enfin utilisateur intersections choix générons graphes entité relation utilisateur souhaite visualiser recherche intersections entre dimensions comparer contenus différentes dimensions éviter avoir parcou chaque toutes valeurs dimension travaillons partir alphabets dimensions définissons alphabet ensemble valeurs dimension avantage supprimer valeurs apparaissent multiples dimension exemple valeurs dimension alpha associé cette dimension seconde étape consiste déterminer existe intersections entre dimensions définit existe intersection entre dimensions existe moins valeur gilbert auber présente chacune dimensions exemple dimensions suivantes ensemble comme intersection utilisant avons construit alphabets chaque dimension existe intersection entre dimensions suffit construire troisième alphabet σdim1 partir σdim1 σdim2 alphabets chaque dimen obtient σdim1 σdim1 σdim2 σdim1 σdim2 alors signifie existe intersection entre dimensions exemple souhaite déterminer existe intersection entre dimension dimension terminus table1 abord générer alphabets dimensions obtient ainsi σdepart bordeaux blagnac σterminus bordeaux roissy strasbourg devons générer troisième alphabet partir précédents donne σdepart terminus bordeaux blagnac roissy strasbourg vérifier existe intersection entre dimensions puisque σdepart terminus σdepart σterminus procédant paire dimensions évident détecter existe tersections entre dimensions exemple considérons trois dimensions possible intersection entre autre entre entre alors pouvoir stocker informations intersections avons place graphe graphe concepts chaque dimension table représentée graphe sommet chaque trouve intersection entre dimensions ajoute arête entre sommets correspondant graphe obtenons ainsi graphe composé sieurs composantes connexes sommes toutes dimensions appartenant composante connexe possèdent intersections extensions toutes valeurs contenues dimensions appartient domaine graphe intersections dimensions table import automatique interactif systèmes visualisations exemple considérons avions chaque ligne table représente caractérisé dimensions départ terminus escale alors trouvons intersections entre dimensions pouvons affirmer dimensions contiennent valeurs appartenant domaine aéroports figure représente graphe intersections dimensions table propositions intersections interactions utilisateur maintenant intersections entre dimensions mises évidence soumettre utilisateur puisse éventuellement éditer effet intéressant utilisateur intervienne fonction répartition leurs différentes dimensions table intersections aient détectées exemple considère table intersection entre dimensions départ escale pourtant utilisateur souhaite visualiser interconnexions entre aéroports table également prendre compte dimension terminus définir domaine aéroport précis impossible détecter inclusion dimension terminus domaine aéroport identifiant départ escale terminus nantes toulon blagnac strasbourg bordeaux blagnac roissy exemple table regroupant donnés avions tersections dimension terminus autres dimensions table semble intéressant indispensable construit graphes précis sibles tirer profit connaissances utilisateur ainsi dimensions possèdent intersection alors manifestement elles désignent entités important utilisateur puisse spécifier notre exemple dimensions départ terminus possèdent intersections pourtant toutes renferment valeurs aéroports proposer utilisateur ajouter cette information ensembles intersections utilisateur puisse visualiser éditer ensembles intersections avons choisi utiliser graphe graphe concepts avons construit étape recherches intersections graphe concepts complexe cette complexité réside modifier domaine composante connexe graphe intersection concepts utilisateur manipule directement graphe ajoutant retirant arêtes avons alors compte données entrée forme tabulaire conservant cette représentation longtemps possible tache solvable évitons ainsi surcharge cognitive basant cette notion limitation surcharge cognitive avons choisi mettre place interface permet utilisateur éditer intersections précé demment trouvées cette interface table chaque colonne représente dimension table origine lignes cette table représentent ensembles intersections gilbert auber table permettant visualiser ensembles intersections dimensions trouvé analyse table2 intersection incluant dimension terminus toutefois utilisateur pouvoir corriger cochant boite correspondante puisse visualiser ligne ensemble représente avons chaque cellule table boite cochable chaque boite correspondant dimension apparait ensemble cochée figure édition utilisateur cocher décocher boîtes souhaite ainsi retirer dimensions ensemble intersections rajouter utilisateur aussi rajouter nouvel ensemble intersections domaine suffit ajouter ligne table cocher dimensions définir nouveau domaine ensemble intersections utilisateur apporté toutes modifications souhaite intersections construisons nouveau graphe similaire premier avons construit celui permettre stocker nouveaux domaines suite application méthode génération graphes entités relation représentants domaines utilisant graphe obtenu après utilisateur apporté modifications sommes mesure mettre évidence ensembles entités ensembles entités identifiables grâce composantes connexes graphe effet chaque composante connexe représente ensemble dimensions possédant intersections entres elles existe ensemble alors valeurs contenues dimensions définissent ensemble entités chaque composante connexe graphe sommes capable créer nouveau graphe ayant comme ensemble sommets valeurs contenues dimen sions cette composante maintenant obtenir graphes types entité relation devons ajouter arêtes graphe ajouter allons utiliser structure globale table définition valeurs appartiennent ligne table alors elles décrivent toutes entité présente cette ligne elles relation entre elles elles définissent ligne table exemple avions aéroports nissent réciproquement chaque définir relation entre aéroports composent chaque ligne table allons ajouter arête graphe entre valeurs dimensions possédant intersections exemple table graphe intersections figure pouvons graphe allons obtenir possédera import automatique interactif systèmes visualisations arête entre sommets nantes seconde entre bordeaux ainsi troisième entre nantes bordeaux appliquant chacune lignes table obtenons graphe figure lequel retrouve interconnexions entre aéroports utilisateur souhaitait visualiser graphe aéroports obtenu tenant compte intersections dimensions table1 complexité notre méthode permet utilisateur analyser contenu données extraire graphes entités relation espace toutes combinaisons possibles entre mensions quadratique important considérer complexités temps requiert notre méthode exprimons complexités considérant table entrée composée dimensions lignes ainsi construction alphabet dimension utilisant structure ensembliste extension construction alphabets construction alphabet servant vérifier existence inter section entre dimensions besoin insérer valeurs alphabet autre comme alphabets associés dimensions table cette construction table dimensions comparaison sible obtient complexité globale construction intersections dimensions cette dernière complexité considère gilbert auber alphabets initiaux chaque dimension construits construire premiers alphabets intersections obtient complexité seconde complexité prendre compte celle construction graphe correspondant ensemble intersections ensemble étend dimensions table alors chaque ligne table devoir considérer chacune valeurs obtient complexité cette complexité inférieure celle construction intersections complexité globale notre méthode ordre plupart données nombre dimensions inférieur nombre ligne pouvons notre méthode applicable pratique malgrès complexité quadratique étude données utilisons extraction publications notre équipe recherche partir plate forme archive ouverte pluridisciplinaire hyper ticle ligne avons extrait ensemble publications réalisées membres notre équipe depuis création données cette extraction stockée table cette table composée dimensions identifiant blication titre publication auteur auteur auteur annee titre ouvrage avons décidé stocker auteurs trois dimensions plifier structure globale jamais publications moins trois auteurs alors codons champs supplémentaires existe valeurs champs champs seront alors considérés analyse chaque ligne table décrit publication extrait table publications import automatique interactif systèmes visualisations méthode présentons article implémentée tulip auber tulip logiciel libre fournit outils composants graphiques visualisations grandes masses données première étape notre méthode cherchons intersections entre dimensions table évident notre méthode devrait pouvoir mettre évidence intersections entre différentes dimensions regroupant auteurs publications résultat recherche intersections présenté figure celui confirme intersections attendues entre dimensions auteur table permettant visualiser ensembles intersections dimensions trouvé analyse table regroupant publications seule intersection incluant dimensions auteur auteur auteur seconde étape notre méthode génération graphes correspondant inter sections notre étant donné seule intersection trouvée graphe généré graphe obtenons auteurs celui figure avons dessiné algorithme dessin force implémenté tulip maintenant avons importé généré graphes partir extraction publi cation pouvons entrer processus analyse exploratoire ainsi observe graphe obtenu existe sommets particuliers connecteurs graphe exemple figure delest maylis permet connecter parties graphe conclure important cette équipe retrouver rôles similaires zaidi faraz lambert antoine autre hypothèse graphe permet faire auber david melancon positions centrales cette équipe conclusion avons présenté article méthode générant manière automatique graphes partir données forme tabulaire cette méthode facilite transforma données pouvoir utiliser systèmes visualisation informations générer graphes entité relation tirons profit expertise connais sances utilisateur couplée précédents travaux cette méthode permet obtenir graphes valués lesquels possible procéder analyse exploratoire avons montré complexité notre méthode reste applicable grands données avons aussi démontré travers étude utilité notre méthode effet partant données publications avons générer graphe auteurs avérer révélateur quant certains auteurs communauté gilbert auber graphe entité relation obtenu partir auteurs table figure références auber tulip graph visualisation framework mutzel jünger graph drawing softwares mathematics visualization springer verlag gilbert auber databases graph visualization information visua lization international conference information visualisation johnson shneiderman space filling approach visualization hierarchical information structures proceedings conference visualization alamitos computer society press livny ramakrishnan beyer donjerkovic lawande myllymãd wenger devise integrated querying visual exploration large datasets proceedings sigmod import automatique interactif systèmes visualisations mackinlay hanrahan stolte automatic presentation visual analysis volume slingsby dykes configuring hierarchical layouts address research questions trans comput graph smith shneiderman milic frayling mendes rodrigues barash dunne capone perer gleave analyzing social media networks nodexl proceedings fourth international conference communities nologies stolte hanrahan polaris system query analysis visuali zation multidimensional databases commun viegas wattenberg kriss mckeon manyeyes visualization internet scale transactions visualization computer graphics villerd ranwez crampes carteret penalva using concept lattices visual navigation assistance large databases application pantent database information visualization perception design morgan kaufmann publi shers summary first information visualization system enable import their dataset system however expert faced difficult choosing their should could transform these infovis systems paper propose novel method automatic valuated graph generation dataset tabular format analysing dimension table highlight connections between characterize entities attributes possible relations tables finally include users transformation process asking validate transformations