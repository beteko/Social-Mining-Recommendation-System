Réorganisation hiérarchique visualisations Sébastien Lafon Fatma Bouali Christiane Guinot Gilles Venturini Université François Rabelais Tours Laboratoire Informatique avenue Portalis 37200 Tours France venturini tours Université Lille2 Maréchal 59100 Roubaix France fatma bouali lille2 Victor 92521 Neuilly Seine France christiane guinot ceries Résumé article proposons nouvel algorithme réorga nisation hiérarchique cubes Analytical Processing ayant objectif améliorer visualisation algorithme caractérise traiter dimensions organisées hiérarchiquement optimiser conjointement dimensions contrairement autres approches utilise algorithme génétique réorganise arbres aires quelconques intégré interface testé comparaison autres approches réorganisation fournit résultats positifs titre avons également généralisé algorithme heuristique classique energy algorithm hiérarchies Enfin notre approche utilisateurs résultats soulignent intérêt réorganisation exemples tâches résoudre Introduction beaucoup visualisations signes éléments visuels doivent placés espace améliorer compréhensibilité informations visualisées intéresse réorganisations unidimensionnelles méthodes développées réordonner exemple ordre coordonnées parallèles Ankerst problème réorganisation unidimensionnelle apparente problème voyageur commerce Ankerst Climer Zhang éléments visuels ordonner représentent villes similarités entre représentent distances entre villes concerne réorganisation matrices nombreux travaux visualisation survol Fekete Henry Garcia exemple approches interactives comme Bertin Cependant montré plusieurs études survol Garcia utilisateurs préférent approches automatiques McCormick senté algorithme Energy Algorithm utilise heuristique réorganiser Réorganisation hiérarchique visualisation lignes respectivement colonnes matrice choisit hasard ligne pectivement colonne insère autres lignes respectivement colonnes gauche droite milieu celles positionnées selon emplacement augmenter critère efficacité measure effectiveness Notons section étendrons algorithme dimensions hiérarchiques autres méthodes peuvent citées comme exemple Caraux Climer Zhang article allons intéresser particulièrement dernière catégorie problèmes éléments réorganiser structurés hiérarchie problème classique correspond réorganisation dendogrammes générés méthodes classification ascendante hiérarchique comme Vandev Tsvetanova joseph algorithme optimal complexité temporelle encore Morris algorithme utilisant recuit simulé approches cependant limitées arbres binaires joseph présenté généralisation joseph pouvant réorganiser arbres aires notre connaissance rares algorithmes réorganisation visuelle hiérarchique pouvant traiter arbres aires algorithme appuie transformation arbre arbre binaire ajoutant noeuds fictifs complexité temporelle élevée repré sente arité maximale arbre général algorithme reste forme particulière arbres classification lesquels reste faible traite optimisation arbre optimiser dimensions manière conjointe notre connaissance algorithmes réorganisation visuelle arbres aires large puissent également optimiser plusieurs dimensions manière conjointe optimisation globale structure visuelle Chaudhuri Dayal utilisateur analyse visuel lement interactivement données multidimensionnelles survol visualisations Cuzzocrea Mansmann dimensions contiennent membres membres pouvant organisés niveaux hiérarchiques intersection chaque dimen définies plusieurs valeurs mesures disposition expert domaine plusieurs opérateurs permettant interagir hypercube explorer interac tivement données existe notamment opérateurs réorganiser ordre membres dimension exemple opérateur Switch cubes particulièrement concernés problème réorganisation réorganisant mensions faire apparaître régularités importantes expert domaine groupes données similaires données aberrantes Cependant réorganiser manière manuelle représente tâche lourde utilisateur Comme montrer article approches automatiques étudiées réorganiser elles restent encore nombreuses limitées principalement elles traitent dimensions organisées hiérarchiquement étudier algorithmes réorganisation hiérarchique appliquant arbres aires quelconques suite article organisée manière suivante section présentons domaine réorganisation visuelle cubes section présentons notre algorithme génétique différents éléments section proposons algorithmes optimisation niveau niveau section détaillons résultats expérimentaux obtenus comparaison autres approches Lafon évaluation utilisateur section présentons conclusions perspectives Réorganisation visualisations Avant décrire approches réorganisation visuelle notons proches réorganisation cubes proposées cadre compression données comme exemple Barbará Sullivan approches objectifs visualisation concerne approches réorganisation suelle pouvons citer Choong auteurs cherchent représentation parfaite forme matrice Robinson valeur similarité décroissante partir diagonale Messaoud nouvel opérateur présenté portant Opérateur Agrégation Classification utilise construire hiérarchie tenir compte éventuelle hiérarchie existante Messaoud méthode basant Analyse respondances Multiples présentée améliorer visualisation Cette méthode réorganisation avantage réorganiser toutes dimensions simultanément prend compte hiérarchie celles Sureau avons présenté premier algorithme génétique prenait compte hiérarchie dimensions ayant temps exécution longs minutes algorithme génétique avons conçu réorganiser tingue autres approches réorganisation manière suivante traite dimen sions organisées hiérarchiquement contrairement approches précédentes faire hypothèses forme arbre contrairement joseph approches traitant arbres binaires Notre méthode concerne cubes affichant jusqu trois dimensions mesures alors approches précédentes limitaient dimensions mesure Contrairement beaucoup algorithmes organisation notre approche réorganiser trois dimensions simultanément isolément manière optimiser globalement aspect permettre utilisation fonctions séparables dimension Notre approche prend compte contrainte analyse ligne notre algorithme pouvoir arrêté moment ralentir perturber utilisateur processus exploration Enfin propo évaluation utilisateur quelques exemples concernant matrices Garcia littérature approches réorganisation fouille visuelle souvent évaluées exemple références suivantes aucune évaluation utilisateur proposée Ankerst Choong Messaoud Messaoud Sureau Algorithme génétique réorganisation cubes Représentation évaluation individus Chaque individu population représente réorganisation possible précisément considère ayant général trois dimensions certaines toutes trois organisées hiérarchiquement Réorganisation hiérarchique visualisation triplet arbres aires correspondant chacune trois dimensions arbre définissons ensemble permutations chaque permutation associée noeud telle permutation locale influence ordre individu représenté trois ensembles permutations chaque dimension évaluation individu mesure homogénéité visuelle chaque cellule calculer similarité voisinage Messaoud Messaoud Cette mesure similarité définie formule vante cellule valeur mesure cellule ensemble cellules voisines voisinage Moore jusqu voisins Finalement luation individu égale valeurs maximum minimum mesure Cette fonction favoriser cubes cellules voisines contiennent valeurs sures similaires Notons cette fonction séparable chaque dimension mesures utilisées évaluation alors obtenue calculant fonction chaque mesure faisant somme valeurs obtenues Opérateurs génération aléatoire mutation croisement générer population initiale considérons affiché moment utilisateur déclenche réorganisation individu représentant organisation celle affichée générer aléatoirement nouveaux individus suffit modifier aléatoirement permutations noeuds arbres Selon paramètres choisis utilisateur individu représentant organisation initiale présent première génération effet utilisateur avoir réorganisé partiellement arbre choix peuvent ainsi compte mutation consiste choisir permutation hasard dimensions modifier probabilité algorithmes mutation implémentés inspirant travaux résolution voyageur commerce rithmes génétiques Larranaga consiste choisir aléatoirement noeuds permutation intervertir consiste choisir aléatoirement noeuds permutation inverser séquence contenue entre noeuds partir individus parents avons défini opérateurs croisement Larranaga combiner permutations croise uniforme chaque couple permutations correspondantes choisit noeud courant autre parents noeud présent enfant alors prend premier noeud suivant parent enfant autre croisement Lafon ordered crossover chaque couple permutations correspondantes finit points coupure aléatoirement noeuds trouvant entre points coupure parents autres noeuds autre parent lorsque positionne noeud enfant celui présent enfant alors prend premier noeud suivant enfant ensemble algorithme sélection utilisée tournoi binaire sélectionner individu choisit hasard garde meilleur insérer nouveaux individus population utilisons méthode steady state Whitley individu généré chaque génération comparé individu population remplace dernier meilleur forme générale algorithme alors suivante Générer population initiale Générer individu méthode steady state Sélectionner individus parents Croisement probabilité pcross sinon Mutation Evaluation insertion éventuelle population nombre maximum individus générés atteint alors sinon Retourner Algorithmes réorganisation niveau niveau considérer moins trois manières différentes appliquer algorithme réorganisation première possibilité consiste réorganiser développé visualisé utilisateur version utilisée défaut notre approche hiérarchie importante affichée premier niveau alors seule premier niveau réorganisé algorithme utilise valeurs mesures agrégées niveaux complètement développés deuxième possibilité consiste réorganiser tenir compte partie affichée développant complè tement hiérarchies dimensions Ainsi hiérarchies complètes trois dimen sions réorganisées troisième possibilité consiste réorganiser niveau niveau servant possibilité agrégation valeurs hiérarchies noeud arbre porte valeur agrégée partir valeurs contenues arbres exécute plusieurs algorithme réorganisation première exécution considère premier niveau chaque hiérarchie valeurs agrégées seconde exécution deuxième niveau ainsi suite évaluation individus évalue obtenu tenant compte niveau considéré exemple réorganise niveau évalue obtenu développant toutes hiérarchies niveau dimension descend niveau considéré utilise évaluation feuilles profondes cette dimension Cette version intéressante permet prendre compte valeurs agrégées peuvent représenter information pertinente Réorganisation hiérarchique visualisation Dimensions Mesure Cellules Store Salary Promotion media Store sales Sales Promotions 17136 Store Promotions sales Sales Product 11730 Store SQRFT sales Sales Product Customer count Store SQRFT sales Sales Product 11592 différents cubes testés évaluation indique dimension niveau considéré optimisation avons défini algorithmes réorganisation niveau niveau cette proche ayant notre connaissance explorée premier algorithme respond notre utilisons exactement algorithme celui mentionné cédemment appelant plusieurs niveau présent notons algorithme Level suite Ensuite avons cherché définir deuxième rithme réorganisation niveau niveau cette utilisant heuristique faisant partie algorithmes pionniers domaine avons sélectionné pendant organiser données hiérarchiques optimiser conjointement dimensions avons alors défini algorithme appelé Level effectue opéra tions suivantes considère dimensions optimise première dimension commençant premier niveau Cette réorganisation ordre noeuds premier niveau Ensuite développe niveau insère noeuds importe quelle position insertion comme algorithme plutôt limitant positions insertions celles fixées niveau précédent Evaluation expérimentale Protocole série expériences réalisée avons abord cherché meilleurs ramètres algorithme génétique Ensuite avons comparé notre approche rithmes concurrents Enfin avons réalisé évaluation utilisateur quantifier pratique intérêt réorganisation utilisateurs impliqués tâches précises expérimentations avons utilisé cubes représentés table partie données tests MondrianFoodMart fournies serveur Mondrian cellules remplies possède rarchies cubes assez éparses cellules ayant valeurs tester mesures titre indicatif taille espace recherche nombre cubes possibles tenant compte hiérarchies ordre Lafon Recherche paramétrage algorithme génétique avons nombreux tests parcourir espace paramètres algorithme génétique choisir paramètres adapté objectifs Parmi paramètres consi dérés avons varier probabilités croisement mutation pcross croisement mutation taille population avons utilisé avons limité nombre individus générés manière exécution ordre minute avons estimé temps ordre grandeur pouvait adapté contraintes ligne sachant notre interface section utilisateur continuer naviguer visualisation exécution algorithme réorganisation tests réalisés moyenne essais résultats avons observé meilleur paramètres pcross croisement croisement révélé équivalent légèrement supérieur mutation supérieure concerne probabilités croisement mutation utilisation systématique opérateurs donne meilleurs résultats explique évolution steady state modifie progressivement population équilibre entre intensifica diversification grâce probabilités élevées opérateurs concerne taille population performances maximales individus valeurs elles tendance diminuer avons gardé paramètres autres tests réalisés suite article Etude comparative avons comparé notre algorithme plusieurs autres méthodes possibles Rappelons littérature aucune méthode réorganisation gérer hiérarchies conséquent choix méthodes concurrentes restreint premier algorithme concurrent simplement génération aléatoire notée RANDOM permet connaître niveau moyen solutions générées hasard deuxième algorithme concurrent algorithme ascension locale climbing fonctionne manière suivante initialn ordonné aléatoirement génère voisin opérateur voisin devient individu initial meilleur celui approche tester principes algorithme génétique efficaces rapport méthode stochastique simple troisième algorithme concurrent Level décrit section appuie heuristique principe agrégation niveaux manière similaire avons testé algorithme génétique travaillant niveau niveau Level Enfin objectif réduire temps exécution essayant garder meilleures performances avons effectué hybridation entre Level ayant principe partir réorganisation utiliser après plutôt avant avons défini algorithme hybride Level lequel optimisé initialement Level ensuite placé population initiale reste population étant généré aléatoirement avons alors cherché diminuer nombre individus générés passant ainsi essayer diviser temps exécution Réorganisation hiérarchique visualisation RANDOM Level Level Level Résultats obtenus différents algorithmes cubes mentionnés table moyenne essais méthode donnée première ligne donne valeur obtenue deuxième ligne donne temps exécution total résultats présentés table constate approche génétique partie systématiquement algorithmes donnant meilleurs résultats performances semblent fiables rapport autres algorithmes certains cubes obtiennent bonnes performances aussi mauvaises autres cubes concerne timisation niveau niveau remarquer cette approche aussi pertinente pensions effet utiliser valeurs agrégées arbre semble guider algorithmes meilleures solutions concerne hybridation Level obtient toujours meilleures performances constater temps exécution nettement diminué Ainsi hybridation semble piste intéressante poursuivre surtout trouve moyen fusionner intégrant comme forme mutation exemple algorithme génétique terme temps exécution Level rapide Cependant fiable performances inégales autre point confirme visuellement aspect cubes obtenus clairement proches optimum Toutefois critère vitesse devient crucial Level intéressant fournir résultat approximatif utilisateur Interface réalisée évaluation utilisateur travaux étudions généralement interfaces visuelles interactives avons ainsi développé prototype VR4OLAP représente comme figure lequel trois dimensions hiérarchiques peuvent représentées ainsi valeurs mesures Cette visualisation interactive nombreux opérateurs intégré forme objets graphiques cliquables cliquant objets utilisateur déclenche opérateurs concerne réorganisation utilisateur déclenche exécution manière incrémentale durant Lafon Illustration notre interface réorganisation entre moins minute ayant environ 10000 cellules utilisateur cliquer première obtenir résultat nouveau souhaite attendre longtemps améliorer résultat cliquer nouveau Ainsi utilisation algorithme génétique vient rallonger outre mesure utilisateur exploration pendant exécution réorganisation utilisateur continuer naviguer avons cherché savoir amélioration mesurée résultats précédents grâce fonction homogénéité correspondait également amélioration perception données utilisateur amélioration performances utilisateur certaines tâches avons défini trois tâches résoudre utilisateurs cette tâche consiste trouver dimension membres ayant comportement mesure tranches identiques avons défini données inspirant MondrianFood fournie serveur Mondrian utilisons VR4OLAP cette tâche consiste trouver membre dimension pique autres avons défini classes membres comportements laires mesure membre trouver celui comportement appartient aucune classes définies cette tâche trouver nombre classes membres dimen avons défini manière similaire précédentes tâches données lesquelles membres appartiennent classes méthodes testées première affiche ordre particulier mensions arbres triés ordre alphanumérique deuxième consiste utiliser algorithme génétique réorganiser chaque tâche chaque méthode testée réponse donnée utilisateur enregistrée pouvoir comparer valeur attendue ainsi mesurer qualité réponse Lorsque utilisateur répond qualité réponse juste qualité réponse intermédiaire mesurons qualité fonction similarité réponse exacte questions temps réponse mesuré questionnaire préalable permet connaître niveau personne concerne questionnaire final permet connaître impressions chaud utilisateur Avant répondre questions laissons utilisateur interagir visualisations familiarise elles Réorganisation hiérarchique visualisation Tâche Méthode Temps Qualité exactes abandons réorg réorg réorg réorg réorg réorg Résultats obtenus évaluation utilisateur différentes tâches réorganisation dernier ordre choisi membres chaque niveau ordre alphabétique obtienne compétences minimales nécessaires répondre questions posées utilisateurs ayant connaissances recrutés niveau résultats présentés table pouvons remarquer amélioration performances utilisateurs visible réorganisation terme qualité terme temps amélioration mesurable fonction homogénéïté respond amélioration visuelle cubes pensons attente minute environ utilisateur justifiée regard amélioration produite terme qualité nombre abandons temps Cette amélioration tâches fixées concerné découverte groupes données aberrantes généraliser autres types tâches faire tests complémentaires Notre étude confirme autres études réalisées survol Garcia utilisateurs apprécié réorganisation automatique visualisations matricielles Conclusions perspectives avons étudié article réorganisation cubes amélio représentations visuelles cubes final performances utilisateur avons proposé nouvel algorithme génétique réorganisation arbres aires optimiser manière conjointe dimensions hiérarchiques données avons étudié paramétrage algorithme obtenir rapport performance temps acceptable cadre analyse ligne avons proposé algorithme heuristique inspiré organiser niveau niveau dimensions hiérarchiques avons étendu algorithme génétique manière tests comparatifs avons montré notre approche génétique compétitive rapport algorithmes domaine limitant temps exécution minute notre approche traite dimensions hiérarchiques avait encore jamais réalisé cadre visualisations cubes données avons intégré différents algorithmes terface avons réalisé évaluation utilisateur montré efficacité réorganisation tâches impliquant détection similarités entre données pensons pouvoir améliorer algorithme génétique selon plusieurs directions abord souhaitons effectuer hybridation rapprochée Level celle Lafon avons testée précisément étudions comment intégrer comme rateur mutation heuristique algorithme génétique Egalement intérêts capacité facilement parallélisés allons étudier comment fonction évaluation couteuse temps calcul implémentée architecture parallèle Notre algorithme pourrait alors obtenir temps calculs compa rables Level qualité résultats nettement améliorée autre interrogation avons porte comparaison approche optimale utilisant programmation dynamique comme joseph Certes complexité cette méthode importante approche optimise dimensions manière conjointe cependant taille cubes affichés reste suffisamment petite telle méthode puisse avoir intérêt Enfin souhaiterions mieux intérêt optimiser dimensions manière conjointe rapport optimisation séparée optimisation conjointe traitée méthodes alors avons montré optimisation séparée comme Level tient compte dépen dances pouvant exister entre lignes colonnes cette problématique aspect utilisateur rentre aussi aimerions savoir différence entre optimisation conjointe optimisation séparée perçue visuellement manière significative Références Ankerst Berchtold Similarity Clustering Dimensions Enhanced Visualization Multidimensional Volume Alamitos Computer Society joseph Demaine Gifford Hamel Jaakkola clustering optimal ordering expression Bioinformatics joseph Gifford Jaakkola Optimal Ordering rarchical Clustering Bioinformatics Barbará Sullivan Quasi cubes exploiting approximations multidimensio databases SIGMOD Messaoud Boussaid Loudcher Rabaséda Multiple Correspondence Analysis Organize Cubes Proceeding conference Databases Information Systems Selected Papers Seventh International Baltic Conference Messaoud Loudcher Boussaid Bentayeb Operator Based Mining Method Sixth International Baltic Conference Databases Information Systems Bertin Graphics graphic information processing Jacques Bertin translated William Scott Gruyter Berlin Caraux Réorganisation représentation visuelle matrice données riques algorithme itératif Revue statistique appliquée Chaudhuri Dayal overview warehousing technology SIGMOD Record Réorganisation hiérarchique visualisation Choong Laurent Marcel Computing appropriate representations multidimensional Knowl Climer Zhang Rearrangement Clustering Pitfalls Remedies Applica tions Journal Machine Learning Research Salley Providing Analysts Mandate Technical report Associates Cuzzocrea Mansmann visualization models issues techniques Encyclopedia Warehousing Mining Fekete Henry Matrix reordering survey Visualisation Summer School Peking University Garcia Huang Seifert Wallisch Literature Survey Reorderable Matrix Larranaga Kuijpers Murga Dizdarevic Genetic rithms Travelling Salesman Problem Review Representations Operators Artificial Intelligence Review Seriation matrix reordering methods historical overview Statistical Analysis Mining McCormick Schweitzer White Problem Decomposition Reorganization Clustering Technique Operations Research Morris Asnake Optimal dendrogram seriation using simulated annealing Information Visualization Sureau Bouali Venturini improving visualizations rearran gement clustering CLADAG first joint meeting Sociï Francophone Classification Classification Analysis Group Italian Statistical Society Vandev Tsvetanova Ordering Hierarchical Classifications Rundensteiner Interactive hierarchical dimension ordering spacing filtering exploration dimensional datasets Symposium Information Visualization Summary paper propose algorithm hierarchical reorganization cubes improving their visualization algorithm characterized deals hierarchically organised dimensions dimensions conjunction genetic algorithm reorganizes trees integrated interface tested comparison other rearrange clustering approaches obtains significantly better results point proposed hierarchical version algorithms Finally approach evaluated users results highlight interest reorganization several tasks