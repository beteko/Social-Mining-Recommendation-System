extraction motifs fréquents arbres attribués claude pasquier jérémy sanhes frédéric flouvat nazha selmaoui folcher université nouvelle calédonie 98851 nouméa nouvelle caledonie jeremy sanhes frederic flouvat nazha selmaoui institut biologie valrose umr7277 inserm u1091 06108 cedex claude pasquier unice unice résumé extraction motifs fréquents tâche importante fouille données initialement centrés découverte ensembles items fréquents premiers travaux étendus extraire motifs structurels comme séquences arbres graphes article proposons nouvelle méthode fouille données consiste extraire nouveaux types motifs partir collection arbres attribués arbres attribués arbres lesquels nœuds associés ensembles attributs extraction motifs appelés arbres attribués combine recherche ensembles items fréquents recherche arbres nécessite plorer immense espace recherche présentons plusieurs nouveaux algorithmes extraction arbres attribués montrons leurs implémenta tions peuvent efficacement extraire motifs fréquents partir grands données introduction extraction motifs fréquents tâche importante domaine fouille données initialement centrée découverte ensemble items itemsets fréquents agrawal premiers travaux étendus extraire motifs structurels comme séquences agrawal srikant arbres 2004a graphes washio motoda alors extraction itemsets fréquents recherche combinaisons fréquentes items extraction motifs structurels recherche structures fréquentes plupart existants focalisent problème fouille itemsets fouille struc turelle toutefois représenter données complexes semble naturel sidérer collections structurées itemsets article introduisons problème fouille arbres attribués arbres attribués arbres lesquels nœuds associés itemsets extraction motifs fréquents arbres attribués arbres attribués peuvent utilisés nombreuses applications fouilles données spatio temporelles études épidémiologiques exemple espace géographique découpé zones représentées nœuds arbre itemsets décrivent caractéristiques zones temps donné arêtes symbolisent relations voisinage autres zones temps suivant motifs fréquent trouvés ainsi susceptible donner éclairage nouveau déterminants pathologie autres applications peuvent imaginées divers domaines comme analyse retweet fouille arbres phylogénétiques fouille documents analyse journaux activité analysis contributions notre travail suivantes présentons problème fouille structures ordonnées ordonnées collection arbres attribués définissons formes canoniques arbres attribués proposons méthode permettant énumération arbres attribués basée combinaison opéra tions extension structure arborescente extension itemsets associés nœuds présentons trois variantes algorithme permettant extraire motifs fréquents arbres attribués montrons résultats expérimentaux effectués plusieurs données artificiels données article organisé manière suivante section présente concepts définit problème section propose aperçu accent quelques études combinent fouille itemsets fouille structurelle section décrit méthode insistant exploration espace recherche calcul fréquences élagage candidats section montre résultats fouille plusieurs données artificiels réels finalement section conclut article présente possibles extensions notre travail concepts généraux définition problème cette section introduisons concepts définitions nécessaires présentons problème fouille arbres attribués préliminaires ensemble items itemset ensemblep items appartenant itemset triés selon ordre lexicographique ensemble itemsets présents données données transactions arbre graphe orienté acyclique connecté lequel ensemble nœuds ensemble arêtes parti culier considéré comme étant racine chacun autres nœuds existe unique chemin allant existe chemin allant alors ancêtre descendant ancêtre direct alors parent enfant arbre ordonné chaque nœuds ordonnés sinon arbre ordonné cette article spécification contraire considérons arbres ordonnés pasquier données entrée arbres attribués communs arbres attribués induits arbres attribués enchâssés exemple données arbres attribués quelques motifs communs arbre attribué triplet représente arbre jacent fonction associe itemset chaque taille arbre attribué nombre items associés ensemble nœuds article utilisons représentation textuelle arbre attribué basée celle définie arbres étiquetés notre représentation distingue écriture nœuds générée listant items présents itemset associé simplicité omettons finaux exemple représentation textuelle arbre attribué illustré figure arbres attribués peuvent comme itemsets organisés selon structure arborescente inclusion arbres attribués définie considérant inclusion itemsets inclusion structurelle inclusion portant itemsets considère arbre attribué contenu autre arbre attribué arbres attribués structure chaque itemset associé inclus itemset correspondant formellement contenu inclusion structurelle quant représentée concept classique arbre balcázar 2004a kawano nijssen termier partir définition précédente généralisons notion arbre attribué façon suivante arbre attribué arbre attribué arbre attribué isomorphe existe correspondance telle arbre attribué super arbre attribué arbre attribué induit arbre attribué isomorphe préserve relation parent enfant arbre attribué enchâssé arbre attribué isomorphe préserve relation ancêtre descendant figure montre exemple données arbres attribués composée trois arbres attribués différents ainsi ensembles motifs communs contenant arbres attribués induits autre arbres attribués enchâssés algorithmes fouille arbres travaillant arbres ordonnés doivent prendre compte problème isomorphisme éviter génération redondante lutions équivalentes arbre choisi forme canonique formes alternatives écartées 2004b nijssen précédents travaux formes canoniques basées ordre extraction motifs fréquents arbres attribués cographique étiquettes nœuds notre travail définissons ordre ordre itemsets associés nœuds etant donné itemsets alors définition précédente ordre portant arbres attribués défini partir ordre forme canonique arbres attribués isomorphes facilement définie utilisant méthode présentée 2004a problème fouille arbres attribués nombre motifs fréquents souvent important applications réelles générer toutes solutions avérer coûteux impossible nombre important solutions contient informations redondantes figure exemple arbre attribué présent toutes transactions motif encodé depuis proposition mannila toivonen importants efforts consacrés élaboration représentations condensées résument toutes solutions ensem restreint ensemble motifs fermés exemple telle représentation conden pasquier arbre attribué arbre attribué fermé aucun super arbres attribués possède support article introduisons autre représentation résumée motifs définie uniquement fonction contenu arbre attribué fermé contenu fermé contenu comme défini précédemment autre arbre attribué support définition problème données arbres attribués arbre attribué fréquence transaction représentée nombre arbres attribués lesquels arbre attribué arbre attribué fréquent fréquence transaction supérieure égale seuil minimum problème consiste énumérer motifs fréquents ensemble arbres attribués premiers algorithmes fouille arbres étiquetés dérivés approche agrawal consistent succession itérations comprenant génération candidats suivie calcul fréquences issue duquel motifs fréquents écartés stratégies possibles génération candidats tension jointure extension nouveau candidat généré ajoutant arbre fréquent nijssen jointure nouveau didat combinant arbres fréquents kawano combinaison principes également étudiée 2004b autres algorithmes fouille arbres dérivés approche growth algorithmes adoptent principe pattern growth permettent éviter coûteux processus génération candidats cependant cette approche adaptée simplement problème fouille arbres implémentations existantes limitées arbres elles peuvent manipuler trouver représentations condensées motifs fréquents extension naturelle fouille motifs fouille itemsets notion fermeture formellement définie pasquier pasquier plusieurs travaux exploré thème contexte fouille arbres proposé méthodes fouille adaptées ainsi diverses implémentations 2004c termier notre connaissance aucune méthode proposée cadre général arbres attribués récemment avons intérêt croissant fouille itemsets organisés selon certaine structure miyoshi travaillent graphes étiquetés attributs quantitatifs associés nœuds structure permet résoudre problème combinant algorithme classique exploration graphe graphe étiqueté algorithme existant fouille itemsets attributs quantitatifs cette approche utilisée attributs associés nœuds importance fukuzaki étudient graphes lesquels nœuds associés itemsets notre travail diffère cette étude recherchons motifs lesquels itemsets associés nœuds forcément identiques fouille arbres attribués fréquents intéressons principalement identification arbres attribués induits donnés focalise arbres attribués induits définissons méthode générale capable extraire également arbres attribués enchâssés énumération arbres attribués utilisant opérateur possible construire arbre candidats représen ensemble espace recherche ayres manière suivante racine étiquetée récursivement chaque terminal ajoutés générés extension arbre extension itemset extension structure arborescente extension structure arborescente extension arbre utilisons technique connue rightmost extension nijssen arbre attribué étendu générer nouveaux arbres attribués façons différentes premier nouveau filsn ajouté terminal situé droite second nouveau frère ajouté nœuds situés chemin droite chehreghani approche classique représente importe valide figurant données notre approche nouveaux nœuds créés partir nœuds valides données faits chaque associé itemset taille génère ensemble nœudsn utilisés extension arbre chaqueni associé itemset taille unique étant exemple nœuds peuvent utilisés extension motif partir trois extensions générées alors génère nœuds génèrent respectivement extraction motifs fréquents arbres attribués extensions trois nouveaux candidats différents ainsi obtenus ajoutant chacune extensions motif candidat arbres ordonnés complétude redondance cette méthode montrée arbres ordonnés méthode générer redondants formes arbres isomorphes candidats dupliqués détectés écartés avant phase extension moyen canonicité extension itemsets associés nœuds extension itemsets associés nœuds extension itemset utilisons variante méthode présentée ayres grâce cette variante nouvel ajouté itemset associé terminal droite arbre attribué candidat items utilisés extension itemset dérivés itemset associé données contrainte nouvel lexicographiquement situé après importe lequel items associés terminal droite calcul fréquences organisons données structure stockant toute information nécessaire processus fouille notre structure extension représentation verticale introduite brièvement chaque arbre attribué candidat associé motif ensemble données annexes permettant localiser précisément toutes occur rences données premiers candidats composés unique associé générés parcourant données utilisant uniquement cette structure facile calculer nombre occurrences chaque motif cette structure suffisante générer toutes extensions possibles motif donné quand motif taille traité toutes occurrences étendues méthodes extension arbre extension itemset décrites générer nouveaux didats taille stockés structure données parcours espace recherche plusieurs techniques peuvent utilisées élaguer espace recherche élagage candidats principe énoncé agrawal vingtaine années pliqué fouille arbres attribués motif motif fréquent fréquent super motif motif fréquent fréquent comme fréquence fonction monotone extension motif donner nouveau motif fréquence supérieure possible arrêter exploration branche lorsque fréquence candidat inférieure support minimum exemple figure durant fouille arbres attribués lorsque détermine fréquence motif férieure support minimum nécessaire générer extensions motif fouille arbres attribués ordonnées extension également stoppée candidat examiné forme canonique pasquier énumération arbres attribués fermés énumérant uniquement arbres attribués contenus autre attribué ayant support espace recherche considérablement réduit énumération arbres attribués fermés nécessite stocker motifs fréquents tifiés ainsi fréquence transaction nombre total occurrences arbre attribué candidat ensemble arbres attribués fréquents identifiés précédemment ensemble candidats générés extension distinguons ensembles ensemble motifs générés extension itemset ensemble motifs obtenus extension arbre définissons fonctions donne fréquence transaction arbre attribué retourne nombre total occurrences arbre attribué fermé cependant identifier extension itemset fréquence transaction permet stopper exploration autres candidats condition supplémentaire suivante également satisfaite figure exemple premier candidat examiné quence transaction extension itemset construisons candidat fréquence transaction comme fermé cependant motif apparaît données alors fréquence occurrence candidat occurrences apparaît itemset contient peuvent éventuellement générer motifs fermés effectivement figure extension droit motif génère candidat fréquence transaction énumération arbres attribués fermés arbre attribué fermé extension stoppée également supprimer arbres attribués fermés stockés motifs arbres attribués fréquence transaction fermeture nécessite effectuer plusieurs tests isomorphisme arbres opérations coûteuses description algorithmes figure illustre structure algorithme commencer ensemble arbres attribués taille construit parcourant données ligne chaque candidat alors traité boucle fonction retourne petit candidat rapport opérateur ligne candidat traité supprimé liste candidats ligne fréquent forme canonique ligne ajouté liste solutions ligne toutes extensions ajoutées liste candidats ligne algorithme implémente méthode élagage proposée section suffisant énumérer toutes solutions espace recherche immense limiter redondances ensemble solutions avons développé algorithme extraction arbres attribués fermés appelé imit_closed reprenant principes extraction motifs fréquents arbres attribués minsup asubtrees while iscanonical minsup while printsolutions algorithme exposés section figure comme montré section algorithme coûteux passe échelle forts cette constatation avons développé imit_content_closed rithme permettant extraction arbres attribués fermés principe présenté section faute place algorithme présenté cependant facilement déduit algorithme imit_closed figure remplaçant supprimant lignes utilisation relation place permet limiter tests inclusion itemsets beaucoup moins coûteux tests morphismes lignes suppriment ensemble solution trouvées précédemment celles contiennent arbre attribué candidat actuellement examiné nécessaire extraction motifs fermés expérimentations montrent troisième algorithme constitue meilleur compromis entre redondance lutions temps exécution résultats experimentaux algorithmes implémentés expérimentations effectuées ordinateur ubuntu processeur intel coretmi5 10ghz mémoire temps exécution incluent phase prétraitement affichage résultats données artificiels avons modifié programme proposé générer arbres tribués différentes tailles itemsets avons utilisé mêmes paramètres nombre arbres avons 10000 avons construit données faisant varier taille itemsets nœuds associés itemsets taille nœuds associés respec tivement itemsets taille nœuds associés itemsets taille variant alors taille itemsets varie pasquier imit_closed minsup asubtrees while iscanonical minsup while printsolutions algorithme imit_closed données journaux activité avons élaboré données partir journal activité notre université cependant étiqueter nœuds pages consultées avons associé ensemble portant contenu pages cette approche permet capturer habitudes navigation utilisateurs structure change données composé arbres annotés itemsets taille évaluation performances figure montre temps exécution imit_content_closed fouille motifs fermés induits ordonnés données artificiels titre paraison avons ajouté figure temps exécution sleuth implémentation référence paradigme extension classes équivalence fouiller imit_content_closed environ sleuth toutes valeurs support petites lesquelles sleuth pénalisé jointure millions motifs fréquents imit_content_closed général sleuth résultats satisfaisants notre algorithme conçu fouiller arbres attribués normal moins performant implé mentations dédiées fouille arbres étiquetés figure montre également fouille arbres attribués demande beaucoup ressources fouille arbres étiquetés différence largement estimée seuls motifs fermés listés extraire motifs génère grand nombre extraction motifs fréquents arbres attribués sleuth support temps exécution imit_content_closed extraire motifs fermés induits ordonnés partir données artificiels feuille5 motifs fermés motifs fermés motifs temps motifs fermés temps motifs fermés temps motifs support fouille motifs induits ordonnés versions données lutions prend énormément temps donner fouille données support minimum génère millions motifs heures figure rechercher uniquement arbres fermés permet réduire motifs temps exécution ainsi support minimum motifs fermés identifiés secondes comme illustré figure recherche motifs fermés permet réduire encore nombre motifs support emple nombre motifs tombe cependant cause tests coûteux isomorphisme arbres contrepartie performances effondrent lorsque motifs nombreux figure montre temps exécution nombre motifs fermés trouvés données journaux activité données important utilisés précédemment fouille réalisée raisonnablement support inférieur fouille support retourne motifs heures conclusion perspectives article avons introduit problème fouille arbres attribués avons exploré méthodes permettant énumérer motifs fréquents seulement fermés méthodes révélées inefficaces cause premier nombre pasquier feuille1 10000 15000 20000 25000 nombre motifs fermés temps exécution support utilisation imit_content_closed extraire motifs fermés induits ordonnés données journaux activité important motifs retournés second tests isomorphisme avons finalement proposé énumérer motifs fermés constituent représentation concise arbres attribués fréquents définie fonction inclusion itemsets cette représentation permet réduire drastiquement nombre motifs retournés temps exécution avons évalué performances imit_content_closed gorithme fouille motifs fermés montré permet fouiller données contenant plusieurs milliers arbres attribués futur travail possible consiste développer algorithme permettant fouiller manière efficace arbres attribués fermés autre possibilité développer méthodes similaires fouiller structures complexes comme graphes attribués remerciements travail financé contrat foster références agrawal imielin swami mining association rules between items large databases sigmod agrawal srikant mining sequential patterns kawasoe arimura sakamoto arikawa efficient substructure discovery large structured ayres flannick gehrke sequential pattern mining using bitmap representation balcázar bifet lozano mining frequent closed rooted trees learn chehreghani efficiently mining unordered trees muntz nijssen 2004a frequent subtree mining overview fundam muntz 2004b hybridtreeminer efficient algorithm mining frequent rooted trees trees using canonical ssdbm extraction motifs fréquents arbres attribués muntz 2004c cmtreeminer mining closed maximal frequent subtrees pakdd fukuzaki kashima finding itemset sharing patterns large itemset associated graph pakdd mining frequent patterns without candidate generation kawano amiot induced ordered mining structured databases mannila toivonen multiple frequent condensed representa tions miyoshi ozaki ohkawa frequent pattern discovery single graph quantitative itemsets workshops nijssen efficient discovery frequent unordered trees first international workshop mining graphs trees sequences pasquier bastide taouil lakhal discovering frequent closed itemsets association rules termier rousset sebag dryade approach discovering closed frequent trees heterogeneous databases termier rousset sebag ohara washio motoda dryadepar efficient robust closed attribute mining algorithm trans knowl efficient pattern growth methods frequent pattern mining pakdd washio motoda state graph based mining sigkdd explor newsl dunham efficient mining maximal frequent subtrees efficiently mining frequent trees forest efficiently mining frequent embedded unordered trees fundam summary frequent pattern mining important mining broad range applica tions initially focused discovery frequent itemsets studies extended structural forms sequences trees graphs paper introduce method consists mining patterns collection attributed trees attributed trees trees which vertices associated itemsets mining patterns which combines mining itemset mining requires exploration search space present algorithms attributed trees mining their plementations efficiently frequent patterns large datasets