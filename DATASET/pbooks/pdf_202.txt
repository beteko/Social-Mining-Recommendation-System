Requêtes discriminantes exploration données Julien Cumin Petit Fabien Rouge Vasile Marian Scuturici Christian Surace Sabina Surdu LIRIS 69621 Villeurbanne prenom Marseille prenom Résumé profils utilisateurs deviennent diversifiés données complexes rendant souvent difficile exploration données article proposons nique réécriture requêtes aider analystes formuler leurs inter rogations explorer rapidement intuitivement données intro duisons requêtes discriminantes restriction syntaxique condition sélection dissocie exemples positifs négatifs construisons ensemble données apprentissage exemples positifs correspondent résultats souhaités analyste exemples négatifs utilisant techniques apprentissage automatique requête initiale reformulée nouvelle requête amorce proces itératif exploration données avons implémenté cette prototype avons expérimentations domaine astrophysique Introduction aspects encore relativement étudié porte exploration inter active données plaçons cadre données scientifiques relevant accessibles comme communément nombreux domaines astrophysique biologie analyste exploitant données passer temps important construire requête sélection données intérêt Nandi Jagadish précise temps passé construire requête beaucoup important temps exécution cette requête partant constat nouveau paradigme interaction utilisant données existantes données guider processus construction requête analyste finer successivement requête fonction résultats obtenus arriver solution convenable données scientifiques précisément commun avoir relations plusieurs centaines attributs plupart valeurs numériques issues mesures siques critères sélection données toujours facilement exprimables attributs existants table exemple astrophysicien vouloir sélectionner Requêtes discriminantes exploration données Empno Lastname Workdept Educlevel Bonus Mgrno MANAGER 52750 THOMP MANAGER 41250 FINANCE 38250 GEYER MANAGER 40175 STERN 32250 PULASKI 36170 HENDER 29750 LAUREL FINANCE 26150 Exemple illustratif Chardin étoiles autour desquelles orbitent potentiellement planètes données attributs principalement magnitude amplitude variations luminosité Définir seuils adéquats attributs numériques condition sélection passer outils fouille données réelle difficulté analyste illustrer intuitivement notre approche présentons exemple donné figure seule relation attribut Educlevel représente nombre années éducation formelle salaire annuel Bonus bonus annuel commission annuelle signification autres attributs immédiate quelques valeurs manquantes dénotées symbole Imaginons cherchions femmes bonus supérieur responsable hiérarchique correspondant requête suivante SELECT Empno Lastname Bonus WHERE Bonus SELECT Bonus WHERE Empno Mgrno tuples correspondant vérifient cette condition allons développer papier cette requête aurait formulée comme SELECT Empno Lastname Bonus WHERE EducLevel constatons Cette requête différente requête initiale intervenir nouvel attribut EducLevel comporte imbrication toujours partie résultat efficace parcours relation nécessaire volumes données évidemment primordial équivalente introduisant forme diversité résultats dernier tuple LAUREL retrouve uniquement résultat nouvelle requête Problème abordé Notre souhaitons construire interaction Système Gestion Bases Données permettant analyste explorer données requêtes processus itératif seulement guider aussi prendre compte retours guider processus effet intuition Homme apparaît aussi importante outils techniques analyser données Aujourd principaux outils analyse fouille données manquent interactivité apparaissent comme tunnels intérieur desquels possible savoir passe traitement données supposé ensuite seulement techniques fouille données peuvent mettre œuvre outil différent obligeant passer environnement autre réelle continuité pensons utile rapprocher étapes permettre interaction beaucoup fluide entre conception requêtes fouille données Etant donnée requête données facilement définir exemples positifs partir réponses correspondent tuples recherchés Cumin analyste question alors définir serait exemple négatif tuples analyste voudrait apparaitre résultat Autrement comment requête apparenterait négation génération cette requête avère possible disposerions alors ensemble tuples exemples résultats luation ensemble tuples contre exemples issus évaluation alors naturel utiliser méthode fouille données approche apprentis supervisé motifs tuples particulier considérons approches arbres décisions lesquels modèles appris directement interprétables conditions sélection Contributions papier introduisons nouvelle condition syntaxique quête permet définir exemples positifs négatifs partir telle requête montrons possible construire apprentissage partir duquel pouvons proposer automatiquement analyste nouvelle requête Cette requête générée système intéressante analyste processus exploratoire puisque résultats cette requête forment ensemble proche néanmoins différent incluant nouveaux tuples étaient priori accessibles directement processus alors répéter certain nombre jusqu analyste satisfait résultat obtenu proposons aussi mesures évaluer qualité réécriture notamment diversité terme tuples retournés prototype nommé développé mettre œuvre cette approche avons expérimenté bases données issues astrophysique évaluer tinence cadre exploration données détaillons notre validation données destinées étude structure interne étoiles recherche exoplanètes extra solaires résultats préliminaires avons obtenus encourageants démontrent cette pourrait avérer utile analystes données informaticiens formation exploration interactive données raison émergence récente probléma tiques liées domaine recherche plein essor certain nombre articles littérature présentent particulier approches exploration basées réécriture requête apprentissage automatique esprit proposé article Query Morphing proposée Kersten auteurs proposent utilisateur données supplémentaires modifications faibles requête initiale rapport cette approche proposons exploiter ensembles exemples contre exemples requête initiale utilisateur obtenir nouvelle requête règles apprises ensembles semble effet difficile définir méthode modification faible requête suffisamment générale convenir toutes conditions sélection surtout toutes données manière similaire Dimitria proposent système exploration données apprentissage automatique tuples exemples contre exemples méthode génération nouvelles règles sélection proche celle présentée utilisant règles apprises arbre décision génération exemples apprentissage fondamen Requêtes discriminantes exploration données talement différente notre méthode système proposé Dimitriadou demande utilisateur labelliser manuellement tuples constituer ensembles apprentis chaque étape réécriture système proposé Bonifati utilise également notion tuples exemples tuples contre exemples aider utilisateur formuler requêtes jointure aussi ensembles exemples contre exemples issus labellisation tuples faite manuellement utilisateur proposons article obtenir ensembles exemples contre exemples automatiquement partir requête initiale demander intervention utilisateur proposition découvrir requêtes possibles partir ensemble tuples identifiés utilisateur libérant totalement celui travail formu lation requêtes nombre requêtes générées néanmoins grand contraire proposons prennent compte exemples positifs donnés utilisateur DataPlay Abouzied utilisateur formuler requête tifiée exploratoire utilisateur encore labelliser ensembles tuples exemples contre exemples alors notre approche aucune action utilisateur tuples nécessaire Query Example Zloof langage graphique monde relation permettant spécification requêtes interface graphique génère automa tiquement facilite formulation requête permet construire automatiquement requête partir ensemble données Query Examples permet utilisateurs écrire requêtes montrant successivement couples résultats issus données légèrement différents ensemble initial fourni utilisateur intervention utilisateur néces saire chaque itération identifier résultat correct cible après auteurs utilisateurs niveau expertise faible outre utilisateur fournir premier résultat alors notre approche exploratoire requête réécrite présentera utilisateur tuples supplémentaires diversifiés rapport résultat initial Requêtes discriminantes négation introduisons brièvement notations utilisées suite papier Abite détails considère données définie schémaR requête résultat évaluation suppose aussi données peuvent comporter valeurs nulles elles toutes simplifier présentation considère algèbre relationnelle comme langage relation façon équivalente représentation exemples supposera requêtes forme suivante utilisant opérateurs sélection ensemble attributs projection formule jointure formules sélection définies induction comme usuellement partir opérateurs logiques parenthèses admettra comme formule atomique expressions forme pratique pourrions avoir requêtes générales admettant exemple requêtes imbriquées comme exemple introduction résultats proposons restent valides étude cependant portée article Cumin tributs valeur réelle opérateur binaire usuel ensemble attributs apparaissant formule sélection question intéresse définir ensemble tuples vérifient requête proposons simplifier problème introduisant nouvelle condition syntaxique formule sélection exprimer comme conjonction formules appelée condition discrimination condition classique Cette restriction syntaxique étant simple gardons grande expressivité classe requêtes traitées Définition condition discrimination condition sélection classique cepté comporte formule atomique testant valeurs nulles existence valeurs manquantes attributA permet dissocier tuples utilisant conditions raison exclusion attributs condition discrimination Définition requête discriminante celle exprime forme condition discriminante formule conque éventuellement exemples positifs notés issus résultat évaluation requête criminante gardons attributs possibles projection exemple introduction requête réécrite rendre compatible notations serait SELECT Empno Bonus WHERE Bonus Bonus Mgrno Empno comme condition discrimination exemples positifs tuples correspondant Définition requête discriminante négation notée définie notons considérée comme étant clause discrimination exemples celle contre exemples commune permet restreindre ensemble tuples utilisables exemples contre exemples jetons résultat garder attributs possibles discriminer valeurs façon analogue exemples positifs exemples négatifs notésE vérifient exemple précédent négation requête donnerait SELECT WHERE Bonus Bonus Mgrno Empno Requêtes discriminantes exploration données Empno Lastname Workdept Educlevel Bonus Mgrno Class MANAGER 52750 FINANCE 38250 GEYER MANAGER 40175 STERN 32250 apprentissage employés GEYER STERN ainsi considérés comme exemples négatifs pouvons maintenant construire données apprentissage précisément répondre requête aider analyste formuler manière différente requête corresponde mieux attentes étapes tâtonnement nécessitent prendre compte toutes données celles volumineuses Définition Etant donnée requête discriminanteQ négationQ apprentissage défini schéma Class tuples issus ajout valeur attribut Class gardons attributs utilisés apprendre condition lection exprimée requête initiale continuant exemple obtient décrit Figure attribut supprimé attribut Class ajouté labels correspondants Réécriture requêtes discriminantes présentons cette partie phase apprentissage automatique motifs tuples leurs transcriptions condition sélection relationnelle portons également différentes métriques permettant évaluer qualité réécriture requête initiale processus Apprentissage supervisé condition sélection utilisons notre approche arbre décision Quinlan permettant prédire valeur attribut Class fonction ensemble attributs apprentissage partir arbre décision relativement direct construire condition sélection relationnelle parcourant profondeur effet branche parcours direct racine feuille comme conjonction conditions booléennes valeurs attributs tuple laquelle classe tuple celle labellisée feuille branche ensemble branches aboutissant classe tuples positifs comme disjonction clauses conjonctives issues branches utilisé comme nouvelle condition sélection relationnelle Définition Soient apprentissage requête discriminante formule sélection forme arbre décision appris partir prédire valeurs attribut Class branche positive racine feuille labellisée forme attribut opérateur binaire usuel valeur numérique Cumin Ensembles tuples manipulés processus réécriture exemple précédent arbre décision trouver condition Educlevel équivalente requête SELECT Empno Lastname Bonus WHERE EducLevel Définition requête discriminante nouvelle requête issue notée définie σFnew appellera requête transmutée suite Cette nouvelle requête condition lection complètement nouvelle porter attributs identifiés comme utiles requête initiale Mesure qualité entre requête initiale requête transmutée difficile garantir relations précises entre requête initiale réécriture puisque celle dépend motifs découverts phase apprentissage revanche illustrer graphique ensembles tuples cours processus réécriture ainsi résul souhaitables ensembles figure ensemble tuples dénoté simplifier notations notera place respectivement aussi cardinal ensemble cette représentation visuelle données manipulées possible expliciter certain nombre critères permettant juger qualité requête obtenue partir Représentativité données initiales Notre objectif aboutir requête évaluation représentative résultats processus apprentissage super place utilisant exemples contre exemples attendre obtenir motifs permettant respecter critère mesurer concrètement critère formules suivantes optimal optimal Requêtes discriminantes exploration données équation justifie représentativité directe données obtenues obtenues devrait optimalement retrouver tuples manière similaire équation permet mesurer proportion tuples obtenus trouvés faible possible critères optimaux requête transmutée exemple Critère diversité objectif processus réécriture aboutir requête proche requête initiale utilisateur mesurable critère précédent répondre également attente exploratoire utilisateur présenter nouveaux tuples important ensemble nouveaux tuples seulement aussi taille pertinente petite rapport données obtenues initialement utilisateur équation comparable taille semble total tuples équation puisque dernier probable résultat difficile interpréter utilisateur critère notre exemple avons nouveau tuple LAUREL résul requête transmutée trois tuples nombre comparable regard tuples initiaux critère moins nombreux tuples possibles critère Implémentation avons implémenté notre proposition prototype nommé application implémentée Scala Javascript autour framework données stockées serveur Oracle utilisons classifieur implémentation algorithme Quinlan disponible bibliothèque propose utilisateur interface permettant interagir données spécifiant manière différentiée condition discriminante condition sélection cette étape analyste sélectionner attributs haite utiliser phase apprentissage proposés attributs paraissent condition discriminante prévoyons trier attributs suivant différents critères aider analyste choix difficile nombre attributs grand parcourant profondeur arbre décision appris générons requête réécrite comme présentée précédemment évaluation cette requête alors présentée forme anneaux Figure premier anneau permet visualiser proportions globales tuples exemples contre exemples nouveaux tuples obtenus évaluation deuxième troisième anneaux représentent directement critères représentativité donnés respectivement formules permettant faire visuelle qualité réécriture requête initiale dernier anneau permet utilisateur visualiser critères diversité donnés formules permettant juger qualité exploratoire réécriture noter utilisateur aucun moment besoin changer vironnement travail continue manipuler données façon complètement Cumin transparente naturellement possible faire processus utilisant outils appren tissage fouille données externes effort beaucoup important analyste nécessitant changement outils systèmes Application données scientifiques Notre application porte données issues projet européen CoRoT observé pendant plusieurs années étoiles notre galaxie étude étoiles découverte planètes extra solaires échantillon EXODAT extrait créer tests homogène constitué 97717 tuples ayant attributs attributs représentent entre autre position étoile magnitudes différentes longueur degré activité attribut particulier permet qualifier présence planètes autour étoile attribut nommé Object prendre trois valeurs distinctes présence planètes autour étoile considérée planètes autour étoile considérée présence planètes autour étoile étudiée objectif cette expérimentation obtenir liste étoiles peuvent potentiel lement abriter planètes requête initiale simple suffit sélectionner tuples valeur attribut object obtenons ainsi étoiles lesquelles présence planètes confirmée Initialisation cette application souhaitons identifier certaines conditions permettent discriminer présence planètes étoiles encore diées partir étoiles lesquelles présence absence planètes confirmée requête utilisateur ayant objectif pourrait initialement SELECT MAG_V MAG_B MAG_U EXOPL WHERE OBJECT OBJECT condition sélection OBJECT représente notre condition discrimination OBJECT condition Construction partir cette requête initiale prototype Figure génère requête permettant extraire exemples contre exemples exemples contre exemples 97717 tuples compte données plupart étoiles classifiées valeur nulle attribut Object Apprentissage utilisateur moment sélectionner attributs souhaite compte apprentissage règles exemples contre exemples notre périmentation échange rapide physiciens travaillant mêmes données ressortir différents attributs magnitudes amplitudes données pertinentes étudier relatives lumière observée différents filtres longueurs ondes partir cette information experte facilement exploitable avons espace quelques minutes essayé quelques ensembles attributs lesquels faire apprentissage présent expert sélectionné attributs MAG_B AMP11 AMP12 AMP12 AMP13 AMP14 apprentissage alors lancé ressortir arbre décision généré règle suivante extraite MAG_B AMP11 001717 grâce quelle système propose nouvelle requête Figure cesam exodat Requêtes discriminantes exploration données Interface requêtage prototype Arbre décision appris requête transmutée générée après avoir sélectionné attributs MAG_B AMP11 AMP12 AMP13 AMP14 Évaluation résultats évaluer pertinence requête trouvée rapport requête initiale avons présenté résultats experts astrophysiciens férentes proportions obtenues Figure montrent cette requête semble discriminer ensemble exemples rapport contre exemples faisant ressortir nouveaux tuples table Clairement exemples étaient simplement analyste condition AMP11 001717 MAG_B avait chance germer cette étape exploration données système trouvé montre limites détectabilité instruments actuelles effet magnitudes supérieurs étoiles faibles indispensable avoir amplitudes variabilité étoile inférieurs 001717 lumière émise étoile avoir variabilité faible tuples représentant étoiles autour desquelles présence planète étudiée peuvent cibles prioritaires étude proximité espace exploration données ensemble étoiles autour desquelles présence planète confirmée Intérêt Astrophysique Cette approche importante plusieurs points abord parce échantillon étoiles comportant planètes petit rapport nombre étoiles existant notre propre galaxie approche proposée permet guider cherches étoiles auraient faciles identifier priori autre trophysique comme toute science observation comporte beaucoup données erronées entachées incertitude Elles possèdent beaucoup valeurs couverture assez disparate attributs projet observation autre Cumin Cette approche permet limiter importance valeurs nulles favorisant valeurs connues Évaluation proportions requête transmutée figure Rapidité simplicité utilisation objectifs majeur système poser système simple interactif rapide utilisation obtenir tuples peuvent intéresser utilisateur expérimentation présentée justifie atteinte objectif évitant notamment utilisateur devoir jongler constamment entre système gestion bases données outil fouille données Conclusion discussion avons présenté approche répondre enjeux formuler façon interactive requête correspond analyste recherche efficace exécuter données gigantesques partir requête initiale utilisa expert avons montré était possible obtenir ensemble exemples contre exemples permettant alimenter processus apprentissage arbre décision modèle appris permet réécriture directe requête initiale utilisant règles obtenues Cette nouvelle requête processus apprentissage renvoie résultats proches requête initiale utilisateur également évaluer qualité globale écriture requête métriques comparant exemple nouvelles données obtenues nombre tuples requête initiale retrouvés application développée permis tester approche données scientifiques astrophy sique retours astrophysiciens prometteurs approche correspond façon travailler formulation hypothèse raffinement successif fonction données disposition intégrer façon transparente techniques apprentissage séparer analyse entre systèmes différents système analyse données aussi rupture importante façon travailler Comme perspective possible solliciter analyste choisir condi discriminante étudier différentes classes connues requêtes pourra aussi considérer autres types motifs hypothèse motif requête donnée notion exemples contre exemples semble relativement universelle Remerciement travail financé projet Petasky programme Mastodon mission interdisciplinarité isima Petasky Requêtes discriminantes exploration données Références Abiteboul Vianu Foundations Databases Addison Wesley Abouzied Hellerstein Silberschatz Playful query specification dataplay Endow Bonifati Ciucanu Staworko Interactive query inference PVLDB Chardin Coquery Pailloux Petit query language discovering meaningful rules Dimitriadou Papaemmanouil Explore example automatic query steering framework interactive exploration SIGMOD Frank Holmes Pfahringer Reutemann Witten mining software update SIGKDD Explor Newsl Kersten Idreos Manegold Liarou researcher guide deluge Querying scientific database seconds PVLDB Maier Query examples iterative driven approach query construction PVLDB Nandi Jagadish Guided interaction Rethinking query result paradigm PVLDB Quinlan Programs Machine Learning Morgan Kaufmann Chakrabarti Chaudhuri Novik Discovering queries based example tuples Proceedings SIGMOD International Conference Management SIGMOD Zloof Query example language Summary essential explore unearth knowledge profiles become increasingly diverse complex become progressively explore Analysts access gigantic scientific through paper propose rewriting technique formulate queries rapidly intuitively explore introduce discriminatory queries syntactic restriction selection condition dissociating positive negative examples construct learning dataset whose positive examples correspond results desired analysts negative examples those reformulate initial query using machine learning techniques obtain query efficient diverse propose measures evaluate rewriting quality support approach developed prototype commercial conducted experiments astrophysicists