Extraire motifs minimaux efficacement profondeur Arnaud Soulet François Rioult Université François Rabelais Tours Campus Blois 41000 Blois arnaud soulet tours Université Basse Normandie GREYC Campus Nacre 14000 francois rioult unicaen Résumé représentations condensées objet nombreux travaux depuis Tandis motifs maximaux classes équivalence beaucoup attention motifs minimaux restés ombre notam cause difficulté extraction papier présentons cadre générique concernant extraction motifs minimaux introduisant notion système minimisable ensembles permet considérer gages variés comme motifs ensemblistes chaînes caractères aussi différentes métriques fréquence Ensuite importe minimisable ensembles introduisons minimalité rapide permettant extraire profondeur motifs minimaux démontrons algorithme proposé polynomial delay polynomial space expérimen tations benchmarks traditionnels complètent notre étude Introduction minimalité concept essentiel extraction motifs fonction langage motif minimal valeur distincte celle chacun ensembles collection motifs minimaux constitue représentation condensée adéquate possible retrouver importe motif Typiquement ensemble itemsets libres Boulicaut représen tation condensée itemsets respectivement fréquence langage itemsets souvent efficace extraire motifs minimaux plutôt totalité motifs motifs minimaux nombreuses applications utiles notamment extraction connaissances production bases règles associa construction classifieurs génération traverses minimales minimalité étudiée différentes fonctions comme fréquence Calders fonctions condensables Soulet Crémilleux langages variés itemsets Boulicaut séquences minimalité avantages évidents reste explorée comparaison malité motifs fermés particulier notre connaissance existe cadre suffisamment général comme celui proposé Arimura maximaux Extraire motifs minimaux efficacement profondeur pensons inconvénients importants motifs minimaux réside difficile extraction efficacité limitée algorithmes existants découle principalement approche niveaux Boulicaut Soulet Crémilleux Casali largeur méthode générer tester Comme stockent candi niveau mémoire durant phase génération extraction échouer manque mémoire éviter écueil semble préférable adopter parcours profondeur souvent consomme moins mémoire restant rapide Cependant vérifier minimalité satisfaite vraiment difficile parcours profon fréquence itemsets meilleure façon évaluer minimalité motif disons comparer fréquence celle généralisations directes quand parcours profondeur atteint motif seules quences précédemment calculées Comme fréquences connues impossible vérifier fréquence strictement inférieure celle résoudre problème Calders Goethals Szathmary adopté parcours profondeur énumérant items ordre inverse exemple quand itemset atteint nouveau parcours précédemment parcourus leurs fréquences connues minimal Malheureusement telle méthode requièrt stocker nombreux motifs mémoire utilisant Calders Goethals table hachage Szathmary cette raison propositions existantes profondeur faites Calders Goethals Szathmary résolvent problème consommation mémoire Contributions objectif principal article présenter cadre générique ficace extraction motifs minimaux proposant algorithme profondeur consommateur mémoire introduisons notion système minimisable sembles coeur définition notre cadre dernier couvre large spectre motifs minimaux incluant langages mesures étudiés Soulet Crémilleux Arimura vérification rapide minimalité parcours profondeur réalisée grâce notion objets critiques définition découle système minimisable ensembles considéré appuyant cette nouvelle technique proposons algorithme DEFME extrait motifs minimaux système minimi sable ensembles utilisant parcours profondeur notre connaissance premier algorithme énumère motifs minimaux polynomial delay consommation linéaire espace rapport données initial Système ensembles motifs minimaux Définitions système ensembles collection ensembles ensemble ensemble parties membre appelé ensemble acceptable système ensembles fortement accessible système ensembles ensembles acceptables satisfaisant existe élément entendu itemsets rentrent cadre système utilisons notation dénoter Soulet Rioult ensembles ensemble items fortement accessible notion système ensembles permet également considérer langages sophistiqués exemple facile construire ensemble dénotant collection chaînes abracadabra encodant chaque chaîne ensemble système ensembles aussi fortement accessible systèmes ensembles utilisés plusieurs reprises décrire problèmes extraction motifs Arimura Intuitivement motif décrit toujours ensemble objets motif donné ensemble objets obtenu biais opérateur couverture formalisé ainsi Définition Opérateur couverture ensemble objets opérateur verture satisfait Cette définition indique couverture union motifs correspond exacte intersection leurs couvertures itemsets opérateur couverture naturel extension itemset retourne identifiants tuples contenant couverture permet surtout dériver informations utiles cardinalité correspond fréquence contexte chaînes liste index chaîne définit également opérateur couverture Continuons notre exemple chaîne abracadabra quelques listes index vérifie alors certains langages motif décrit plusieurs ensembles distincts alors nécessaire avoir forme canonique éviter extraire plusieurs exemple Typiquement considérons ensemble correspondant chaîne suffixe désigne chaîne notre forme canonique premier élément commence retrouver forme canonique motif introduisons nouvel opérateur Définition Opérateur canonique Etant donnés systèmes ensembles opérateur canonique fonction satisfaisant ensembles cette définition propriété garantit formes canoniques sembles comparables inclusion restent comparables propriété signifie système ensembles inclut toutes formes canoniques Continuons encore notre exemple chaînes constater satisfait propriétés désirées exemple retourne forme canonique Système minimisable ensembles Plutôt considérer système ensembles intégralité avérer dicieux sélectionner partie apporte quantité information opérateur couverture nécessaire système ensembles opéra couverture forment système minimisable ensembles Extraire motifs minimaux efficacement profondeur Définition Système minimisable ensembles système minimisable ensembles tuple système ensembles fortement accessible ensemble acceptable appelé motif système ensembles fortement accessible satisfaisant chaque couple ensembles acceptables chaque élément ensemble acceptable appelé généralisation opérateur couverture opérateur canonique chaque ensemble acceptable Illustrons maintenant rapport chaînes regroupe suffixes importe motif Typiquement généralisation Comme dessus forme équivalente convention étendons définition considérant satisfait propriété désirée rapport ensembles acceptables chaque élément effet suffixe signifie première lettre considérons spécialisation retirons première lettre obtenons aussi suffixe appartient conséquent minimisable évidemment système minimisable ensembles réduit système cardinalité inférieure motifs appelés motifs minimaux Définition Motif minimal motif minimal chaque généralisation telle dénote ensemble motifs minimaux définition signifie motif minimal couverture diffère celle toutes généralisations exemple opérateur couverture minimaux couverture strictement petite celles leurs généralisa tions chaîne minimale cause suffixe notre exemple collection chaînes minimales Etant donné système minimisable ensembles extrac motifs minimaux consiste énumérer motifs minimaux Énumération motifs minimaux cette section proposer methode extraction profondeur motifs minimaux section appuyons idées principales élagage espace recherche section vérification rapide minimalité section Auparavant important rappeler motifs minimaux suffisent déduire couverture motif considérons désormais système minimisable ensembles motifs minimauxM consituent représentation perte motifs Soulet Rioult Théorème Représentation condensée ensemble motifs minimaux représen tation condensée adéquate calcul motif existe théorème signifie couverture motif déduite preuves omises manque place exemple couverture motif minimal égale celle motif minimal préférable extraireM plutôt taille petite celle système complet Élagage espace recherche premier problème auquel sommes confrontés plutôt classique Étant donné système minimisable ensembles nombre motifs général grand atteint absolument nécessaire parcourir espace recherche exhaustivement concentrer motifs minimaux Heureusement techniques efficaces peuvent utilisées élaguer espace recherche grâce propriété monotonie contrainte minimalité Théorème Système indépendant motif minimal alors motif satisfaisant aussi minimal preuve théorème fortement dépendante lemme indiquant motif minimal généralisation directe possédant couverture Lemme mininal exemple comme chaîne minimale chaînes également outre comme minimal chaîne signifie chaîne point rupture espace recherche pratique élagage monotonie reconnu comme outil puissant quelque parcours espace recherche niveau profondeur Vérification rapide minimalité difficulté principale extraction motifs minimaux tester motif nimal Comme mentionné précédemment particulièrement difficile parcours profondeur ensembles motif tester énumérés effet approches profondeur accès branche parente contraire approches niveau résoudre problème introduisons concept objets tiques inspiré celui hyper arête critique introduit calcul traverses minimales Murakami Intuitivement objets critiques élément motif objets couverts donnons maintenant définition formelle objets critiques dérivant rateur couverture quelconque Extraire motifs minimaux efficacement profondeur Définition Objets critiques motif objets critiques élément notés ensemble objets appartiennent couverture privé couverture Illustrons concept objets critiques notre exemple objets critiques élément correspondent signifie ajout impact couverture revanche motif objets critiques cause élément couvre objets objets critiques centraux notre proposition objets critiques caracté risent facilement motifs minimaux objets critiques peuvent calculés efficace algorithme profondeur Caractérisation minimalité réciproque lemme indique motif minimal couverture diffère celle généralisations pouvons reformuler cette définition grâce notion objets critiques Propriété Minimalité minimal Typiquement comme généralisation chaîne minimal propriété signifie tester candidat minimal néces connaissance objets critiques relativement éléments différence définition traditionnelle nécessaire disposer informations ensembles objets critiques permettent concevoir algorithme profon seulement calcul objets critiques requiert informations ensembles Calcul efficace objets critiques Selon parcours profondeur voulons mettre objets critiques élément motif lorsqu nouvel élément ajouté montrons objets critiques peuvent calculés efficacement intersection objets critiques couverture nouvel élément Propriété égalite suivante vraie motif élément exemple définition donne Comme obtient intéressant noter propriété permet calculer objets critiques élément motif disposant information seule branche parcours situation idéale conception algorithme profondeur Algorithme DEFME algorithme DEFME prend entrée motif courant queue éléments restant vérifier retourne motifs minimaux contenant basés cisément ligne teste minimal minimal affiché ligne lignes explorent arbre contenant selon queue chaque élément Soulet Rioult lequel motif ligne propriété branche construite informations nécessaires ligne couverture lignes calculent objets critiques utilisant propriété Enfin fonction DEFME appelée récursivement ligne queue ligne Algorithm DEFME Input motif ensemble items restant utiliser générer candidats Valeurs initiales Output calcule motifs minimaux manière incrémentale polynomiale print DEFME théorèmes montrent algorithme DEFME possède comportement terme espace temps calcul Cette efficacité découle calcul écono mique couvertures objets critiques ainsi propriété suivante explique Propriété motif propriété signifie motif stockage couverture celui objets critiques majoré nombre total objets déduction espace mémoire nécessaire algorithme directe Théorème Complexité polynomiale espace énumerable espace longueur maximale solution pratique espace mémoire utilisé algorithme limité petit outre delai entre motifs polynomial Théorème Complexité polynomiale délai énumerable temps motif minimal DEFME requiert nombre polynomial opérations entre motifs supposant oracle appartenance temps polynomial ligne effet calcul couverture celui objets critiques lignes linéaire nombre objets grâce propriété boucle ligne excède itérations finalement nombre retours arrière consécutifs Étude expérimentale expériences quantifier bénéfice apporté DEFME efficacité concision montrons efficacité extraction motifs Extraire motifs minimaux efficacement profondeur libres laquelle plusieurs prototypes existent littérature Ensuite utilisons DEFME extraire collection chaînes minimales comparons taille celle chaînes maximales tests effectués machine Linux dotée processeur Opteron Extraction motifs libres avons réalisé prototype DEFME extraction motifs ensemblistes preuve concept avons comparé autres prototypes ACMINER algorithme niveaux Boulicaut utilisant parcours profondeur réordonnant items Calders Goethals avons réalisé expérimentations données Discovery Challenge trois premières colonnes table donnent caractéristiques données trois colonnes suivantes indiquent temps exécution trois dernières indiquent consommation mémoire temps mémoire données objets items minsup ACMINER DEFME ACMINER DEFME 74x822 échec échec échec échec 90x27679 échec échec échec échec chess connect pumsb pumsb 21267 Caractéristiques données résultats extraction motifs libres meilleurs performances indiquées utilisation police grasse table temps exécution consommation mémoire ACMINER prototype approche niveau particulièrement pénalisée importance consommation mémoire Excepté données génomiques chess temps exécution surpassent clairement DEFME titre information figure gauche indique vitesse DEFME selon différents seuils support minimal Cette figure représente nombre motifs minimaux calculés seconde Concernant consommation mémoire DEFME comme prévu efficace algorithmes certains augmenter quantité mémoire disponible suffirait traiter données difficiles ACMINER peuvent traiter données génomique mémoire seuils support minimal pourtant élévés précisément figure droite représente rapport entre utilisations mémoire DEFME selon seuil support remarque grâce rapport explose mémoire Rappelons DEFME travaille mémoire bornée limité faibles seuils support Extraction chaînes minimales cette section adoptons formalisme chaînes utilisé notre exemple récurrent avons comparé notre algorithme extraction chaînes minimales prototype permet extraire motifs libres fixant paramètre profondeur challenge ecmlpkdd2004 Soulet Rioult Ratio vitesse extraction gauche consommation mémoire droite DEFME prototype MAXMOTIF fourni Takeaki extrayant motifs minimaux Notre comparer taille représentations condensées fondées chaînes minimales celles utilisant chaînes maximales avons reporté temps exécution MAXMOTIF développé DEFME expérimentations effectuées chromosom msnbc dépôt apprentissage automatique figure reporte quantités chaînes chaînes minimales chaînes maximales extraites chromosom gauche msnbc droite selon seuil support minimal nombre chaînes augmente lorsque seuil diminue représentations condensées minimaux deviennent particulièrement intéressantes faibles seuils support nombre chaînes minimales clairement grand celui chaînes maximales écart aussi important motifs libres fermés seuils supports écart moyennes longueurs entre minimaux maximaux chromosom trois msnbc Travaux relatifs collection motifs minimaux forme représentation condensée grand nombre représentations condensées proposées littérature Calders Hamrouni motifs fermés Pasquier motifs libres Boulicaut motifs essentiels Casali motifs dérivables Calders Goethals idées fondatrices représentations condensées classes équivalences souvent issues opérateur fermeture Hamrouni principe inclusion exclusion Comme principe fonctionne fréquence article données accompagnent MAXMOTIF research codes mlearn Extraire motifs minimaux efficacement profondeur Nombre chaînes chromosom gauche msnbc droite focalisé uniquement motifs minimaux considérant classes équivalence particulier comme indiqué aupravant système minimi sable correspond exactement itemsets libres fréquence chaque itemset calculée utilisant cardinalité opérateur couverture Remplacer opérateur couverture conduit nouveau système minisable ensembles motifs minimaux itemsets essentiels fréquence disjonctive itemset alors extraction motifs minimaux nombreuses applications seulement utilisée accélérer obtention motifs fréquents Leurs propriétés utiles taines tâches exemple motifs minimaux utilisés conjonction motifs fermés produire règles redondantes informatives Pasquier règles séquentielles bénéficient également minimalité aussi possible exploiter motifs minimaux extraire règles classification éléments classifieurs associatifs Notre cadre adapté extraire telles règles classification satisfont mesure intérêt impliquant quences Supposons ensemble objets répartisse classes disjointes confiance règle classificationX class1 généralement facile montrer importe quelle mesure fondée quences dérivée couvertures positive négative motifs essentiels utiles dériver traverses minimales correspondent tement motifs maximaux Rappelons génération traverses minimales problème important nombreuses applications logique intelligence artificielle apprentissage Eiter Gottlob Murakami représentations condensées motifs minimaux limitées seules mesures impliquant fréquence langage itemsets effet aussi possible extraire motifs minimaux adéquats fonctions agrégat comme Soulet Rioult Soulet Crémilleux systèmes minimisables ensembles également adaptés telles mesures exemple considérons fonction covmin retourne toutes valeurs possibles inférieures Cette fonction opérateur couverture covmin système minimisable ensembles motifs adéquats correspondent motifs minimaux précédent système ailleurs valeur retouvée cette manière covmin approche similaire fonctionne parallèle plusieurs études étendu notion générateurs prendre compte autres langages comme séquences graphes Malheureusement aucun travail propose cadre général étendre minimalité large famille langages comme motifs fermés Arimura article avons connexion entre systèmes ensembles seulement langages itemsets chaînes manque place nombreux autres langages peuvent représentés utilisant forma lisme systèmes ensembles particulier langages décrits Arimura conviennent opérateurs fermetures décrits auparavant itemsets peuvent étendus langages Conclusion proposant notion nouvelle système minimisable ensembles papier étend paradigme motifs minimaux large spectre fonctions langages cadre globe principales méthodes comme motifs libres essentiels DEFME extrait motifs minimaux bases données difficiles algorithmes échouent faute mémoire suffisante expérimentations aussi montré concept minimalité avère intéressant représenter manière concise totalité motifs appuyant nouveau motif chaîne minimale pensons notre implémentation améliorée difficile trouver compromis entre méthode générique vitesse voulons particulièrement tester capacité motifs minimaux générer règles classification types données encore explorés Ensuite intéressant utiliser règles minimales construire classifieurs Références Arimura Polynomial delay polynomial space algorithms mining closed sequences graphs pictures accessible systems Boulicaut Bykowski Rigotti Approximation frequency queries means Volume Springer Calders Goethals Depth first derivable itemset mining Calders Rigotti Boulicaut survey condensed representations frequent Constraint Based Mining Inductive Databases Volume Springer Extraire motifs minimaux efficacement profondeur Casali Cicchetti Lakhal Essential patterns perfect cover frequent patterns DaWaK Volume Springer Eiter Gottlob Hypergraph transversal computation related problems logic JELIA Volume Springer Efficient mining frequent sequence generators Hamrouni roles closed minimal generators concise representa tions frequent patterns Intell Minimum description length principle Generators preferable closed patterns Press Integrating classification association mining concise representation frequent itemsets using generators positive border Knowl Mining ranking generators sequential patterns redundant sequential rules theory algorithm Murakami Efficient algorithms dualizing large scale hypergraphs ALENEX Pasquier Bastide Taouil Lakhal Efficient mining association rules using closed itemset lattices Soulet Crémilleux Adequate condensed representations patterns Knowl Discov Szathmary Valtchev Napoli Godin Efficient vertical mining frequent closures generators Volume Springer Generating redundant association rules Zhang FOGGER algorithm graph generator discovery Summary While maximal patterns equivalence classes received attention minimal patterns remained shadows particular because their difficult extraction paper present generic framework minimal patterns mining introducing concept minimizable system framework addresses various languages itemsets strings different metrics frequency minimizable system introduce minimality checking incorporate depth first search algorithm mining minimal patterns demonstrate polynomial delay polynomial space Experiments traditional benchmarks complete study