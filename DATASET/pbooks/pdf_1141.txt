gration efficace arbres cision utilisation index bitmap Favre Fadila Bentayeb Laboratoire Avenue Pierre Mende France 69676 CEDEX cfavre bentayeb lyon2 sentons article nouvelle approche fouille permet appliquer algorithmes construction arbres cision pondant objectifs traiter bases volumi neuses temps traitement acceptables premier objectif atteint grant algorithmes utilisant uniquement outils fournis derniers Toutefois temps traitement demeurent longs raison nombreuses lectures montrons index bitmap duisons taille apprentissage temps traitements valider notre approche avons imple mente thode forme proce stocke Oracle Index bitmap bases donne fouille donne arbres cision performance complexite Introduction application efficace thodes fouille bases donne volumineuses devient enjeu recherche important algorithmes traditionnels fouille donne appliquent tableaux attributs valeurs Zighed tomalala volume bases croissante algorithmes classiques heurtent proble limitation taille moire centrale laquelle donne traite scalabilite capacite maintenir performances malgre accroissement volume donne alors assure optimisant algorithmes Agrawal Gehrke donne Ramesh Dunkel Soparkar autre issue proble consiste duire volume donne traiter phase traitement ralement applique donne chantillonnage Ttoivonen Chauchat Rakotomalala lection attributs Motoda cemment nouvelle approche fouille donne apparue pallier proble limitation taille moire thodes fouille donne Syste Gestion Bases Donne Chaudhuri Ainsi volume donne traite limite taille moire Cette piste recherche conjointement nement trepo donne analyse ligne particulie rement Arbres cision fonde index bitmap effet constitue premie matie gration processus analyse Plusieurs travaux traite gration thodes fouille donne portent extensions langage ation nouveaux rateurs Sarawagi Geist Sattler veloppement nouveaux langages Imielinski Virmani temps quelques diteurs logiciels taines thodes fouille donne extensions langage utilisation Application Programming Interface Oracle Oracle SqlServer Contrairement lutions dessus cents travaux concernant gration thodes arbre cision propose utilisant uniquement outils offerts derniers tables cessaire adapter algorithmes fouille donne environnement Bentayeb Darmont auteurs utilisent relationnelles liser arbres cision cette approche possible traiter grandes bases donne limitation taille Toutefois cette approche sente temps traitement donne nombreuses lectures Bentayeb propose lioration cette approche introduisant phase paration donne remplac table apprentissage initiale table contingence correspondante algorithmes alors adapte appliquer cette table contingence pluto initiale table contingence contient effectifs populations taille ralement rieure celle initiale article proposons nouvelle approche fouille donne consiste duire taille apprentissage temps offrent outil performant index approche originale utilise index bitmap construire arbres cision principe notre approche constats suivants construction arbre cision besoin calculer effectifs populations successives moyen rations comptage rations logiques rations constituent proprie index bitmap Notre consiste indexer apprentissage attributs dictifs attribut effet originalite notre travail repre sentation apprentissage initiale ensemble index bitmap autre associons chaque noeud arbre bitmaps caracte risant populations correspondantes index bitmap sentent diffe rents avantages abord occupent faible espace stockage codage binaire autre posse proprie ressante consiste pondre certains types reque retourner donne sources optimisant ainsi temps ponse possible rations comptage rateurs logiques montrons article reque index bitmap exactement reque cessaire suffisant construction arbres cision valider notre approche avons imple mente thode Induction Decision Quinlan Oracle utilisant index bitmap Favre exploite travers reque montrons utilisation index bitmap permet traiter grandes bases donne limitation taille contrairement thodes classiques moire temps traitement acceptables avons galement alise complexite appuyer sultats rimentaux article organise suivante section introduisons concept index bitmap section veloppons notre thode construction arbres cision utilisant index bitmap montrons application notre approche exemple section sentons imple mentation thode sultats obtenus ainsi complexite valident notre approche terminer concluons indiquons quelques perspectives recherche section Index bitmap finition exemple index bitmap structure donne finie utilise optimiser donne bases donne indexation particulie rement ressant performant cadre reque lection index bitmap attribut faible terme espace occupe Toutes valeurs possibles attribut conside valeur sente table chacune valeurs correspond tableau appele bitmap contient autant uplets sents table Ainsi index efficace lorsque attributs faible nombre valeurs distinctes Chaque repre sente valeur attribut uplet donne chacun codage sence absence traduit uplet sente valeur caracte bitmap illustrer propos rerons article table Titanic Cette table apprentissage quemment utilise application algorithmes fouille donne utilisons titre exemple comme donne relationnelle compose seule table table comporte uplets individus crits quatre attributs Classe Survivant repre sente premiers uplets table Ainsi index bitmap construit attribut Survivant cette table sente suivante Proprie index bitmap posse proprie ressante consiste pondre certains types reque retourner donne elles optimisant ainsi temps ponse possible rations comptage COUNT rateurs logiques agissent bitmaps Conside exemple question Combien hommes surve naufrage navire Celle formule reque Arbres cision fonde index bitmap Classe Survivant Adulte Femme Adulte Homme Enfant Homme Adulte Homme Adulte Femme Adulte Homme Adulte Homme Equipage Adulte Femme uplet Table Titanic index bitmap construit attribut Survivant vante SELECT COUNT Titanic WHERE Survivant Homme ponse cette reque donne basant uniquement index bitmap attributs Survivant parcourir table Titanic consiste effectuer ration entre bitmap associe valeur attribut Survivant bitmap associe valeur Homme attri comptage bitmap sultat permet terminer effectif uplet Survivant Homme Bitmap Survivant Bitmap Homme Notre approche Arbres cision arbres cision thodes fouille donne apprentissage supervise principe construction arbre cision Zighed Rakotomalala suivante partons ensemble population apprentissage initiale constitue racine arbre disposons variables attributs dictifs descripteurs cette lation Chaque individu uplet cette population appartient classes connaissons alablement classes correspondent diffe rentes valeurs attribut objectif construire arbre cision obtenir ainsi permettront finir classe appartenance nouveaux individus fonction leurs caracte ristiques revient segmenter population appren tissage obtenir groupes desquels effectif classe maximise Cette segmentation ensuite applique cursive partitions recherche meilleure partition segmentation revient chercher attribut descriptif discriminant classes exemple algorithme pouvoir discriminant exprime variation entropie Favre tropie Shannon appelle informationnel attribut dictif choisi segmentation senter informationnel maximal chaque segmentation individus population alors partis diffe rents n≈ìuds suivant valeur attribut segmentation lectionne ainsi arbre cision progressivement constitue Arbres cision fonde index bitmap Notre approche permet construire arbres cision exploitant unique outils offerts pondant double objectif appliquer algorithmes construction arbres cision grandes bases donne limitation taille autre obtenir temps traitement acceptables Notre premier objectif atteint grant algorithmes construction arbres cision deuxie objectif atteint utilisant index bitmap apprentissage indexe attributs dictifs arbre cision construit directement partir donne optimise ainsi temps traitement illustrer notre approche avons lectionne thode plicite anmoins notre approche applique autres thodes arbre cision telles moyennant quelques modifications thodes arbres cision particulie rement thode chaque segmenter population choisissant attribut discriminant diffe rentes valeurs permettre nouvelles populations thode attribut discriminant lectionne celui lequel informationnel maximal Chaque arbre caracte distribution effectifs attri Notre consiste utiliser proprie index bitmap permettent trouver facilement cette distribution effet effectifs calculer chaque peuvent obtenus reque index bitmap crivant pluto donne elles effectifs permettent terminer alable entropie Shannon informationnel attribut segmentation lectionne partition construite Construction apprentissage Etant donne apprentissage initiale construisons index bitmap attributs attributs dictifs attribut celle ensemble index bitmap constitue alors nouvelle apprentissage Conside nouveau exemple table Titanic apprentissage permet terminer individu aurait surve naufrage Titanic fonction classe navire quipage enfant adulte homme femme attribut Survivant trois attributs dictifs Classe Ainsi exemple apprentissage conside repre sente tableau revient conside repre sentation disjonctive comple Arbres cision fonde index bitmap population effet coder manie binaire chacune valeurs distinctes ensemble attributs repre senter apprentissage ensemble index bitmap permet duire taille apprentissage temps traitement montrons comment seules informations contenues index bitmap permettent construire arbres cision uplet Classe Equipage Enfant Adulte Femme Homme Survivant apprentissage ensemble index bitmap Titanic Construction arbre cision Construction racine racine caracte effectifs attribut tenir compte valeurs diffe rents attributs dictifs construire racine conse quent obtenir diffe rents effectifs attribut effectuer simple comptage chacun bitmaps index attribut Ainsi Titanic racine termine selon figure Construction racine Construction quelconque termination distribution effectifs attribut quelconque trois tapes Caracte riser population courant unique bitmap Chacun n≈ìuds descendant directement racine caracte bitmap correspondant valeur attribut segmentation courant autres n≈ìuds bitmap sultat plusieurs rations traduisent construction Favre conside valeurs prises attributs segmentation successifs racine jusqu courant Caracte riser population courant chaque valeur attribut bitmap sultat Appliquer rateur entre bitmap caracte ristique population courant chacun bitmaps index attribut terminer effectifs attribut courant revient faire comptage chacun bitmaps sultats bitmaps sultats repre sentent diffe rentes populations courant tenant compte valeur attribut Avant ation chaque nouvelle partition attribut lectionne effectuer segmentation correspond celui dispose informationnel maximal informationnel correspondant variation entropie directement calcule partir index bitmap effet calcul entropie cessite terminer diffe rents effectifs effectuer comptages Comme avons montrer demment comptages peuvent faits manie efficace utilisant index bitmap Ainsi partition optimale construite utilisant index bitmap seulement choix attribut segmentation travers calculs entropie galement partition construction diffe rents n≈ìuds notre exemple calcul informationnel indique attribut conside segmentation racine Suivant thode propose alors caracte riser populations bitmaps ensuite calculer effectifs correspondants uplet Homme Survivant uplet Homme Survivant Bitmaps caracte risant hommes ayant ayant surve agissant valeur Femme attribut obtient alors segmentation sente figure proce alors autres n≈ìuds jusqu obtenir arbre cision final Validation Imple mentation valider notre approche avons imple mente thode compatible Oracle aucune extension langage Cette imple mentation Arbres cision fonde index bitmap Arbre cision obtenu segmentation selon attribut prend forme proce stocke nomme Bitmap package proce dures appele BITMAP DECISION Cette proce permet ensemble index bitmap autre construire arbre cision construire arbre cision effectifs diffe rentes populations tenus reque utilisant fonction COUNT reque donne sources puisqu elles applique directe index bitmap effet optimiseur Oracle utilise ralement index arbres duire temps ponse cution reque possible forcer utilisation index bitmap construits proce Bitmap construit arbre cision structure stocke table sultats Cette table contient chacun n≈ìuds identifiant effectifs ainsi parent cution reque rarchique cette table sultats permet retrouver structure arbre duire alors parcourant chemins relient feuilles racine sultats rimentaux comparer performances notre approche aussi thodes fouille donne classiques moire thode utilisant relationnelles Bentayeb Darmont approche utilisant index avons effectue tests Titanic temps tement volumes donne soient significatifs avons augmente taille dupliquant uplets avons compare temps traitement notre thode utilise index bitmap Bitmap obtenus imple mentation logiciel Sipina Sipina thode utilisant relationnelles autre tests effectue ordinateur disposant moire Comme pouvons observer sultats obtenus montrent efficacite thode Bitmap rapport puisque temps traitement moyenne ailleurs temps Bitmap augmentent taille Sipina certain volume donne configuration rielle utilise tests Sipina incapacite construire arbre cision demande lyon2 download decision Favre contrairement Bitmap Concernant sultats obtenus Sipina avons introduit temps chargement parti culie rement selon taille celle Quant index avons constate temps ation derniers temps traitement global temps maintenance serait prendre compte Cependant cette maintenance pendante traitement contrairement temps chargement current thodes moire partie grante traitement Lorsque donne tiennent moire Sipina performant notre approche fonde index bitmap trouve grand lorsque volume donne important sentant temps traitement acceptables Temps traitement fonction taille Etude complexite complexite suivante permet confirmer sultats rimentaux obtenus Cette point orique raisonnons occurence supposons index tiennent moire Soient nombre uplets initiale nombre attributs longueur moyenne chaque attribut nombre moyen valeurs attribut ressons abord taille bases apprentissage Etant donne notations adopte taille initiale notre approche alable construction arbre population prentissage constitue ensemble index bitmaps construits chacun attri index bitmaps moyenne bitmaps index Chaque bitmap taille taille ensemble index bitmaps terme taille apprentissage temps gement approche index bitmaps avantageuse correspond majorite ressons temps passe lecture donne conside unite temps nombre total n≈ìuds niveau profondeur approxime puisque nombre moyen valeurs attributs effet hypothe arbre cision quilibre complet Arbres cision fonde index bitmap nombre attributs dictifs restant conside niveau apprentissage attribut restant approches cadre approche classique taille apprentissage approxime Ainsi niveau temps lecture exprime suivante unite temps obtient alors construction ensemble arbre temps cadre approche utilisant bitmaps taille index approxime niveau profondeur arbre attribut dictif donne nombre index pouvoir terminer niveau suivant Ainsi niveau temps lecture approche index bitmap exprime suivante donne construction ensemble arbre valuer construit ratio temps approche classique temps approche index bitmap veloppement conside polyno degre complexite complexite effet gligeable Notre approche index bitmap ressante ratio rieur correspond majorite Conclusion perspectives article avons propose nouvelle approche gration thodes fouille donne apport majeur notre approche offre solution proble fouille grandes bases donne permet traiter bases apprentissage limitation taille autre obtenir temps traitement acceptables Notre approche construire arbres cision travers reque utilisant index bitmap extension langage contrairement approches fouille donne propose litte rature apprentissage initiale remplace ensemble index bitmap effectifs diffe rentes populations arbre cision obtenus facilement application rations logiques comptage bitmaps Ainsi cessaire donne valider notre approche avons imple mente thode forme Favre proce stocke compatible Oracle tests avons alise montrent temps traitement notre approche augmentent taille contrairement thodes fouille moire sommes limite taille bases traiter outre notre thode sente temps traitement acceptables lorsque volume donne augmente sensiblement avons galement alise complexite permet terminer quelles conditions notre approche pertinente travail ouvre nombreuses perspectives recherche projetons tester notre approche bases donne elles mesurer impact terme performance parame nombre attributs cardinalite ailleurs notre approche facilement adapte autres thodes arbres cision exemple suffit utiliser rateur logique cadre thodes utilisant regroupement modalite rences Agrawal Mannila Srikant discovery association rules Advances Kowledge Discovery Mining Bentayeb Darmont Efficient integration mining techniques DBMSs International Database Engineering Applications Symposium Bentayeb Darmont Decision modeling relational views XIIIth International Symposium Methodologies Intelligent Systems Chauchat Rakotomalala sampling strategy building decision trees large databases Conference International Federation Classification Societies Chaudhuri mining database systems Where intersection Engineering Bulletin Providing Analytical Processing useranalysts mandate Technical report Dunkel Soparkar organization access efficient mining Gehrke Ramakrishnan Ganti Rainforest framework decision construction large datasets International Conference Large Bases Geist Sattler Towards mining operators database systems Algebra implementation International Workshop Databases ments Information Fusion Information Integration Mining Databases Koperski Zaiane mining query language relational databases SIGMOD Workshop Research Issues Mining Knowledge Discovery Arbres cision fonde index bitmap intelligent miner scoring software iminer scoring Imielinski Virmani query language database mining DataMining Knowledge Discovery International Journal Motoda Feature selection knowledge discovery mining Kluwer Academic Publishers Psaila operator mining association rules Journal Oracle Oracle mining White paper Quinlan Induction decision trees Machine Learning Ramesh Maniatty Indexing access methods database mining SIGMOD Workshop Research Issues Mining Knowledge Discovery Sarawagi Thomas Agrawal Integrating mining relational database systems Alternatives implications SIGMOD International Conference Management Performance study microsoft mining rithms Technical report Microsoft Toivonen Sampling large databases association rules International Conference Large Bases Bentayeb Darmont Boussaid gration efficace thodes fouille donne Journe Francophones traction Gestion Connaissances Zaniolo Atlas small complete extension mining streams Proceedings Conference Zighed Rakotomalala Graphes induction Apprentissage Mining Hermes Science Publication Summary propose paper original method apply mining algorithms namely decision based methods taking account processed tabases processing consists constructing decision within using bitmap indices Indeed bitmap indices useful properties count operations sufficient build decision trees addition using bitmap indices access implies clear improvements terms processing