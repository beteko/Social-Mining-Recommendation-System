Detecting Academic Plagiarism Graphs Einoshin Suzuki Informatics Kyushu University Japan kyushu suzuki kyushu Abstract paper tackle problem detecting academic plagia which considered severe problem owing convenience publishing Typical information retrieval methods stopword based methods ngerprinting methods commonly detect plagiarism using sequence words appear article detect plagiarism author reconstructs source article ordering combining phrases Because graph structure representing relationships between entities propose novel plagiarism detection method which graphs represent documents modeling grammatical relationships tween words Experimental results proposed method outperforms methods increases recall values Introduction Online publishing provides platform researchers share their research results while brings severe effect academic plagiarism problem students searchers content passages others papers without appropriate citation Howard editors proceedings journals discover plagiarism behaviors limitation quantity publications matic detection method editors mitigate problem Existing methods plagiarism detection evaluate document similarities using content words Gustafson Zobel stopwords Stamatatos ngerprints Croft Schleimer common information retrieval methods Grman Ravas Gustafson Zobel stopwords regard remaining content words meaningful words methods sequences content words represent document Stamatatos considers plagiarist replace content words avoid detection proposed represent documents removing content words retaining stopwords Croft Schleimer hashes length chunks document ngerprints directly copying paraphrasing passages without citation considered demic plagiarism Howard Rosamond detect plagiarized uments where paraphrases other documents ordering phrases altering existing approaches sequences words appear ument represent document detect plagiarism Detecting Academic Plagiarism Graphs detect plagiarism consider representing document modeling tionships between pairs words document capturing relationships among words still detect plagiarism plagiarist largely alters order phrases paper propose novel plagiarism detection method representing documents graphs method document transformed graph structure according syntac tical relationships between words detect plagiarism graphs contain similar subgraphs Experimental results method effective existing methods detecting paraphrasing plagiarism Motivation Problem nition Motivation Consider example shown Table where excerpt Malik wrote ordering phrases adding removing words without altering content Texts depict concept different expressions their sentences constructions regard texts source document plagiarized document respectively Example source plagiarized documents Source propose novel approach perceptual grouping problem vision approach extract global impression image treat image segmentation graph partitioning problem propose novel global criterion normalized segmenting graph Plagiarism paper treat image segmenta perceptual grouping vision graph partitioning problem extract global pression image propose novel global criterion segmenting graph called normalized categorize existing methods typical methods Grman Ravas Gustafson Zobel ngerprinting methods Schleimer Croft stopword based method Stamatatos typical methods often evaluate similarity documents splitting sequences words speci length comparing number common words Since order phrases Table largely changed which decreases number common words between sequences typical methods detect plagiarism existing ngerprinting methods Schleimer Croft represent document using hashes length chunks characters words chunks Schleimer Croft consider grams adding removing small number words alters hashing result making ngerprinting methods effective detecting plagiarism where plagiarist largely order words phrasing Croft Stamatatos discards content words Suzuki document proposed stopword grams method Since order stopwords changed Table effective detecting plagiarism example motivated invent plagiarism detection method where representation document based relationships among words instead their occurrence positions Precisely speaking graphs model grammatical relationships between pairs words method represents syntactical structures documents method detect plagiarism words document arranged shown Figure texts Table different their graph structures similar transformation segment treat propose solve graph vision segmentation problem image impression extract propose approach criterion Graph treat segment segmentation problem vision impression graph propose image extract criterion Graph example modeling documents graphs nition Plagiarism Detection formalize problem consider monolingual plagiarism detection input source documents Dsusp suspicious documents minimum number common nodes candidate subgraph maximum length which discuss following section Given source suspicious document decide whether there exist plagiarized passages suspicious document discover their corresponding source passages plagiarized passages exist adopt nition Potthast plagiarism tuple contains passage document plagiarized version certain source passage document Given plagiarism detector detect reporting plagiarism detection consists allegedly plagiarized passage document source detection detects Proposed Approach Overview transform document graph which syntactical relationships among words preserved After transformation similar texts expected similar structures propose similarity measure graph matching algorithm approach includes procedures detection processing trans formation matching processing steps processing obtain lemmas offsets lengths words resolve coreference relations pronouns Stanford Detecting Academic Plagiarism Graphs Algorithm Transforming document graph Input document which contains sentences Output graph dependency relations foreach switch nsubj nsubj break xsubj xsubj break break agent agent break break prepc prepc break partmod parmod break MergeNodes return CoreNLP Klein Manning Raghunathan discuss transfor mation matching steps sections respectively processing transform discovered pairs similar subgraphs their corresponding passages plagiarized passage including words located range minimal maximal offsets words among nodes subgraph suspicious document source document simplify discus sions obtain results Dsusp performing nsuspnsrc where nsusp represent numbers documents Dsusp respectively suspicious document source document dsusp respectively graphs generated dsusp transformation respectively directed graphs nodes edges labels representing words denote nodes edges respectively denote labels respectively abbreviated there ambiguity Transformation Graphs think nouns essential elements sentence verbs prepositions usually related nouns intuitively regard nouns nodes verbs prepositions edges transformation Intuitively speaking preposition relating nouns create directed between Instead deriving directly positions derive graph representation modeling grammatical relationships between words Algorithm shows overview transforming sentences document graph invent procedures lines generate nodes edges Suzuki Function Input relation where denotes string combining preposition underscore prep_into relations sentence belongs graph Output Updated graph rFindDobj rFindNsubj rFindNsubjpass while Insert inserting check there exists among existing labels preposition after underscore Insert based grammatical relationships dependency relations explained later After graph generated further merge nodes according their coreference relationships identify grammatical relations between nouns Stanford parser version Klein Manning which provides Stanford typed dependency relations Manning dependency relation simple description grammatical relationship between words format triples which represents matical relation between governor dependent sentence composed ordered dependency relations instance given sentence Community detection problem clustering nodes graph communities obtained relations relation clustering nodes indicates nodes direct object clustering Relation prep_into clustering communities indicates munities accompanied prepositional clustering Because dependency relations necessarily contain nouns preposition representing relationship between nouns refer multiple tions obtain related nouns their corresponding preposition cases intuition behind heuristic rules capture nouns possible subjects objects complements sentences Speci cally speaking pairs nodes where associated preposition searching relations nsubj nsubj consider dependency relations involved subject object complement sentence include relations nsubj xsubj agent prepc 1Suppose merged counterpart adjacent edges neglect graph Detecting Academic Plagiarism Graphs partmod relations corresponding searching shown Algorithm Function shows related words given relation where prepositional function denotes governor relation rFindDobj returns relations located front whose Similarly rFindSubj rFindNsubjpass relation relations function generate subgraph sentence community given relations clustering nodes prep_into clustering communities heuristic rules shown Figure Graph Matching texts similar their transformed graph structures expected similar interpret plagiarism detection discovery similar subgraphs paper Below similarity subgraphs propose discovery algorithm Similarity nition diversity natural language expressions nition exact match limits ability discovering similar subgraphs application detect similar texts different graphs consider inexact matching nition similar subgraphs Consider sentences TextRunner system which extracts relational tuples TextRunner extracts relational tuples notice there exist additional words system sentence sentences still meaning because additional words between common words TextRunner tuples additional words function graph level common words common nodes additional words uncommon nodes similar subgraphs allowing uncommon nodes exist between common nodes subgraph subgraph respectively Consider common nodes being Subgraphs similar subgraphs satisfy Similarity Similarity similar where common nodes common nodes nodes common nodes represents shortest between Since there exist uncommon nodes consider similarity paths instead edges nition Similarity shortest shortest paths similar 2nsubj nsubjpass xsubj prepc partmod represent nominal subject passive nominal subject direct object controlling subject indirect object prepositional clausal participial respectively 3FindDobj returns relations located other rules simplify explanation ignore problem synonyms consider synonyms words approach checking synonym WordNet Miller other words synonym labels edges there shortest paths check Suzuki Algorithm Overview discovery algorithm Input suspicious graph source graph Output Pairs similar subgraphs between common nodes there mapping relationship between while PopSeeds PopSeeds included match SimNodesNum output denotes where common nodes while represents uncommon Similarly similarity between consider maximum number uncommon nodes allow paths maximum length paths labels edges uncommon nodes allowed dissimilar subgraphs Therefore threshold determine length between common nodes reasons numbers edges those different comparing Furthermore shown sentences consider plagiarist breaks sentence apart inserting phrases clauses preposition inserted phrases connecting common believe important others Discovery Algorithm discover pairs maximal similar subgraphs between suspicious graph source graph algorithm nitions previous section determine whether common nodes similar common nodes similar further seeds search their proximity enlarge concatenating newly found subgraphs which common nodes respectively Algorithm shows overview discovery algorithm pairs common nodes match other nodes matched nodes mapping relationship Given common nodes search their maximal similar subgraphs match Since compare common words beginning texts PopSeeds returns common nodes their order returned subgraph common nodes fewer threshold consider trivial discovery discard checked function SimNodesNum SimNodesNum returns number common nodes between subgraphs Function match shows search maximal similar subgraphs strat check whether expand subgraph common subgraph common nodes until common nodes included graph Detecting Academic Plagiarism Graphs Function match Input nodes length Output Nodes subgraphs estimate passage candidate subgraph nodes which information character offsets lengths generate nodes implementation repeat FindCandiNodes foreach there exists between there exists between included PathSim until return FindCandiNodes common nodes within length underlying graphs obtained replacing directed edges undirected edges example FindCandiNodes returns adjacent nodes common nodes undirected version PathSim check similarity between similarity between PathSim returns either returns false otherwise Experiments compare method naive grams method which content words representation document state method called stopword grams method Stamatatos which upper threshold length allowed passage author suggests examine values naive grams method experiments results consider their performances method which threshold deciding minimal number common nodes required output subgraph large value implies uncommon words allowed included pairs similar subgraphs avoid discovery dissimilar passages small value Suzuki Evaluation Metrics citation network experiments where record article generally assigned information authors venue abstract erences publication citation network prepare DBLP1 DBLP2 examine performances methods whole content document plagiarized content document plagiarized respectively DBLP1 select papers which published proceedings conferences their abstracts documents experi ments document prepare corresponding plagiarized document splitting sentences organizing ordering phrases without altering content adding minor words randomly replacing nouns verbs words their synonym WordNet Miller abstracts papers cited papers obfuscation suspicious documents Dsusp include plagiarized documents Dsusp where which plagiarized documents which plagiarized documents DBLP2 source documents DBLP1 There suspicious documents among which documents partially plagiarized plagiarized documents respectively sentences partially plagiarized documents extracted document corresponding document measures precision recall granularity overall metric combining cision recall granularity PlagDet which proposed plagiarism detection Potthast evaluate experimental results denote plagiarisms suspi cious documents corpus denote plagiarism detections detector reports simplify notation plagiarism represented references characters passages Similarly plagiarism detection represented where detects otherwise score precision represents detected passages plagiarized passages score recall represents detector identi plagiarized passages Because plagiarism detectors report overlapping multiple detections single plagiarism granularity measure besides precision recall granularity thast where cases detected detections detections score granularity represents segments reported detections plagiarized passage Combining precision recall granularity PlagDet PlagDet where Values precision recall PlagDet except granularity range minimum ideal value granularity Experimental Results Figures experimental results DBLP1 DBLP2 spectively gures method outperforms naive grams method experiments detecting wholly partially plagiarized passages Detecting Academic Plagiarism Graphs Precision Recall PlagDet Granularity Proposal grams grams DBLP1 results Precision Recall PlagDet Granularity Proposal grams grams DBLP2 results Experimental results DBLP1 DBLP2 Although method larger tendency obtain overlapping results which observed values granularity method achieves higher scores precision recall PlagDet method shows competitiveness detecting plagiarized passages which largely ordering words phrases comparing gures observe methods obtain favorable sults DBLP1 experiments DBLP2 experiments because problem detecting documents partially plagiarized contents intuitively challenging problem detecting documents their contents plagiarized other documents Despite culty problem results method still superior those grams method examine graphs transform generated graph occasionally connected graph diversity natural language expressions Since method detects plagiarized passages searching common nodes along paths graph disconnected graphs cause unsuccessful detections plagiarized passages probably method achieve higher scores recall However method still effective detecting plagiarism ordered constructed compared existing methods showing advantage modeling relationships between words graph structure Conclusions Future proposed method detecting plagiarism representing documents graphs transform documents graphs according grammatical relationships between words discover pairs similar subgraphs which detection plagiarism Experi mental results method largely improves recall values effective detecting paraphrasing plagiarism existing methods future consider comparing method other graph based methods detect software plagiarism GPLAG analyzing proposal scales respect number documents consider extension method patent infringement Suzuki Function agent rFindNsubjpass whileR Insert Function partmod relations whosewgov whileR Insert Function nsubj FindDobj whileR Function xsubj FindPrep whileR1 Insert FindDobj whileR2 Insert Function rFindNsubj whileR Insert Function prepc rFindDobj rFindNsubj rFindNsubjpass FindDobj whileR whileR Insert FindDobj whileR Rules functions agent partmod nsubj xsubj prepc Acknowledgments supported KAKENHI Grant Number 24800049 21300053 References Marneffe Manning Stanford Typed Dependencies Represen tation CrossParser Grman Ravas Improved Implementation Finding Similarities Large Notebook Detecting Academic Plagiarism Graphs Gustafson Nowhere Finding Plagiarized ments Based Sentence Similarity Zobel Methods Identifying Versioned Plagiarized ments Technol Howard Plagiarisms Authorships Academic Death Penalty College English Klein Manning Accurate Unlexicalized Parsing GPLAG Detection Software Plagiarism Program Dependence Graph Analysis Miller WordNet Lexical Database English Commun Potthast Stein Barrón Cedeño Rosso Evaluation Framework Plagiarism Detection COLING Raghunathan Rangarajan Chambers Surdeanu Jurafsky Multi Sieve Coreference Resolution EMNLP Rosamond Plagiarism Academic Norms Governance Profession Politics Schleimer Winnowing Local Algorithms Document Fingerprinting SIGMOD Croft Local Reuse Detection SIGIR Malik Normalized Image Segmentation Trans Stamatatos Plagiarism Detection Based Structural Information Zhang Zhang ArnetMiner Extraction Mining Academic Social Networks Résumé article intéressons probléme détection plagiats monde académique véritable notamment raison facilité accès publications Internet méthodes classiques recherche information couramment utilisées détection plagiat basent vides identi cation signatures utilisent séquences présentent articles approches détectent conséquent situations plagiat lorsqu auteur reconstruit ticle réordonnant réorganisant phrases contexte structure graphe adaptée représenter relations entre entités proposons ainsi nouvelle méthode détection plagiat laquelle utilisons graphes représenter documents modélisant relations grammaticales entre résultats expérimen montrent méthode proposons dépasse méthodes grammes augmente rappel valeurs allant