actes_non_num 351rotes extraction motifs fermés relations aires bruitées jérémy besson françois boulicaut université liris umr5205 69621 villeurbanne france prénom liris résumé extraction motifs fermés relations binaires étudiée cependant nombreuses relations intéressantes aires bruitées nécessité tolérance exceptions récemment problèmes traités indépendamment introduisons notre proposition combiner telles fonctionnalités algorithme introduction fouille relations binaires étudiée notamment usages multiples ensembles fermés fréquents cependant courant données traiter représentent relations aires semble naturel vouloir étendre calcul motifs fermés contexte jaschke 2008b relations binaires calcul ensembles fermés concepts formels selon ganter savons nombre qualité motifs extraits probléma tiques nombreuses raisons erreur mesure peuvent mener absence couple relation véritable motif donne plusieurs motifs fermés distincts petits quand quantité bruit augmente nombre motifs fermés explose pertinence dégrade cette situation empire dramatiquement lorsque arité relation fouiller augmente introduisons algorithme calcul motifs fermés ayant nombre borné exceptions élément importe attribut importe quelle relation article version courte 2008a notion ensemble fermé domaines attributs relation attributs appelons motif hyper nombre uplets absents ensemble fermé désigne extension naturelle notion concept formel relations aires quand ensemble fermé satisfait contraintes contrainte connexion celle fermeture vérifie contrainte connexion notée fermé satisfait contrainte extraction motifs fermés relations aires bruitées relationre notée ensemble fermé ensembles fermés adaptés découverte connaissance lations bruitées effet contrainte connexion pratique forte posons affaiblir seuils tolérance exceptions vérifie nouvelle contrainte connexion etant donné motif seuil tolérance exceptions importe élément intérieur motif attribut nombre maximal uplets autorisés absents relation lorsque définir ensemble fermé utilisation conduit renforcer contrainte fermeture satisfait nouvelle contrainte fermé lorsque ensemble fermé généralisation ensemble fermé tolérant moins exceptions fonction seuils exemple table montre relation ternaire notée chaque indique sence triplet correspondant exemples ensembles fermés exemple ensemble fermé effet hyper plans contient triplet absent fermé quelque élément ajouterait contrainte serait violée ajoutait aurait exploiter contraintes présentons mécanismes calcul efficace ensembles fermés adoptons principe arbre énumération utilisé exemple 2008b arbre binaire chaque élément énuméré motifs seront issus gauche contiendront alors motifs seront issus droit contiendront certain contrainte jamais vérifiée motifs issus courant pourra procéder élagage exploitons contrainte fermeture cette manière puisqu monotone signifie grand motif pourrait extrait partir courant suivant branches gauches vérifie aucun motif vérifie contrainte monotone contrainte connexion lorsque petit motif pourrait extrait partir courant suivant branches droites vérifie implique aucun motif courant vérifie meilleures performances effectue détaillé dessus avance plutôt élaguer duquel découlerait aucun motif satisfaisant éviter générer retirant niveau élément respondant espace recherche parle alors propagation étant donné appelons petit motif pourrait extrait partir borne férieure grand motif pourrait extrait partir borne supérieure représente espace recherche éléments reste énumérer matérialisés chaque arbre identifié couple dirons représente ensemble motifs compris entre ensemble élément simplifier désignera motif obtenu ajoutant écrirons parlerons motif règle élagage alors élagué effet aucun ensemble serait vérifie effet peuvent étendus élément satisfaisant prémisse règle grand entre monotone règle propagation alors retiré effet aucun motif serait contiendrait élément vérifie petit entre monotone appliquer règles chaque arbre énumération permet extraire ensembles uniquement évitant explorer grandes parties espace recherche cependant calcul application règle élevé effet ments doivent testés ensemble grand grande majorité nœuds feuilles ensemble réduit remarquant éléments satisfait alors jamais utilisé déclencher mécanisme élagage issue observation vraie satisfait contenter tester éléments règle nouvelle règle élagage alors élagué élément propagé règle ajouté puisque propagation empêche appartenir revanche chaque branche droite arbre énumération extraction motifs fermés relations aires bruitées suivie élément énuméré ajouté comme grandit allant profondeur arbre risque suite satisfaire définition élément ajoute règle purger éléments règle purge alors retiré notre algorithme baptisé parcourt profondeur espace recherche racine initialisé chaque arbre énumération élément énumérer choisi espace recherche partitionné ensembles fermés issus contiendront élément tandis issus contiendront jamais appel récursif chacun nœuds ensembles fermés représentés extraits entrée arbre énumération défini section sortie ensembles fermés représentés règle applique alors alors sortir sinon choisir règle règle algorithme notez choix élément énuméré change sortie influe mément taille arbre énumération parcouru temps extraction faute place détaillons stratégie énumération choisie mécanismes nécessaires implémentation 2008a fournit détails lecteur intéressé discussion besson cheng poernomo gopalkrishnan etude expérimentale considérons protocole expérimental simple quatre ensembles quatre éléments attribut pouvant recouvrir introduits façon aléatoire espace trois quatre dimensions contenant éléments dimension relation ainsi générée rcachée ensuite bruitée façon uniforme chaque uplet probabilité encodé uplet absent rcachée présent versa relation obtenue ensuite fouillée toutes extractions faites noise epsilon epsilon epsilon qualité ensembles fermés extraits noise epsilon epsilon epsilon espace taille cachant ensembles taille noise epsilon epsilon epsilon epsilon espace taille cachant ensembles taille qualité ensembles fermés seuil tolérance exceptions contrainte taille minimale moins éléments chaque attribut ensemble uplets couverts moins ensemble fermé extrait mesure alors qualité collection ensembles fermés expression rcachée rcachée figure représente résultats obtenus relation moins bruitée quelque niveau bruit ensembles fermés extraits meilleur qualité ensembles fermés exacts exemple qualité ensembles fermés exacts alors atteint lorsque excessif explique contraintes tailles nimales faibles figure représente résultats obtenus relation ternaire moins bruitée cette meilleur seuil tolérance exceptions observons prendre compte aspect bruité données revêt autant importance arité grande intérêt tolérance exceptions relations ternaires claire visible lorsque ensembles dercachée grands ainsi ensembles taille espace taille collection ensembles fermés extraits contrainte moins quatre éléments attribut bénéficie cette extraction motifs fermés relations aires bruitées tolérance jusqu niveau bruit permet obtenir qualité presque parfaite alors qualité collection ensembles fermés exacts avantageux fixer constatons relation bruitée important fixer seuil élevé tolérance exceptions conclusion extraction complète motifs fermés relations aires récem étudiée présence bruit données autant désastreuse explosion nombre motifs extraits baisse pertinence arité grande propo algorithme étant donné relation extrait motifs fermés tolérant nombre borné exceptions élément ayant validé données synthétiques réelles travaillons maintenant adaptation calcul quasi cliques graphes dynamiques références besson robardet boulicaut mining fault tolerant pattern alternative formal concept discovery besson boulicaut 2008a calcul motifs fermés tolérants exceptions relations aires bruitées research report liris septembre pages besson robardet boulicaut 2008b peeler contraint based closed pattern mining relations cheng close efficiently mining approximate closed itemsets pattern recovery ganter stumme wille formal concept analysis foundations appli cations volume springer jaschke hotho schmitz ganter stumme trias algorithm mining iceberg lattices mining frequent closed cubes datasets fault tolerant frequent pattern mining problems challenges poernomo gopalkrishnan mining statistical information frequent fault tolerant patterns transactional databases fayyad bradley efficient discovery error tolerant frequent itemsets dimensions sigkdd summary extraction closed patterns binary relations studied extensively never theless relations appear noisy fault tolerance recently these issues independently studied introduce proposal integration functionalities within unique algorithm